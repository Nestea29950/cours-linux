{"appsec-configs": {"crowdsecurity/appsec-default": {"content": "name: crowdsecurity/appsec-default\ndefault_remediation: ban\ninband_rules:\n - crowdsecurity/base-config \n - crowdsecurity/vpatch-*\n - crowdsecurity/generic-*\n", "path": "appsec-configs/crowdsecurity/appsec-default.yaml", "version": "0.2", "versions": {"0.1": {"digest": "2b821a2cbcfdd7fdfd8ada95c00a4c6fdf8ce8a3efb55b1e3cd8eacc0ed418b6"}, "0.2": {"digest": "485710fec31feb36bfdd5a572a5174fd13a0e22ba812dfb78d92e1bfaea79a8d"}}}, "crowdsecurity/crs": {"content": "name: crowdsecurity/crs\ndefault_remediation: ban\n#log_level: debug\noutofband_rules:\n - crowdsecurity/crs", "path": "appsec-configs/crowdsecurity/crs.yaml", "version": "0.2", "versions": {"0.1": {"digest": "e9cbc67cae76d60468e40f54db62c97157e203bc06c412239695c843ef98f987"}, "0.2": {"digest": "fd41693ebf881d1cb561cd6a163c9da47c50c480829efe4ddca74f6ec3847855"}}}, "crowdsecurity/generic-rules": {"content": "name: crowdsecurity/generic-rules\ndefault_remediation: ban\ninband_rules:\n - crowdsecurity/base-config \n - crowdsecurity/generic-*", "path": "appsec-configs/crowdsecurity/generic-rules.yaml", "version": "0.3", "versions": {"0.1": {"digest": "e406c104f040ca39220f610efce241489d64ce0f1654b3fca39a844893ea0840"}, "0.2": {"digest": "265fbcc3008391bb24ca0305e08c2dd0f975ea1c8ab7e542fda431b953603cc1"}, "0.3": {"digest": "fb011e3c38570d29d51af0de461b52ace41f7dbf6c7d8127ff1d1eafe07ab090"}}}, "crowdsecurity/virtual-patching": {"content": "name: crowdsecurity/virtual-patching\ndefault_remediation: ban\ninband_rules:\n - crowdsecurity/base-config \n - crowdsecurity/vpatch-*\n", "path": "appsec-configs/crowdsecurity/virtual-patching.yaml", "version": "0.4", "versions": {"0.1": {"digest": "48a765ded560cf4d8bb405e563411245156b6b2c2fef09e5492e6270f5337bff"}, "0.2": {"digest": "0bf15e1ebed4c94933bf9407d616be22121733ddd327710f7f5b79ec70d52085"}, "0.3": {"digest": "e93cc5d63aae3a83794b0f6b1e41566f53fae059e6044a9519f02256fa6e2adf"}, "0.4": {"digest": "ddad5c18125c5753b23b52f55598911b66effaddc9c02286775061609901dbeb"}}}}, "appsec-rules": {"crowdsecurity/base-config": {"content": "name: crowdsecurity/base-config\n#### This file is intended to provide a basic configuration for coraza:\n#### - Set the body processors based on the content-type\n\nseclang_rules:\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^application/x-www-form-urlencoded\" \"id:100,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=URLENCODED\"\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^multipart/form-data\" \"id:101,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=MULTIPART\"\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^application/xml\" \"id:102,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=XML\"\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^application/json\" \"id:103,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=JSON\"\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^text/xml\" \"id:104,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=XML\"\n - SecRule REQBODY_PROCESSOR \"!@rx (?:URLENCODED|MULTIPART|XML|JSON)\" \"id:105,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=RAW\" #Use our custom RAW body processor, just to have REQUEST_BODY set\n", "path": "appsec-rules/crowdsecurity/base-config.yaml", "version": "0.1", "versions": {"0.1": {"digest": "5ef93f4b19a028f2415afaf570df4d20a5f6038fa94cc990a387662303c2ef20"}}}, "crowdsecurity/crs": {"content": "name: crowdsecurity/crs\nseclang_rules:\n - SecRuleEngine On\n - SecRequestBodyAccess On\nseclang_files_rules:\n - crs-setup.conf\n - REQUEST-901-INITIALIZATION.conf\n - REQUEST-905-COMMON-EXCEPTIONS.conf\n - REQUEST-911-METHOD-ENFORCEMENT.conf\n - REQUEST-913-SCANNER-DETECTION.conf\n - REQUEST-920-PROTOCOL-ENFORCEMENT.conf\n - REQUEST-921-PROTOCOL-ATTACK.conf\n - REQUEST-922-MULTIPART-ATTACK.conf\n - REQUEST-930-APPLICATION-ATTACK-LFI.conf\n - REQUEST-931-APPLICATION-ATTACK-RFI.conf\n - REQUEST-932-APPLICATION-ATTACK-RCE.conf\n - REQUEST-933-APPLICATION-ATTACK-PHP.conf\n - REQUEST-934-APPLICATION-ATTACK-GENERIC.conf\n - REQUEST-941-APPLICATION-ATTACK-XSS.conf\n - REQUEST-942-APPLICATION-ATTACK-SQLI.conf\n - REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf\n - REQUEST-944-APPLICATION-ATTACK-JAVA.conf\n - REQUEST-949-BLOCKING-EVALUATION.conf\n - RESPONSE-950-DATA-LEAKAGES.conf\n - RESPONSE-951-DATA-LEAKAGES-SQL.conf\n - RESPONSE-952-DATA-LEAKAGES-JAVA.conf\n - RESPONSE-953-DATA-LEAKAGES-PHP.conf\n - RESPONSE-954-DATA-LEAKAGES-IIS.conf\n - RESPONSE-955-WEB-SHELLS.conf\n - RESPONSE-959-BLOCKING-EVALUATION.conf\n - RESPONSE-980-CORRELATION.conf\n\ndata:\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/crs-setup.conf\n    dest_file: crs-setup.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-901-INITIALIZATION.conf\n    dest_file: REQUEST-901-INITIALIZATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-905-COMMON-EXCEPTIONS.conf\n    dest_file: REQUEST-905-COMMON-EXCEPTIONS.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-911-METHOD-ENFORCEMENT.conf\n    dest_file: REQUEST-911-METHOD-ENFORCEMENT.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-913-SCANNER-DETECTION.conf\n    dest_file: REQUEST-913-SCANNER-DETECTION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-920-PROTOCOL-ENFORCEMENT.conf\n    dest_file: REQUEST-920-PROTOCOL-ENFORCEMENT.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-921-PROTOCOL-ATTACK.conf\n    dest_file: REQUEST-921-PROTOCOL-ATTACK.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-922-MULTIPART-ATTACK.conf\n    dest_file: REQUEST-922-MULTIPART-ATTACK.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-930-APPLICATION-ATTACK-LFI.conf\n    dest_file: REQUEST-930-APPLICATION-ATTACK-LFI.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-931-APPLICATION-ATTACK-RFI.conf\n    dest_file: REQUEST-931-APPLICATION-ATTACK-RFI.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-932-APPLICATION-ATTACK-RCE.conf\n    dest_file: REQUEST-932-APPLICATION-ATTACK-RCE.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-933-APPLICATION-ATTACK-PHP.conf\n    dest_file: REQUEST-933-APPLICATION-ATTACK-PHP.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-934-APPLICATION-ATTACK-GENERIC.conf\n    dest_file: REQUEST-934-APPLICATION-ATTACK-GENERIC.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-941-APPLICATION-ATTACK-XSS.conf\n    dest_file: REQUEST-941-APPLICATION-ATTACK-XSS.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-942-APPLICATION-ATTACK-SQLI.conf\n    dest_file: REQUEST-942-APPLICATION-ATTACK-SQLI.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf\n    dest_file: REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-944-APPLICATION-ATTACK-JAVA.conf\n    dest_file: REQUEST-944-APPLICATION-ATTACK-JAVA.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-949-BLOCKING-EVALUATION.conf\n    dest_file: REQUEST-949-BLOCKING-EVALUATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-950-DATA-LEAKAGES.conf\n    dest_file: RESPONSE-950-DATA-LEAKAGES.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-951-DATA-LEAKAGES-SQL.conf\n    dest_file: RESPONSE-951-DATA-LEAKAGES-SQL.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-952-DATA-LEAKAGES-JAVA.conf\n    dest_file: RESPONSE-952-DATA-LEAKAGES-JAVA.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-953-DATA-LEAKAGES-PHP.conf\n    dest_file: RESPONSE-953-DATA-LEAKAGES-PHP.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-954-DATA-LEAKAGES-IIS.conf\n    dest_file: RESPONSE-954-DATA-LEAKAGES-IIS.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-955-WEB-SHELLS.conf\n    dest_file: RESPONSE-955-WEB-SHELLS.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-959-BLOCKING-EVALUATION.conf\n    dest_file: RESPONSE-959-BLOCKING-EVALUATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-980-CORRELATION.conf\n    dest_file: RESPONSE-980-CORRELATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/crawlers-user-agents.data\n    dest_file: crawlers-user-agents.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/iis-errors.data\n    dest_file: iis-errors.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/java-classes.data\n    dest_file: java-classes.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/java-code-leakages.data\n    dest_file: java-code-leakages.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/java-errors.data\n    dest_file: java-errors.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/lfi-os-files.data\n    dest_file: lfi-os-files.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-config-directives.data\n    dest_file: php-config-directives.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-errors.data\n    dest_file: php-errors.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-errors-pl2.data\n    dest_file: php-errors-pl2.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-function-names-933150.data\n    dest_file: php-function-names-933150.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-function-names-933151.data\n    dest_file: php-function-names-933151.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-variables.data\n    dest_file: php-variables.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/restricted-files.data\n    dest_file: restricted-files.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/restricted-upload.data\n    dest_file: restricted-upload.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/scanners-headers.data\n    dest_file: scanners-headers.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/scanners-urls.data\n    dest_file: scanners-urls.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/scanners-user-agents.data\n    dest_file: scanners-user-agents.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/scripting-user-agents.data\n    dest_file: scripting-user-agents.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/sql-errors.data\n    dest_file: sql-errors.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/ssrf.data\n    dest_file: ssrf.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/unix-shell.data\n    dest_file: unix-shell.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/web-shells-php.data\n    dest_file: web-shells-php.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/windows-powershell-commands.data\n    dest_file: windows-powershell-commands.data\n    type: modsec", "path": "appsec-rules/crowdsecurity/crs.yaml", "version": "0.4", "versions": {"0.1": {"digest": "786fe3341c0f0a813eb57b7780620181686081e0f181515509290f2e8c042f0b"}, "0.2": {"digest": "19d216b68b3de8a9c03e4d6644f578520b3673096ef55da6d77bf40902a36cab"}, "0.3": {"digest": "cdbc73bed015a54c9b47c90ff636ecaea095a954e0e0f4b0e47cafd19d1fd1c6"}, "0.4": {"digest": "d1e1f48413ff3bca7a13260b2dd111a8a3acc0b5df5a4acc47c3181d3f291b43"}}}, "crowdsecurity/generic-freemarker-ssti": {"content": "name: crowdsecurity/generic-freemarker-ssti\ndescription: \"Generic FreeMarker SSTI\"\nrules:\n  - and:\n    - zones: \n      - RAW_BODY\n      - ARGS\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: 'freemarker.template.utility.execute'\n\nlabels:\n   type: exploit\n   service: http\n   confidence: 2\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"Generic FreeMarker SSTI\"\n   classification:\n     - attack.T1595\n     - attack.T1190", "description": "Generic FreeMarker SSTI", "path": "appsec-rules/crowdsecurity/generic-freemarker-ssti.yaml", "version": "0.3", "versions": {"0.1": {"digest": "4c4466729b2fdebcf23dfd197e2b967c17d79324cfd4245ac3a3d9be6f029df8"}, "0.2": {"digest": "4721a9b2f0ab29d5dfd385101afe5c23c197f59bfa86e82935d3371879768059"}, "0.3": {"digest": "5f731c0099b563a816529755f147b4a4b5d047719f90382e1dc86d39d6ecf558"}}}, "crowdsecurity/generic-wordpress-uploads-php": {"content": "name: crowdsecurity/generic-wordpress-uploads-php\ndescription: \"Detect php execution in wordpress uploads directory\"\nrules:\n  - and:\n    - zones: \n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: regex\n        value: '/wp-content/uploads/.*\\.(h?ph(p|tm?l?|ar)|module|shtml)'\n\nlabels:\n   type: exploit\n   service: http\n   confidence: 2\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"Detect Wordpress PHP execution in uploads directory\"\n   classification:\n     - attack.T1595\n     - attack.T1190", "description": "Detect php execution in wordpress uploads directory", "path": "appsec-rules/crowdsecurity/generic-wordpress-uploads-php.yaml", "version": "0.1", "versions": {"0.1": {"digest": "6f367a1b94adcc96f3494a5703cddb325686b2a9ce1ed31949ca61076d5b80c6"}}}, "crowdsecurity/vpatch-CVE-2017-9841": {"content": "name: crowdsecurity/vpatch-CVE-2017-9841\ndescription: \"PHPUnit RCE (CVE-2017-9841)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /util/php/eval-stdin.php\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PHPUnit RCE\"\n  classification:\n   - cve.CVE-2017-9841\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94", "description": "PHPUnit RCE (CVE-2017-9841)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2017-9841.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0737417a66c5327708f6eff4392a4461002592fabcda6cdbdaa4143bce185503"}, "0.2": {"digest": "6e5549b580c3a35315a6660a2904eafd3b463141d95f1ad2d5d606d55eb0b046"}, "0.3": {"digest": "69404f8a96298652c1fcc8ed6e6c979fd83271c2167cc3af50edb9201bafb092"}}}, "crowdsecurity/vpatch-CVE-2018-1000861": {"content": "name: crowdsecurity/vpatch-CVE-2018-1000861\ndescription: \"Jenkins - RCE (CVE-2018-1000861)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: descriptorByName/org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition/checkScriptCompile\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: securityRealm/user/admin\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Jenkins - RCE\"\n  references:\n    - https://www.youtube.com/watch?v=abuH-j-6-s0&t=7s\n    - https://devco.re/blog/2019/02/19/hacking-Jenkins-part2-abusing-meta-programming-for-unauthenticated-RCE/\n  classification:\n   - cve.CVE-2018-1000861\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502", "description": "Jenkins - RCE (CVE-2018-1000861)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2018-1000861.yaml", "version": "0.1", "versions": {"0.1": {"digest": "c56b770df99a1e84a45f07487a5d0fb031adbcfce8ac8182e56761f1db7ab82b"}}}, "crowdsecurity/vpatch-CVE-2018-10562": {"content": "name: crowdsecurity/vpatch-CVE-2018-10562\ndescription: \"Dasan GPON RCE (CVE-2018-10562)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /gponform/diag_form\n    - zones:\n      - BODY_ARGS\n      variables:\n      - dest_host\n      match:\n        type: regex\n        value: \"[^0-9a-zA-Z-.]+\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Dasan GPON RCE\"\n  classification:\n   - cve.CVE-2018-10562\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "Dasan GPON RCE (CVE-2018-10562)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2018-10562.yaml", "version": "0.2", "versions": {"0.1": {"digest": "65fc92420da5015e64403c4f85bbf53c739fabb1a6d30885ec016d8f7ca6a0b0"}, "0.2": {"digest": "f1c5bc2ea0106e9ea059d5787daa33b8d0b94cc35fca876d9440ac8d876a3254"}}}, "crowdsecurity/vpatch-CVE-2018-13379": {"content": "\nname: crowdsecurity/vpatch-CVE-2018-13379\ndescription: \"Fortinet FortiOS - Credentials Disclosure (CVE-2018-13379)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /remote/fgt_lang\n    - zones:\n      - ARGS\n      name: lang\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: ../\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Fortinet FortiOS - Credentials Disclosure\"\n  classification:\n   - cve.CVE-2018-13379\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "Fortinet FortiOS - Credentials Disclosure (CVE-2018-13379)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2018-13379.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ba93fe996423dae1e4257edf61a7f6132435c3426bf505e4671c80bdc8f81f21"}, "0.2": {"digest": "9bf82942934e361e21ea6b2a2ff5e8479aea84d7c20be3d2c8ddb7e09bfcd336"}}}, "crowdsecurity/vpatch-CVE-2018-20062": {"content": "name: crowdsecurity/vpatch-CVE-2018-20062\ndescription: \"ThinkPHP - RCE (CVE-2018-20062)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: index.php\n    - zones:\n      - ARGS\n      variables:\n      - s\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: think\n    - zones:\n      - ARGS\n      variables:\n      - s\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: \"[^A-Za-z0-9_.]*\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"ThinkPHP - RCE\"\n  references:\n    - https://nvd.nist.gov/vuln/detail/CVE-2018-20062\n    - https://www.exploit-db.com/exploits/45978\n  classification:\n   - cve.CVE-2018-20062\n   - attack.T1595\n   - attack.T1190\n", "description": "ThinkPHP - RCE (CVE-2018-20062)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2018-20062.yaml", "version": "0.1", "versions": {"0.1": {"digest": "cc3d014f9fc20bace548415f6e263764440c35e087a259830ff0095464471095"}}}, "crowdsecurity/vpatch-CVE-2019-1003030": {"content": "name: crowdsecurity/vpatch-CVE-2019-1003030\ndescription: \"Jenkins - RCE (CVE-2019-1003030)\"\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n         - lowercase\n        match:\n          type: endsWith\n          value: descriptorbyname/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.securegroovyscript/checkscript\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  references:\n    - https://www.exploit-db.com/exploits/48904\n  label: \"Jenkins - RCE\"\n  classification:\n    - cve.CVE-2019-1003030\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-264\n", "description": "Jenkins - RCE (CVE-2019-1003030)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2019-1003030.yaml", "version": "0.1", "versions": {"0.1": {"digest": "28e6b8f2d87fa26712625e52cb4f3c11c8e0f4a39a2d632598c5023e83639ec5"}}}, "crowdsecurity/vpatch-CVE-2019-12989": {"content": "name: crowdsecurity/vpatch-CVE-2019-12989\ndescription: \"Citrix SQLi (CVE-2019-12989)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /sdwan/nitro/v1/config/get_package_file\n    - zones:\n      - ARGS\n      variables:\n       - action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"file_download\"\n    - zones:\n      - BODY_ARGS\n      variables:\n       - json.get_package_file.site_name\n      match:\n        type: libinjectionSQL\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Citrix SQLi\"\n  classification:\n   - cve.CVE-2019-12989\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Citrix SQLi (CVE-2019-12989)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2019-12989.yaml", "version": "0.3", "versions": {"0.1": {"digest": "a2f681cb8b762e33a66e63343a9fce32d5416438322ec376946ff78428543714"}, "0.2": {"digest": "a8137b302f6fa55456dcf9cb7e9e9ba11dd878f0b91c90b3910fa4af397e0218"}, "0.3": {"digest": "82b7a57b7fad8c56a0d439ee933debc9272bce8cea2a46ce3177110a57e11bd2"}}}, "crowdsecurity/vpatch-CVE-2019-18935": {"content": "\nname: crowdsecurity/vpatch-CVE-2019-18935\ndescription: \"Telerik - RCE (CVE-2019-18935)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /telerik.web.ui.webresource.axd\n    - zones:\n      - ARGS\n      transform:\n      - lowercase\n      variables:\n      - type\n      match:\n        type: equals\n        value: rau\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Telerik - RCE\"\n  classification:\n   - cve.CVE-2019-18935\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502", "description": "Telerik - RCE (CVE-2019-18935)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2019-18935.yaml", "version": "0.1", "versions": {"0.1": {"digest": "93b30cdf102f419037c4a34b39770bd47114449aea7a2e43607b410f4400dd5d"}}}, "crowdsecurity/vpatch-CVE-2020-11738": {"content": "name: crowdsecurity/vpatch-CVE-2020-11738\ndescription: \"Wordpress Snap Creek Duplicator - Path Traversal (CVE-2020-11738)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wp-admin/admin-ajax.php\n    - zones:\n      - ARGS\n      variables:\n        - action\n      match:\n        type: equals\n        value: duplicator_download\n    - zones:\n      - ARGS\n      variables:\n        - file\n      match:\n        type: contains\n        value: \"..\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Wordpress Snap Creek Duplicator\"\n  classification:\n   - cve.CVE-2020-11738\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "Wordpress Snap Creek Duplicator - Path Traversal (CVE-2020-11738)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2020-11738.yaml", "version": "0.6", "versions": {"0.1": {"digest": "4760198ce14851e3387470bc0270f662b58aa32b8ef1f4217af6818e4f0cedbe"}, "0.2": {"digest": "d939fd479841838064eb205911dd20f35a8070eea2734cf4e0c7bd0c2b5444fe"}, "0.3": {"digest": "d82023967b6e1516519bf0adf7ae5e4d192c19039434267cffd73058f550c2fc"}, "0.4": {"digest": "e73f8dadfeb909e98e3609d0cc098533f2c0351503cabebdf92a43f9d1b3e94c"}, "0.5": {"digest": "b971347e1c948e6a19be6b8641329806b8cbeeaac2f42c0037521831a4629075"}, "0.6": {"digest": "c126f8093c14e959ee0ae591c6e22b912b39fe8ede8004d79aba7dedcc9c970a"}}}, "crowdsecurity/vpatch-CVE-2020-17496": {"content": "name: crowdsecurity/vpatch-CVE-2020-17496\ndescription: \"vBulletin RCE (CVE-2020-17496)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /ajax/render/widget_tabbedcontainer_tab_panel\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - BODY_ARGS\n      variables:\n      - /subwidgets\\[[0-9]+\\]\\[template\\]/\n      match:\n        type: equals\n        value: widget_php\n    - zones:\n      - BODY_ARGS_NAMES\n      match:\n        type: regex\n        value: subWidgets\\[[0-9]+\\]\\[config\\]\\[code\\]\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"vBulletin RCE\"\n  classification:\n   - cve.CVE-2020-17496\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-74", "description": "vBulletin RCE (CVE-2020-17496)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2020-17496.yaml", "version": "0.1", "versions": {"0.1": {"digest": "835df99b26dfcfc6656a6e985ea82966551fae61c61ebb5383bdf9b6dcfa0cd5"}}}, "crowdsecurity/vpatch-CVE-2020-5902": {"content": "\nname: crowdsecurity/vpatch-CVE-2020-5902\ndescription: \"F5 BIG-IP TMUI - RCE (CVE-2020-5902)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: /tmui/login.jsp/..;/tmui/\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"F5 BIG-IP TMUI - RCE\"\n  classification:\n   - cve.CVE-2020-5902\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22\n", "description": "F5 BIG-IP TMUI - RCE (CVE-2020-5902)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2020-5902.yaml", "version": "0.1", "versions": {"0.1": {"digest": "11fcbe1db693eae83cfd368aace1268cfcc5ae53a6ce4e2c4afbbe43f11a88a9"}}}, "crowdsecurity/vpatch-CVE-2021-22941": {"content": "name: crowdsecurity/vpatch-CVE-2021-22941\ndescription: \"Citrix RCE (CVE-2021-22941)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /upload.aspx\n    - zones:\n      - ARGS\n      variables:\n       - uploadid\n      match:\n        type: contains\n        value: \"..\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Citrix RCE\"\n  classification:\n   - cve.CVE-2021-22941\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284", "description": "Citrix RCE (CVE-2021-22941)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-22941.yaml", "version": "0.3", "versions": {"0.1": {"digest": "994975ada2914e56168b94db4acb5f28293673fcf824d35619d5e35539cf8052"}, "0.2": {"digest": "0057a096e2d27ce5264d9481dd073bf97d7ef9a6b7e3e11785cfd8dde880db56"}, "0.3": {"digest": "10b432dba048130dbea67c24d1f94f84ff0df489dce552fda2cd6c0e76eb6e16"}}}, "crowdsecurity/vpatch-CVE-2021-26086": {"content": "name: crowdsecurity/vpatch-CVE-2021-26086\ndescription: \"Atlassian Jira Server/Data Center 8.4.0 - Limited Remote File Read/Include (CVE-2021-26086)\"\nrules:\n  - or:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /;/web-inf/\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /;/meta-inf/\n\nlabels:\n   type: exploit\n   service: http\n   confidence: 3\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"Atlassian Jira Server/Data Center 8.4.0 File Read\"\n   references:\n    - https://github.com/ColdFusionX/CVE-2021-26086\n    - https://nvd.nist.gov/vuln/detail/CVE-2021-26086\n   classification:\n     - cve.CVE-2021-26086\n     - CWE.22\n     - attack.T1595\n     - attack.T1190", "description": "Atlassian Jira Server/Data Center 8.4.0 - Limited Remote File Read/Include (CVE-2021-26086)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-26086.yaml", "version": "0.1", "versions": {"0.1": {"digest": "535e08ea92881b250e16cf917c2817c8e32141b8141630b0a871480b01bab8cd"}}}, "crowdsecurity/vpatch-CVE-2021-3129": {"content": "name: crowdsecurity/vpatch-CVE-2021-3129\ndescription: \"Laravel with Ignition Debug Mode RCE (CVE-2021-3129)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /_ignition/execute-solution\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.parameters.viewFile\n      match:\n        type: regex\n        value: \"php://filter|phar://\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Laravel with Ignition Debug Mode RCE\"\n  classification:\n   - cve.CVE-2021-3129\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-98", "description": "Laravel with Ignition Debug Mode RCE (CVE-2021-3129)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-3129.yaml", "version": "0.4", "versions": {"0.1": {"digest": "78803a49055ed71b353ddf43560d700d0b64ebfb172ef6705457f793a9f37b34"}, "0.2": {"digest": "b155e9bbe64b4b44f3c98617c4b3bfedaadcce147e0685290e0d7a8dbdf47108"}, "0.3": {"digest": "60ab3d4c01d7e9cd998134473b7be3899d63af8936227c4d1899cd3008aab53d"}, "0.4": {"digest": "bf67806102345ebd40cbc47dc0494d97b0a7be420302386844650ad28284e74c"}}}, "crowdsecurity/vpatch-CVE-2022-22954": {"content": "name: crowdsecurity/vpatch-CVE-2022-22954\ndescription: \"VMWare Workspace ONE Access RCE (CVE-2022-22954)\"\nrules:\n  - and:\n       - zones:\n           - URI\n         transform:\n           - lowercase\n         match:\n           type: contains\n           value: /catalog-portal/ui/oauth/verify\n       - zones:\n           - ARGS\n         variables:\n           - deviceUdid\n         transform:\n           - lowercase\n         match:\n           type: contains\n           value: ${\n\nlabels:\n   type: exploit\n   service: http\n   confidence: 3\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"VMWare Workspace ONE RCE\"\n   references:\n    - https://www.rapid7.com/blog/post/2022/04/29/widespread-exploitation-of-vmware-workspace-one-access-cve-2022-22954/\n    - https://unit42.paloaltonetworks.com/cve-2022-22954-vmware-vulnerabilities/\n    - https://nvd.nist.gov/vuln/detail/cve-2022-22954\n   classification:\n     - cve.CVE-2022-22954\n     - attack.T1595\n     - attack.T1190", "description": "VMWare Workspace ONE Access RCE (CVE-2022-22954)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-22954.yaml", "version": "0.2", "versions": {"0.1": {"digest": "e60bbff9098b087dc1d8fa2ccb7007c4d886228344af78ef998b4d73f81e4820"}, "0.2": {"digest": "16face3b32aa6a9a3664f3919f2ae58440ec7ccd2c364156cf9ac8cebcbecb26"}}}, "crowdsecurity/vpatch-CVE-2022-22965": {"content": "name: crowdsecurity/vpatch-CVE-2022-22965\ndescription: \"Spring4Shell - RCE (CVE-2022-22965)\"\nrules:\n  - zones:\n    - RAW_BODY\n    - ARGS_NAMES\n    match:\n      type: contains\n      value: class.module.classLoader.resources.\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Spring4Shell - RCE\"\n  classification:\n   - cve.CVE-2022-22965\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94\n\n\n", "description": "Spring4Shell - RCE (CVE-2022-22965)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-22965.yaml", "version": "0.2", "versions": {"0.1": {"digest": "97303299c1e51bff072ad97376af0f9c1ce3489920c2f5669c728165d52c961e"}, "0.2": {"digest": "68d3b2dda49624c72976f5bc7322c532286ec8a4f45ed2526d1fd880195d3d3b"}}}, "crowdsecurity/vpatch-CVE-2022-26134": {"content": "\nname: crowdsecurity/vpatch-CVE-2022-26134\ndescription: \"Confluence - RCE (CVE-2022-26134)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: startsWith\n        value: '/${'\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: \"@java.lang.runtime\"\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: \"@org.apache.commons.io.ioutils\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Confluence - RCE\"\n  classification:\n   - cve.CVE-2022-26134\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-917\n", "description": "Confluence - RCE (CVE-2022-26134)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-26134.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a9b0e2761039e525b2712566843f6c81f500a8c8fc4c84c3b8bb52c7e92f5986"}, "0.2": {"digest": "643d069b705f12040c3082ad3a9824980c02bb4f2efddf730d87c7856b92e6b9"}}}, "crowdsecurity/vpatch-CVE-2022-27926": {"content": "name: crowdsecurity/vpatch-CVE-2022-27926\ndescription: \"Zimbra Collaboration XSS (CVE-2022-27926)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /public/error.jsp\n    - zones:\n      - ARGS\n      variables:\n      - errCode\n      transform:\n      - lowercase\n      match:\n        type: libinjectionXSS\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Zimbra Collaboration (ZCS) - XSS\"\n  classification:\n   - cve.CVE-2022-27926\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-79", "description": "Zimbra Collaboration XSS (CVE-2022-27926)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-27926.yaml", "version": "0.4", "versions": {"0.1": {"digest": "d96237a7ed02eb7aa9df45a684b5cef8f5145e857d10b5260373739668ad63f5"}, "0.2": {"digest": "ba56077560152e4dd0e06c1bc1e6522515142b0ea7a27dff2c0ea289ddaee174"}, "0.3": {"digest": "951e401afc100b54c1151efaea6ae676a95e91eb1ba8503638500695bd607f97"}, "0.4": {"digest": "e2c3a9d82d7362168f27227660a2d35249642843672438545ca5a8eb25d7e4e5"}}}, "crowdsecurity/vpatch-CVE-2022-35914": {"content": "name: crowdsecurity/vpatch-CVE-2022-35914\ndescription: \"GLPI RCE (CVE-2022-35914)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /vendor/htmlawed/htmlawed/htmlawedtest.php\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"GLPI RCE\"\n  classification:\n   - cve.CVE-2022-35914\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-74", "description": "GLPI RCE (CVE-2022-35914)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-35914.yaml", "version": "0.5", "versions": {"0.1": {"digest": "6a04ea781b27eb568a1752e3e310ef59532f803fed829010fb5cf76225454bc5"}, "0.2": {"digest": "ef4c9225bcfcc942fa5db2568a99af628cf578249b4a7477e0889f16d3ef4111"}, "0.3": {"digest": "e1213758c850424b37cb6ff6360fc1e1a2f12af9284d77766b06ee8c58679656"}, "0.4": {"digest": "dca2dbd76392b220f527732266fd7b39b16e23cd7ec72665f022598325fc7988"}, "0.5": {"digest": "ec12df461c9066584779c55e88d51a40f9e29b90a5b7f65f074a07af1584bbe5"}}}, "crowdsecurity/vpatch-CVE-2022-41082": {"content": "\nname: crowdsecurity/vpatch-CVE-2022-41082\ndescription: \"Microsoft Exchange - RCE (CVE-2022-41082)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /autodiscover/autodiscover.json\n    - zones:\n      - URI_FULL\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"powershell\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Microsoft Exchange - RCE\"\n  classification:\n   - cve.CVE-2022-41082\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502", "description": "Microsoft Exchange - RCE (CVE-2022-41082)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-41082.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7d78268b23b167044803a98e1ee57b6075a260fbc341d7106edd2978d9bbdb27"}}}, "crowdsecurity/vpatch-CVE-2022-44877": {"content": "name: crowdsecurity/vpatch-CVE-2022-44877\ndescription: \"CentOS Web Panel 7 RCE (CVE-2022-44877)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /login/index.php\n    - zones:\n      - ARGS\n      variables:\n      - login\n      match:\n        type: regex\n        value: \"[^a-zA-Z0-9_.-]+\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CentOS Web Panel 7 RCE\"\n  classification:\n   - cve.CVE-2022-44877\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "CentOS Web Panel 7 RCE (CVE-2022-44877)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-44877.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3c6baf947b513098784bb4cb9d03c2e19483dd48a7660db55ee77872dd903132"}, "0.2": {"digest": "717fe0d16947d200c0f9142ca667618c3984037f0775fda609326a87f90357d8"}}}, "crowdsecurity/vpatch-CVE-2022-46169": {"content": "name: crowdsecurity/vpatch-CVE-2022-46169\ndescription: \"Cacti RCE (CVE-2022-46169)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /remote_agent.php\n    - zones:\n      - ARGS\n      variables:\n      - poller_id\n      match:\n        type: regex\n        value: \"[^a-zA-Z0-9_]\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Cacti <=1.2.22 - RCE\"\n  classification:\n   - cve.CVE-2022-46169\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-74\n   - cwe.CWE-77\n   - cwe.CWE-78\n   - cwe.CWE-863", "description": "Cacti RCE (CVE-2022-46169)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-46169.yaml", "version": "0.5", "versions": {"0.1": {"digest": "e251805a453d65934e5794cbb96ce34179ce20981a123103d814afdcbb788d00"}, "0.2": {"digest": "6d2c89d06aefeacf14816f1cc755365056efcdba79265a0bb587033ca5790962"}, "0.3": {"digest": "00ad3b04df93d2ea077b69ecfcc1156ad0262005ab9915b740f6fb0c08fe86a1"}, "0.4": {"digest": "01f9badf366abe7fc3572b8814139521f114e15d716ee06541076dae4670a0fa"}, "0.5": {"digest": "b70ef73cc7e6c472e2a66ed981d434cc8678ab45d9409de1967613140f545140"}}}, "crowdsecurity/vpatch-CVE-2023-0600": {"content": "name: crowdsecurity/vpatch-CVE-2023-0600\ndescription: \"WP Visitor Statistics - SQL Injection (CVE-2023-0600)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS\n      variables:\n      - visitorId\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WP Visitor Statistics - SQL Injection\"\n  classification:\n   - cve.CVE-2023-0600\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WP Visitor Statistics - SQL Injection (CVE-2023-0600)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-0600.yaml", "version": "0.1", "versions": {"0.1": {"digest": "042e6a9a38c8e735cf473e70a6524fe63a42a2f8e2d0682f4700e93596790b9a"}}}, "crowdsecurity/vpatch-CVE-2023-0900": {"content": "name: crowdsecurity/vpatch-CVE-2023-0900\ndescription: \"AP Pricing Tables Lite - SQL Injection (CVE-2023-0900)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /wp-admin/admin-ajax.php\n    - zones:\n      - BODY_ARGS\n      variables:\n      - action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: backend_ajax\n    - zones:\n      - BODY_ARGS\n      variables:\n      - _action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: copy_table\n    - zones:\n      - BODY_ARGS\n      variables:\n      - table_id\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"AP Pricing Tables Lite - SQL Injection\"\n  classification:\n   - cve.CVE-2023-0900\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "AP Pricing Tables Lite - SQL Injection (CVE-2023-0900)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-0900.yaml", "version": "0.1", "versions": {"0.1": {"digest": "0eda46d8fc66068ae1c21fe0eba7ea2aadfcc01fc50e2fc85cd3751808bdbb30"}}}, "crowdsecurity/vpatch-CVE-2023-1389": {"content": "name: crowdsecurity/vpatch-CVE-2023-1389\ndescription: \"TP-Link Archer AX21 - RCE (CVE-2023-1389)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /cgi-bin/luci/;stok=/locale\n    - zones:\n      - ARGS\n      variables:\n      - form\n      match:\n        type: equals\n        value: country\n    - zones:\n      - BODY_ARGS\n      - ARGS\n      variables:\n      - operation\n      match:\n        type: equals\n        value: write\n    - zones:\n      - BODY_ARGS\n      - ARGS\n      variables:\n      - country\n      match:\n        type: regex\n        value: \"[^a-zA-Z0-9_.-]+\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"TP-Link Archer AX21 - RCE\"\n  classification:\n   - cve.CVE-2023-1389\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-77\n", "description": "TP-Link Archer AX21 - RCE (CVE-2023-1389)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-1389.yaml", "version": "0.1", "versions": {"0.1": {"digest": "fedda002c3f2a7d4435a63833a834facdb2f73344477edb65c96af7ea2f6968f"}}}, "crowdsecurity/vpatch-CVE-2023-2009": {"content": "name: crowdsecurity/vpatch-CVE-2023-2009\ndescription: \"Pretty Url - XSS (CVE-2023-2009)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /wp-admin/admin.php\n    - zones:\n      - ARGS\n      variables:\n      - page\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: prettyurls\n    - zones:\n      - BODY_ARGS\n      variables:\n      - url\n      match:\n        type: libinjectionXSS\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Pretty Url - XSS\"\n  classification:\n   - cve.CVE-2023-2009\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Pretty Url - XSS (CVE-2023-2009)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-2009.yaml", "version": "0.1", "versions": {"0.1": {"digest": "dd7ecf1962e15c56cbf6a74de336271ddd10cbd99c10d14d4b92df090f5fa018"}}}, "crowdsecurity/vpatch-CVE-2023-20198": {"content": "name: crowdsecurity/vpatch-CVE-2023-20198\ndescription: \"CISCO IOS XE Account Creation (CVE-2023-20198)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /%77ebui_wsma_https\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CISCO IOS XE account creation\"\n  classification:\n   - cve.CVE-2023-20198\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-287", "description": "CISCO IOS XE Account Creation (CVE-2023-20198)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-20198.yaml", "version": "0.6", "versions": {"0.1": {"digest": "100fe7c75a8b557d6ad35bc8712b996d9366631dda64d8a72e245293773ef2ae"}, "0.2": {"digest": "4ed8476a931d3b45b210669ccab401d736bc765cc21ea02ed8fbddc21e6598ca"}, "0.3": {"digest": "eedd4555f876c459d0a17950f3b1311404b44d248b789221fddf73054e429bc0"}, "0.4": {"digest": "4d5339081ffa687619f13b3480984e056f64cab397154c187470ef1144a5fed3"}, "0.5": {"digest": "c4356c6967555f649c5ce02078d5f64c5a3905004519072d7c9c36ee638a66ba"}, "0.6": {"digest": "a14a7f74314729684f6c0bcaee613779d83b4dd58555f763cfb1c10f37349781"}}}, "crowdsecurity/vpatch-CVE-2023-22515": {"content": "name: crowdsecurity/vpatch-CVE-2023-22515\ndescription: \"Atlassian Confluence Privesc (CVE-2023-22515)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /setup/setupadministrator.action\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - HEADERS\n      variables:\n       - x-atlassian-token\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"no-check\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Atlassian Confluence Privesc\"\n  classification:\n   - cve.CVE-2023-22515\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284", "description": "Atlassian Confluence Privesc (CVE-2023-22515)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-22515.yaml", "version": "0.4", "versions": {"0.1": {"digest": "dc6fc69ee52353cef3ea5563dbccd5b73dae0924e0bf13e38550768a23eeee8c"}, "0.2": {"digest": "bf313622a8c6b00bdaf421bb0766c1a0d077aaff8db50c32c4b1090dbbbf0fb9"}, "0.3": {"digest": "16d7f6ff1913304df2a270b3a27ba5d1165be8e3c7978489cfb9338875bb4d42"}, "0.4": {"digest": "8bf6511a6046718e06db86f0ffbaf0a8e636e62b3bc700fc8869919b70111698"}}}, "crowdsecurity/vpatch-CVE-2023-22527": {"content": "name: crowdsecurity/vpatch-CVE-2023-22527\ndescription: \"RCE using SSTI in Confluence (CVE-2023-22527)\"\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: POST\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: /template/aui/text-inline.vm\n      - zones:\n          - RAW_BODY\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"freemarker.template.utility.execute()).exec\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Confluence RCE\"\n  references:\n    - https://blog.projectdiscovery.io/atlassian-confluence-ssti-remote-code-execution/\n    - https://confluence.atlassian.com/security/cve-2023-22527-rce-remote-code-execution-vulnerability-in-confluence-data-center-and-confluence-server-1333990257.html\n  classification:\n    - cve.CVE-2023-22527\n    - attack.T1595\n    - attack.T1190", "description": "RCE using SSTI in Confluence (CVE-2023-22527)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-22527.yaml", "version": "0.2", "versions": {"0.1": {"digest": "322eefa82144adaa963690cce3c672312e5ecb805334a972d8c4c40953054df6"}, "0.2": {"digest": "b6d23c5a79107b37ffdcb20def2b749821800a036fd99ad58d3faff2d830eb59"}}}, "crowdsecurity/vpatch-CVE-2023-23488": {"content": "name: crowdsecurity/vpatch-CVE-2023-23488\ndescription: \"Wordpress Paid Memberships Pro Blind SQLi (CVE-2023-23488)\"\nrules:\n  - and:\n    - zones:\n        - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n        - ARGS\n      variables:\n        - rest_route\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /pmpro/v1/order\n    - zones:\n        - ARGS\n      transform:\n        - lowercase\n      variables:\n        - code\n      match:\n        type: libinjectionSQL\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Wordpress Paid Memberships Pro Blind SQLi\"\n  references:\n    - https://nvd.nist.gov/vuln/detail/CVE-2023-23488\n  classification:\n   - cve.CVE-2023-23488\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Wordpress Paid Memberships Pro Blind SQLi (CVE-2023-23488)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-23488.yaml", "version": "0.2", "versions": {"0.1": {"digest": "67d7dfcc20e2ac9e14458c6a1c2caff6740c4cbe786add2ae80013c01b0dd2c1"}, "0.2": {"digest": "ea957b223f4c36ef79772a453ab34f47c96cad018cd43cd15f86dd4632ab381a"}}}, "crowdsecurity/vpatch-CVE-2023-23489": {"content": "name: crowdsecurity/vpatch-CVE-2023-23489\ndescription: \"WordPress Easy Digital Downloads plugin SQL injection (CVE-2023-23489)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: /wp-admin/admin-ajax.php\n    - zones:\n      - ARGS\n      variables:\n       - action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"edd_download_search\"\n    - zones:\n      - ARGS\n      variables:\n       - s\n      match:\n        type: libinjectionSQL\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress Easy Digital Downloads plugin SQL injection\"\n  classification:\n   - cve.CVE-2023-23489\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WordPress Easy Digital Downloads plugin SQL injection (CVE-2023-23489)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-23489.yaml", "version": "0.1", "versions": {"0.1": {"digest": "69a9fdc2e30454842c6a90ecfd55ce85095f4a1a0833ad5e6cb3437e733b55e7"}}}, "crowdsecurity/vpatch-CVE-2023-23752": {"content": "name: crowdsecurity/vpatch-CVE-2023-23752\ndescription: \"Joomla! Webservice - Password Disclosure (CVE-2023-23752)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: (/config/application|/users)$\n    - zones:\n      - ARGS\n      variables:\n      - public\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"true\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Joomla! Webservice - Password Disclosure\"\n  classification:\n   - cve.CVE-2023-23752\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284\n   - cwe.CWE-266\n\n\n", "description": "Joomla! Webservice - Password Disclosure (CVE-2023-23752)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-23752.yaml", "version": "0.1", "versions": {"0.1": {"digest": "fa79ea72e00dfcc1e067e8906823f2df7897b8925b86417b1fc1fdab5f26ac6a"}}}, "crowdsecurity/vpatch-CVE-2023-24489": {"content": "name: crowdsecurity/vpatch-CVE-2023-24489\ndescription: \"Citrix ShareFile RCE (CVE-2023-24489)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /documentum/upload.aspx\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - ARGS\n      variables:\n       - uploadid\n      match:\n        type: contains\n        value: \"..\"\n    - zones:\n      - RAW_BODY\n#it seems 'Page_Load' is the handler that can be abused, maybe some others can?\n      match:\n        type: contains\n        value: \"Page_Load\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Citrix ShareFile RCE\"\n  classification:\n   - cve.CVE-2023-24489\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284", "description": "Citrix ShareFile RCE (CVE-2023-24489)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-24489.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c7ec7c49ee24ba7ba855e3ae256ec2d128b51c7771d676dc150aa3cc060ca785"}, "0.2": {"digest": "16e398688d669dbf5181718b18338df2baf906212e563749ce5d0041a56543dd"}}}, "crowdsecurity/vpatch-CVE-2023-28121": {"content": "name: crowdsecurity/vpatch-CVE-2023-28121\ndescription: \"WooCommerce auth bypass (CVE-2023-28121)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - HEADERS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: x-wcpay-platform-checkout-user\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WooCommerce auth bypass\"\n  classification:\n   - cve.CVE-2023-28121\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-287", "description": "WooCommerce auth bypass (CVE-2023-28121)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-28121.yaml", "version": "0.1", "versions": {"0.1": {"digest": "6a72dcabc9d7df47d1b5e7b7fa17ca4548e4b6c3cd9cbfcc6d1fea541aaab092"}}}, "crowdsecurity/vpatch-CVE-2023-33617": {"content": "name: crowdsecurity/vpatch-CVE-2023-33617\ndescription: \"Atlassian Confluence Privesc (CVE-2023-33617)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: post\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /boaform/admin/formlogin\n    - zones:\n      - BODY_ARGS\n      variables:\n       - username\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"admin\"\n    - zones:\n      - BODY_ARGS\n      variables:\n       - psd\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"parks\"\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /boaform/admin/formping\n    - zones:\n      - BODY_ARGS\n      variables:\n      - target_addr\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: \"[^a-f0-9:.]+\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Atlassian Confluence Privesc\"\n  classification:\n   - cve.CVE-2023-33617\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "Atlassian Confluence Privesc (CVE-2023-33617)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-33617.yaml", "version": "0.4", "versions": {"0.1": {"digest": "27d605f7f1aa991127741c047ca8c4af1e0113feafb2073fd9aa04793c311d6e"}, "0.2": {"digest": "15df9e2f71f34f037f96f7a9b61e6cbab993f3de3708ee92cda32bec84412391"}, "0.3": {"digest": "399c24c2222b455a5e9030ad0a31b58261e62724051655f7b98be4cdc8cc96d3"}, "0.4": {"digest": "2c5a0d6ffd19c4d14b691c51028dab5a3a32280bb6ec6943ef60e0e105ee8647"}}}, "crowdsecurity/vpatch-CVE-2023-34362": {"content": "\nname: crowdsecurity/vpatch-CVE-2023-34362\ndescription: \"MOVEit Transfer RCE (CVE-2023-34362)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: /moveitisapi/moveitisapi.dll\n    - zones:\n      - ARGS\n      variables:\n      - action\n      match:\n        type: equals\n        value: m2\n      transform:\n      - lowercase\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - HEADERS_NAMES\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: 'x-silock-transaction'\n    - zones:\n      - HEADERS_NAMES\n      transform:\n       - lowercase\n      match:\n        type: regex\n        value: '.+x-silock-transaction'\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"MOVEit Transfer RCE\"\n  classification:\n   - cve.CVE-2023-34362\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "MOVEit Transfer RCE (CVE-2023-34362)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-34362.yaml", "version": "0.6", "versions": {"0.1": {"digest": "b032c0e88f383ffb1228287b53f61443eb9c91db1cd730c4e10dd42bf44d86d9"}, "0.2": {"digest": "be808170ee4c42540423351f6d188b8cd22899810357f188d404a61f07b64dc7"}, "0.3": {"digest": "f579f526676ecaded1b1048503b9fd738144a67b2f7f0b14d6d770c35aa98cf6"}, "0.4": {"digest": "1af2e304188e802a2aedc45557e41c2e6debac3d8246ec1e44d57f7d664c9677"}, "0.5": {"digest": "bc1e444bcbe52474d0a3d9dd7293681d0a6ca0a034cded87e095460403985b9d"}, "0.6": {"digest": "db7744c5124e1531f5c3e141df01fa6dedd5c88cccefb32e5e38206820807c27"}}}, "crowdsecurity/vpatch-CVE-2023-35078": {"content": "name: crowdsecurity/vpatch-CVE-2023-35078\ndescription: \"MobileIron Core Remote Unauthenticated API Access (CVE-2023-35078)\"\nrules:\n       - zones:\n           - URI\n         transform:\n           - lowercase\n         match:\n           type: contains\n           value: /mifs/aad/api/v2/\nlabels:\n   type: exploit\n   service: http\n   confidence: 3\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"MobileIron Core API\"\n   references:\n    - https://forums.ivanti.com/s/article/CVE-2023-35078-Remote-unauthenticated-API-access-vulnerability?language=en_US\n    - https://www.rapid7.com/blog/post/2023/08/02/cve-2023-35082-mobileiron-core-unauthenticated-api-access-vulnerability/\n    - https://nvd.nist.gov/vuln/detail/CVE-2023-35078\n   classification:\n     - cve.CVE-2023-35078\n     - attack.T1595\n     - attack.T1190 ", "description": "MobileIron Core Remote Unauthenticated API Access (CVE-2023-35078)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-35078.yaml", "version": "0.1", "versions": {"0.1": {"digest": "24955c9a4642704372c1a26193d4a599165cd486b1f5f3c60bd72991d1ecd18f"}}}, "crowdsecurity/vpatch-CVE-2023-35082": {"content": "name: crowdsecurity/vpatch-CVE-2023-35082\ndescription: \"MobileIron Core Remote Unauthenticated API Access (CVE-2023-35082)\"\nrules:\n       - zones:\n           - URI\n         transform:\n           - lowercase\n         match:\n           type: contains\n           value: /mifs/asfv3/api/v2/\nlabels:\n   type: exploit\n   service: http\n   confidence: 3\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"MobileIron Core API\"\n   references:\n    - https://www.rapid7.com/blog/post/2023/08/02/cve-2023-35082-mobileiron-core-unauthenticated-api-access-vulnerability/\n    - https://nvd.nist.gov/vuln/detail/CVE-2023-35082\n    - https://forums.ivanti.com/s/article/CVE-2023-35082-Remote-Unauthenticated-API-Access-Vulnerability-in-MobileIron-Core-11-2-and-older?language=en_US\n   classification:\n     - cve.CVE-2023-35082\n     - attack.T1595\n     - attack.T1190 ", "description": "MobileIron Core Remote Unauthenticated API Access (CVE-2023-35082)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-35082.yaml", "version": "0.2", "versions": {"0.1": {"digest": "7c66626c83d7f91407257df0897a9adb5958043bbb4d70dece61e0245db2dcc8"}, "0.2": {"digest": "678db5fe74dc3ee8191cde2e79346935efb2363b7ab93622cdeb1e2fca45f943"}}}, "crowdsecurity/vpatch-CVE-2023-3519": {"content": "name: crowdsecurity/vpatch-CVE-2023-3519\ndescription: \"Citrix RCE (CVE-2023-3519)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /gwtest/formssso\n    - zones:\n      - ARGS\n      variables:\n       - target\n      transform:\n      - length\n      match:\n        type: gte\n        value: 100\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Citrix RCE\"\n  classification:\n   - cve.CVE-2023-3519\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94", "description": "Citrix RCE (CVE-2023-3519)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-3519.yaml", "version": "0.3", "versions": {"0.1": {"digest": "459cd434b8da480eaa0bfbbefc9806ca8c445a64757cbd339f1f7b6b32082f6f"}, "0.2": {"digest": "57441c54adbcb8cd88ba205b1f1358dfc10c1779662efe7e9854469b986c5f54"}, "0.3": {"digest": "8cc7bb6fd0d71871b7fb1f891182d3a12273dd507c1d59c7539dc620de6c70c4"}}}, "crowdsecurity/vpatch-CVE-2023-38205": {"content": "name: crowdsecurity/vpatch-CVE-2023-38205\ndescription: \"Adobe ColdFusion Access Control Bypass (CVE-2023-38205)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: ..cfide/wizards/common/\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Adobe ColdFusion Access Control Bypass\"\n  classification:\n   - cve.CVE-2023-38205\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284", "description": "Adobe ColdFusion Access Control Bypass (CVE-2023-38205)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-38205.yaml", "version": "0.3", "versions": {"0.1": {"digest": "d2c3666c0a337304d92b737ca02ad1aed164e31439eb6596a848688f0c27b178"}, "0.2": {"digest": "5403b1146ab6a652b31c572f07863ce284d63a6c6a26d254a3c064de0479cb26"}, "0.3": {"digest": "43a1a41cff1a160eeeb468b52a5fcc2889ee917a4db0396e42c8d6219fdb60c4"}}}, "crowdsecurity/vpatch-CVE-2023-40044": {"content": "name: crowdsecurity/vpatch-CVE-2023-40044\ndescription: \"WS_FTP .NET deserialize RCE (CVE-2023-40044)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /aht/\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - BODY_ARGS\n      transform:\n      - b64decode\n      - lowercase\n      match:\n        type: contains\n        value: \"<s:string>cmd</s:string>\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WS_FTP .NET deserialize RCE\"\n  classification:\n   - cve.CVE-2023-40044\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502\n\n\n", "description": "WS_FTP .NET deserialize RCE (CVE-2023-40044)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-40044.yaml", "version": "0.3", "versions": {"0.1": {"digest": "2e8db7d8cb223e1cb1a57c4621b1720d88174c3398183948c8901645f78ee338"}, "0.2": {"digest": "e49809530908e16a9628fece23d934be09d9756fc64f795d7311e70565a2f32e"}, "0.3": {"digest": "a32dec2d2ccf399ab0b9bc86dfeb48b7b11037ca617ea8e4ffbce02ed467247b"}}}, "crowdsecurity/vpatch-CVE-2023-42793": {"content": "name: crowdsecurity/vpatch-CVE-2023-42793\ndescription: \"JetBrains Teamcity Auth Bypass (CVE-2023-42793)\"\nrules:\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: endsWith\n      value: /rpc2\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"JetBrains Teamcity Auth Bypass\"\n  classification:\n   - cve.CVE-2023-42793\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-288\n", "description": "JetBrains Teamcity Auth Bypass (CVE-2023-42793)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-42793.yaml", "version": "0.3", "versions": {"0.1": {"digest": "86fb6a193e9799612bf00b67894f7aabe4482f024a012f305b2cfa910384aa73"}, "0.2": {"digest": "7e7078b0858ea9d8d32c2f9fa9f6879b2322c7b4da1558f9a60708b129dfc1ef"}, "0.3": {"digest": "c5440ec9305b7dcd1afd0c3d414b5558eb4ab8e64b41acf7ff2427330eabe91a"}}}, "crowdsecurity/vpatch-CVE-2023-4634": {"content": "name: crowdsecurity/vpatch-CVE-2023-4634\ndescription: \"Media Library Assistant - RCE 2023 4634\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wp-content/plugins/media-library-assistant/includes/mla-stream-image.php\n    - zones:\n      - ARGS\n      variables:\n      - mla_stream_file\n      match:\n        type: regex\n        value: \".*://.*\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Media Library Assistant RCE\"\n  classification:\n   - cve.CVE-2023-4634\n   - attack.T1190\n   - cwe.CWE-73\n", "description": "Media Library Assistant - RCE 2023 4634", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-4634.yaml", "version": "0.2", "versions": {"0.1": {"digest": "11b0f4eefe044ff7a50344ab55717717a720df83a48cd87c48016fb9f700c94d"}, "0.2": {"digest": "f1c2c3a8dabe2c020132a4b45ac1fb05a110b1b50779b5e01c47fcd867094338"}}}, "crowdsecurity/vpatch-CVE-2023-46805": {"content": "name: crowdsecurity/vpatch-CVE-2023-46805\ndescription: \"Ivanti Connect Auth Bypass (CVE-2023-46805)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /api/v1/totp/user-backup-code/../\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  references:\n    - \"https://attackerkb.com/topics/AdUh6by52K/cve-2023-46805/rapid7-analysis\"\n  label: \"Ivanti Connect Auth Bypass\"\n  classification:\n   - cve.CVE-2023-46805\n   - cve.CVE-2024-21887\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-287\n   - cwe.CWE-77\n", "description": "Ivanti Connect Auth Bypass (CVE-2023-46805)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-46805.yaml", "version": "0.4", "versions": {"0.1": {"digest": "d73f6475914ef2c68df3a55c7e38944ab514d0f602246ebb7aa703cf99f922d7"}, "0.2": {"digest": "bea99668edb018be9ddd78dae7ac1f9585ea8401d15d10494302901f30831bd8"}, "0.3": {"digest": "94039ee1d01b3cb7a66c6fd7e500ecdf0038de5b64242d48c0710e363baa8c7c"}, "0.4": {"digest": "d600d0e2e53c296169a060c4d07b2ce4b1ae9a17e181c90bcd44231bd6c7e89b"}}}, "crowdsecurity/vpatch-CVE-2023-47218": {"content": "name: crowdsecurity/vpatch-CVE-2023-47218\ndescription: \"QNAP QTS - RCE (CVE-2023-47218)\"\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: POST\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: endsWith\n          value: /cgi-bin/quick/quick.cgi\n      - zones:\n          - ARGS\n        variables:\n          - func\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: \"switch_os\"\n      - zones:\n          - ARGS\n        variables:\n          - todo\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: \"uploaf_firmware_image\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"QNAP QTS - RCE\"\n  classification:\n    - cve.CVE-2023-47218\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-78\n    - cwe.CWE-77\n", "description": "QNAP QTS - RCE (CVE-2023-47218)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-47218.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8f0e7ba65f3701e9ea6804ddf23cbd5bc89fe63724424a0cc3d086244465d786"}, "0.2": {"digest": "c7d82e16459348e4f85e1a74e88d63afeca931eedfbc2a09f3311f7b9b58b1bb"}}}, "crowdsecurity/vpatch-CVE-2023-49070": {"content": "name: crowdsecurity/vpatch-CVE-2023-49070\ndescription: \"Apache OFBiz - RCE (CVE-2023-49070)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /webtools/control/xmlrpc;/\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - ARGS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"username\"\n    - zones:\n      - ARGS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"password\"\n    - zones:\n      - ARGS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"requirepasswordchange\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache OFBiz - RCE\"\n  classification:\n   - cve.CVE-2023-49070\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94\n\n\n", "description": "Apache OFBiz - RCE (CVE-2023-49070)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-49070.yaml", "version": "0.1", "versions": {"0.1": {"digest": "8e97f76d9d5d07270acabdee9ffa0f4aed6632732efc188631f819e60342bd8b"}}}, "crowdsecurity/vpatch-CVE-2023-50164": {"content": "name: crowdsecurity/vpatch-CVE-2023-50164\ndescription: \"Apache Struts2 Path Traversal (CVE-2023-50164)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - BODY_ARGS\n#it might be used both in POST and GET args: https://trganda.github.io/notes/security/vulnerabilities/apache-struts/Apache-Struts-Remote-Code-Execution-Vulnerability-(-S2-066-CVE-2023-50164)\n      - ARGS\n      variables:\n      - /.+filename$/\n      match:\n        type: contains\n        value: \"../\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache Struts2 Path Traversal\"\n  classification:\n   - cve.CVE-2023-50164\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-552\n\n\n", "description": "Apache Struts2 Path Traversal (CVE-2023-50164)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-50164.yaml", "version": "0.6", "versions": {"0.1": {"digest": "2af3917de29ccf7f71d43b78502602568b2d4582769e62ffb9c195fcfab33e90"}, "0.2": {"digest": "05c4eb4526d99bc0c9cbefbcc60e2fde6f93f5b0f41ea500565f791ae57ed67e"}, "0.3": {"digest": "fb7280f1aa638812e942985a0a061bc94bac1a5381e57eb764f447d72a8f09d0"}, "0.4": {"digest": "139eed3def5189d40e3f5e7d613c17ea40141c5707c0094735a41f03d609fc32"}, "0.5": {"digest": "776bff2e741b150b2fee625b9373f467085d4d52518b80e3712f3da3124c14ef"}, "0.6": {"digest": "8061064724ee0d544abcff0c661ec8a7ea2b1d1b505a67688754843df7b395a1"}}}, "crowdsecurity/vpatch-CVE-2023-6360": {"content": "name: crowdsecurity/vpatch-CVE-2023-6360\ndescription: \"WordPress My Calendar - SQL Injection (CVE-2023-6360)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS\n      variables:\n      - rest_route\n      match:\n        type: contains\n        value: my-calendar/v1/events\n    - zones:\n      - ARGS\n      variables:\n      - from\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress My Calendar - SQL Injection\"\n  references:\n    - https://medium.com/tenable-techblog/wordpress-mycalendar-plugin-unauthenticated-sql-injection-cve-2023-6360-d272887ddf12\n  classification:\n   - cve.CVE-2023-6360\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WordPress My Calendar - SQL Injection (CVE-2023-6360)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6360.yaml", "version": "0.1", "versions": {"0.1": {"digest": "37b2ec6ab08a337683f9284ac657e5b8d0c2f20a9674ef99c8616733b68e91df"}}}, "crowdsecurity/vpatch-CVE-2023-6553": {"content": "name: crowdsecurity/vpatch-CVE-2023-6553\ndescription: \"Backup Migration plugin for WordPress RCE (CVE-2023-6553)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wp-content/plugins/backup-backup/includes/backup-heart.php\n    - zones:\n      - HEADERS\n      variables:\n      - content-dir\n      match:\n        type: startsWith\n        value: \"php://filter\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Backup Migration plugin for WordPress RCE\"\n  classification:\n   - cve.CVE-2023-6553\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-287", "description": "Backup Migration plugin for WordPress RCE (CVE-2023-6553)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6553.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7f1b24ef1f47484198636bb3c21580d075befe0be4a5438c2fb881d7a8646827"}}}, "crowdsecurity/vpatch-CVE-2023-6567": {"content": "name: crowdsecurity/vpatch-CVE-2023-6567\ndescription: \"LearnPress - SQL Injection (CVE-2023-6567)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /wp-json/lp/v1/courses/archive-course\n    - zones:\n      - ARGS\n      transform:\n      - lowercase\n      variables:\n      - order_by\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"LearnPress - SQL Injection\"\n  classification:\n   - cve.CVE-2023-6567\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "LearnPress - SQL Injection (CVE-2023-6567)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6567.yaml", "version": "0.1", "versions": {"0.1": {"digest": "011a1dbde137aeec7c80e5f2ef0266fbc8399d19d3d3b0e95a6f903712b848f9"}}}, "crowdsecurity/vpatch-CVE-2023-6623": {"content": "name: crowdsecurity/vpatch-CVE-2023-6623\ndescription: \"Wordpress Essential Blocks plugin LFI (CVE-2023-6623)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: /index.php\n    - zones:\n      - ARGS\n      variables:\n       - rest_route\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: essential-blocks\n    - zones:\n      - ARGS\n      variables:\n       - attributes\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"__file\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Wordpress Essential Blocks plugin LFI\"\n  classification:\n   - cve.CVE-2023-3519\n   - attack.T1211\n   - attack.T1190\n   - cwe.CWE-22", "description": "Wordpress Essential Blocks plugin LFI (CVE-2023-6623)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6623.yaml", "version": "0.1", "versions": {"0.1": {"digest": "193eab047b8db102eea442e9b7013f3d989d3b909c1e5f7ad43635722defed9c"}}}, "crowdsecurity/vpatch-CVE-2023-7028": {"content": "\nname: crowdsecurity/vpatch-CVE-2023-7028\ndescription: \"Gitlab Password Reset Account Takeover (CVE-2023-7028)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /users/password\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - BODY_ARGS\n      variables:\n      - 'user[email][]'\n      transform:\n      - count\n      match:\n        type: gte\n        value: 2\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Gitlab Password Reset Account Takeover\"\n  classification:\n   - cve.CVE-2023-7028\n   - attack.T1595\n   - attack.T1190", "description": "Gitlab Password Reset Account Takeover (CVE-2023-7028)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-7028.yaml", "version": "0.2", "versions": {"0.1": {"digest": "811a139492660287a20b85f93f48c4ae1de59ff4a22f8c73d7a7f5a56933d273"}, "0.2": {"digest": "e5171ce8e1da414ec9d165d6bfcd407eaad7f9f2b88531ce0651317dc4bbfa14"}}}, "crowdsecurity/vpatch-CVE-2024-0012": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-0012\ndescription: \"PanOS - Authentication Bypass (CVE-2024-0012)\"\nrules:\n  - and:\n    - zones:\n      - HEADERS\n      variables:\n       - x-pan-authcheck\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: off\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PanOS - Authentication Bypass\"\n  classification:\n   - cve.CVE-2024-0012\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-306", "description": "PanOS - Authentication Bypass (CVE-2024-0012)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-0012.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7434c3ee5962dbda438656e79e150077e97f9da99e70303569515d3afabda145"}}}, "crowdsecurity/vpatch-CVE-2024-1061": {"content": "name: crowdsecurity/vpatch-CVE-2024-1061\ndescription: \"WordPress HTML5 Video Player - SQL Injection (CVE-2024-1061)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS\n      variables:\n      - rest_route\n      match:\n        type: contains\n        value: /h5vp/v1/view\n    - zones:\n      - ARGS\n      variables:\n      - id\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress HTML5 Video Player - SQL Injection\"\n  classification:\n   - cve.CVE-2024-1061\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WordPress HTML5 Video Player - SQL Injection (CVE-2024-1061)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-1061.yaml", "version": "0.1", "versions": {"0.1": {"digest": "289b3ce03463a12278dcaaf0a42b22fcc80a33e023849d0b4dbd5e590ae6e882"}}}, "crowdsecurity/vpatch-CVE-2024-1071": {"content": "name: crowdsecurity/vpatch-CVE-2024-1071\ndescription: \"WordPress Ultimate Member - SQL Injection (CVE-2024-1071)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /wp-admin/admin-ajax.php\n    - zones:\n      - ARGS\n      variables:\n      - action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: um_get_members\n    - zones:\n      - BODY_ARGS\n      variables:\n      - sorting\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress Ultimate Member - SQL Injection\"\n  classification:\n   - cve.CVE-2024-1071\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WordPress Ultimate Member - SQL Injection (CVE-2024-1071)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-1071.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3ced444bf784788cb77457328390c5a8af16278280b3cb7bbadc39dfbb51b9a1"}, "0.2": {"digest": "7af7662034b0a4e298e0fa698f60f89ac4cdb945b78b48d98d951ddf95851903"}}}, "crowdsecurity/vpatch-CVE-2024-1212": {"content": "name: crowdsecurity/vpatch-CVE-2024-1212\ndescription: \"Progress Kemp LoadMaster Unauthenticated Command Injection (CVE-2024-1212)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /access/set\n    - zones:\n      - HEADERS\n      variables:\n      - Authorization\n      match:\n        type: contains\n        value: 'Basic Jzt' #b64encode of ';\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"LoadMaster UCI\"\n  references:\n  - https://rhinosecuritylabs.com/research/cve-2024-1212unauthenticated-command-injection-in-progress-kemp-loadmaster/\n  classification:\n   - cve.CVE-2024-1212\n   - attack.T1595\n   - attack.T1190\n", "description": "Progress Kemp LoadMaster Unauthenticated Command Injection (CVE-2024-1212)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-1212.yaml", "version": "0.3", "versions": {"0.1": {"digest": "3326d798f61d7c8958a55949f3867b13d88f86483eed381947596e8f4596f3ea"}, "0.2": {"digest": "0819184b4cda6c3ef48cf2fde19c4a5a9dde6a3389b0ad0c4a65df61de3247d0"}, "0.3": {"digest": "58256c07b3c6e43e42f125bb0b735b31ec621e17c3067ededc97b9fc5cc239a7"}}}, "crowdsecurity/vpatch-CVE-2024-22024": {"content": "name: crowdsecurity/vpatch-CVE-2024-22024\ndescription: \"Ivanti Connect Secure - XXE (CVE-2024-22024)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: \"/dana-na/auth/saml-sso.cgi\"\n    - zones:\n      - BODY_ARGS\n      transform:\n      - b64decode\n      variables:\n      - SAMLRequest\n      match:\n        type: contains\n        value: \"<!ENTITY\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti Connect Secure - XXE\"\n  classification:\n   - cve.CVE-2024-22024\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-611\n\n\n", "description": "Ivanti Connect Secure - XXE (CVE-2024-22024)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-22024.yaml", "version": "0.1", "versions": {"0.1": {"digest": "86d1e5651f9ed931064321629d37acd1d297f050af95304004743546ccde373b"}}}, "crowdsecurity/vpatch-CVE-2024-23897": {"content": "name: crowdsecurity/vpatch-CVE-2024-23897\ndescription: \"Jenkins CLI RCE (CVE-2024-23897)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      match:\n        type: endsWith\n        value: \"/cli\"\n    - zones:\n        - HEADERS\n      variables:\n        - side\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: \"upload\"\n    - zones:\n      - RAW_BODY\n      match:\n        type: regex\n        value: >-\n          @/|@\\.\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Jenkins CLI RCE\"\n  classification:\n   - cve.CVE-2024-23897\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-552\n\n\n", "description": "Jenkins CLI RCE (CVE-2024-23897)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-23897.yaml", "version": "0.4", "versions": {"0.1": {"digest": "ab1b0f8e512b1f4ec4a36928bc617a4cc047fd3040f5441072f4e8570a66839c"}, "0.2": {"digest": "adc0d879372de93098470b3058230c6a52fa3b7f35580ee55aa32f973a049982"}, "0.3": {"digest": "ab1b0f8e512b1f4ec4a36928bc617a4cc047fd3040f5441072f4e8570a66839c"}, "0.4": {"digest": "31e3cb46327f3b95ee097aca11e862c296e49602fa968077a85b2ba320cc97b6"}}}, "crowdsecurity/vpatch-CVE-2024-27198": {"content": "name: crowdsecurity/vpatch-CVE-2024-27198\ndescription: \"Teamcity - Authentication Bypass (CVE-2024-27198)\"\nrules:\n  - and:\n      - zones:\n          - URI_FULL\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \";.jsp\"\n      - zones:\n          - URI_FULL\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"/app/rest/\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Teamcity - Authentication Bypass\"\n  classification:\n    - cve.CVE-2024-27198\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-94\n", "description": "Teamcity - Authentication Bypass (CVE-2024-27198)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27198.yaml", "version": "0.5", "versions": {"0.1": {"digest": "1bd4f1a3645fc3a5ed7311cd2fdc535417963f0e8f9872a0fcdad2c6fe92b260"}, "0.2": {"digest": "18cc0e2d9cee1d2aef80d7ac4f2da92f1305dd5cd6468009840839f484321e5c"}, "0.3": {"digest": "6a74b6a71bce986adec58998aa99ba1332c54799b10535ad9966751e7348d4e9"}, "0.4": {"digest": "b8b51dea722e3c2e4d3a8349718e4642fc4746c02bb152a12e7aca185daf114e"}, "0.5": {"digest": "8b267345d9dedb9c76a884801651d4190eecd4df8fbd7b30f3bc38513d00ad5c"}}}, "crowdsecurity/vpatch-CVE-2024-27348": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-27348\ndescription: \"Apache HugeGraph-Server - RCE (CVE-2024-27348)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /gremlin\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.gremlin\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"java.lang.processbuilder\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache HugeGraph-Server - RCE\"\n  classification:\n   - cve.CVE-2024-27348\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-77", "description": "Apache HugeGraph-Server - RCE (CVE-2024-27348)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27348.yaml", "version": "0.1", "versions": {"0.1": {"digest": "46a0efc78b5b50d1e96cf5ab30c82c2cbafe0d9be13a8676889ae29056452ca2"}}}, "crowdsecurity/vpatch-CVE-2024-27954": {"content": "name: crowdsecurity/vpatch-CVE-2024-27954\ndescription: \"WP Automatic - Path Traversal (CVE-2024-27954)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS\n      variables:\n       - wp_automatic\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"download\"\n    - zones:\n      - ARGS\n      variables:\n       - link\n      transform:\n      - lowercase\n      match:\n        type: startsWith\n        value: \"file://\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WP Automatic - Path Traversal\"\n  classification:\n   - cve.CVE-2024-27954\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "WP Automatic - Path Traversal (CVE-2024-27954)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27954.yaml", "version": "0.1", "versions": {"0.1": {"digest": "bf6471bd1c257cc27c60cb8474cdec8104571b5c0eb9a9a1880a3f15f6ae87b9"}}}, "crowdsecurity/vpatch-CVE-2024-27956": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-27956\ndescription: \"WordPress Automatic Plugin - SQLi (CVE-2024-27956)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wp-content/plugins/wp-automatic/inc/csv.php\n    - zones:\n      - BODY_ARGS\n      variables:\n       - auth\n      match:\n        type: contains\n        value: \"\\x00\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress Automatic Plugin - SQLi\"\n  classification:\n   - cve.CVE-2024-27956\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502", "description": "WordPress Automatic Plugin - SQLi (CVE-2024-27956)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27956.yaml", "version": "0.1", "versions": {"0.1": {"digest": "75f4bc972ce0fe46ffb311ee245a71bbeaf12963246dd98981b2d166f834191d"}}}, "crowdsecurity/vpatch-CVE-2024-28255": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-28255\ndescription: \"OpenMetadata - Authentication Bypass (CVE-2024-28255)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: /api/v1;v1/users/login/events/subscriptions/validation/condition\n    - zones:\n      - URI_FULL\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"java.lang.runtime\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"OpenMetadata - Authentication Bypass\"\n  classification:\n   - cve.CVE-2024-28255\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94", "description": "OpenMetadata - Authentication Bypass (CVE-2024-28255)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-28255.yaml", "version": "0.1", "versions": {"0.1": {"digest": "a8dcb3b263333cd588e22e561d24c4c7b9da54c1a83fcc8da60b4ac5acfacaae"}}}, "crowdsecurity/vpatch-CVE-2024-28987": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-28987\ndescription: \"SolarWinds WHD Hardcoded Credentials (CVE-2024-28987)\"\nrules:\n  - and:\n    - zones:\n      - HEADERS\n      variables:\n      - Authorization\n      transform:\n      - b64decode\n      - lowercase\n      match:\n        type: contains\n        value: \"helpdeskintegrationuser:dev-c4f8025e7\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"SolarWinds WHD Hardcoded Credentials\"\n  classification:\n   - cve.CVE-2024-28987\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-798", "description": "SolarWinds WHD Hardcoded Credentials (CVE-2024-28987)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-28987.yaml", "version": "0.1", "versions": {"0.1": {"digest": "9f357a599c62a2aaa03a9a16e2ea7e247b94e29c8cfa859869f0f39b52f6d17a"}}}, "crowdsecurity/vpatch-CVE-2024-29824": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-29824\ndescription: \"Ivanti EPM - SQLi (CVE-2024-29824)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wsstatusevents/eventhandler.asmx\n    - zones:\n      - RAW_BODY\n      match:\n        type: contains\n        value: \"xp_cmdshell\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti EPM - SQLi\"\n  classification:\n   - cve.CVE-2024-29824\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Ivanti EPM - SQLi (CVE-2024-29824)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-29824.yaml", "version": "0.1", "versions": {"0.1": {"digest": "77c1114599436db48fafcafd5ff072e7c6c24fca0b54f2d656aa910205b6f7df"}}}, "crowdsecurity/vpatch-CVE-2024-29849": {"content": "name: crowdsecurity/vpatch-CVE-2024-29849\ndescription: \"Veeam Backup Enterprise Manager - Authentication Bypass (CVE-2024-29849)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      match:\n        type: endsWith\n        value: /api/sessionMngr/\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - ARGS\n      variables:\n        - v\n      match:\n        type: equals\n        value: \"latest\"\n    - zones:\n      - BODY_ARGS\n      transform:\n        - b64decode\n      variables:\n        - json.VMwareSSOToken\n      match:\n        type: contains\n        value: \"<saml2:Assertion\"\n    - zones:\n        - BODY_ARGS\n      variables:\n        - json.VMwareSSOToken\n      transform:\n        - b64decode\n      match:\n        type: contains\n        value: \"<saml2:Issuer\"\n    - zones:\n        - BODY_ARGS\n      variables:\n        - json.VMwareSSOToken\n      transform:\n        - b64decode\n      match:\n        type: contains\n        value: \"/STSService\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Veeam Backup Enterprise Manager - Authentication Bypass\"\n  classification:\n    - cve.CVE-2024-29849\n    - attack.T1595\n    - attack.T1190\n", "description": "Veeam Backup Enterprise Manager - Authentication Bypass (CVE-2024-29849)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-29849.yaml", "version": "0.5", "versions": {"0.1": {"digest": "dccb1c216bd7e1fe2a6e4c548a2cf9aae838f3ef80174da033af8b3fe86c430f"}, "0.2": {"digest": "82da392ff81184e838cf1475fdd28b137d370c051bcfe4fbdf03df5a48fa41ad"}, "0.3": {"digest": "ee9ed9684f31a99dbfb97d9bc4b3f851246d2a0d1b61931f95a6a1ef8dfdbc28"}, "0.4": {"digest": "41264049fd3e68d4de01d0affd78683db6fe2cec893a3eff7700daca576115b3"}, "0.5": {"digest": "5b93138e827ea3b8dad92c30d436fe0dc0ce8eba379a95b93a782be974addccd"}}}, "crowdsecurity/vpatch-CVE-2024-29973": {"content": "name: crowdsecurity/vpatch-CVE-2024-29973\ndescription: \"Zyxel - RCE (CVE-2024-29973)\"\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: /cmd,/simzysh/register_main/setcookie\n      - zones:\n          - ARGS\n          - BODY_ARGS\n        variables:\n          - c0\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"storage_ext_cgi\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Zyxel - RCE\"\n  classification:\n    - cve.CVE-2024-29973\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-78\n", "description": "Zyxel - RCE (CVE-2024-29973)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-29973.yaml", "version": "0.1", "versions": {"0.1": {"digest": "442ddc3f0db71ab673b72aec4da04bd74b93b713fb879b85d796e2c7521cbd71"}}}, "crowdsecurity/vpatch-CVE-2024-32113": {"content": "name: crowdsecurity/vpatch-CVE-2024-32113\ndescription: \"Apache OFBiz - Path Traversal (CVE-2024-32113)\"\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: POST\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: /webtools/control/forgotpassword;/programexport\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache OFBiz - Path Traversal\"\n  classification:\n    - cve.CVE-2024-32113\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-22\n", "description": "Apache OFBiz - Path Traversal (CVE-2024-32113)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-32113.yaml", "version": "0.1", "versions": {"0.1": {"digest": "20d3a940db05d005ee4c49d1f79f5f62b84e54e244938aff08272297db673106"}}}, "crowdsecurity/vpatch-CVE-2024-3272": {"content": "name: crowdsecurity/vpatch-CVE-2024-3272\ndescription: \" D-Link NAS - RCE (CVE-2024-3272)\" #UPDATE THIS\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: GET\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: endsWith\n          value: /cgi-bin/nas_sharing.cgi\n      - zones:\n          - ARGS\n        variables:\n          - cmd\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: \"15\"\n      - zones:\n          - ARGS_NAMES\n        match:\n          type: equals\n          value: system\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \" D-Link NAS - RCE\" #UPDATE THIS\n  classification:\n    - cve.CVE-2024-3272\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-287\n", "description": " D-Link NAS - RCE (CVE-2024-3272)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-3272.yaml", "version": "0.1", "versions": {"0.1": {"digest": "ed43876261d4b14056a73ff1ab5aacb1d2b2cb4e070aa312775f38f98108fbcb"}}}, "crowdsecurity/vpatch-CVE-2024-3273": {"content": "name: crowdsecurity/vpatch-CVE-2024-3273\ndescription: \"D-LINK NAS Command Injection (CVE-2024-3273)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: cgi-bin/nas_sharing.cgi\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: system\n    - zones:\n      - ARGS\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: messagebus\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"D-LINK NAS Command Injection\"\n  classification:\n   - cve.CVE-2024-3273\n   - attack.T1595\n   - attack.T1190", "description": "D-LINK NAS Command Injection (CVE-2024-3273)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-3273.yaml", "version": "0.1", "versions": {"0.1": {"digest": "0a1253f1474fdf2cdf5cba1abf2e8027bde2122360d3d340f43569f79221b44b"}}}, "crowdsecurity/vpatch-CVE-2024-34102": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-34102\ndescription: \"Adobe Commerce & Magento - XXE (CVE-2024-34102)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      transform:\n      - uppercase\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /rest/v1/guest-carts/1/estimate-shipping-methods\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.address.totalsCollector.collectorList.totalCollector.sourceData.data\n      transform:\n        - lowercase\n      match:\n        type: contains\n        value: \"<!entity\"\n  - and:\n    - zones:\n      - METHOD\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: post\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /rest/v1/guest-carts/1/estimate-shipping-methods\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.address.totalsCollector.collectorList.totalCollector.sourceData.data\n      transform:\n        - lowercase\n      match:\n        type: contains\n        value: \"://\"\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.address.totalsCollector.collectorList.totalCollector.sourceData.dataIsURL\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: \"true\"\n\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Adobe Commerce & Magento - XXE\"\n  classification:\n   - cve.CVE-2024-34102\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-611", "description": "Adobe Commerce & Magento - XXE (CVE-2024-34102)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-34102.yaml", "version": "0.1", "versions": {"0.1": {"digest": "607a26132ba2ff5c5950280f93cc087f2fe3875f1e1801219f5eed4b86be64b4"}}}, "crowdsecurity/vpatch-CVE-2024-38856": {"content": "name: crowdsecurity/vpatch-CVE-2024-38856\ndescription: \"Apache OFBiz Incorrect Authorization (CVE-2024-38856)\"\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: regex\n          value: (GET|POST)\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: regex\n          value: /webtools/control/(main|view|testservice|showdatetime|forgotpassword)/programexport\n      - zones:\n          - BODY_ARGS\n          - ARGS\n        variables:\n          - groovyProgram\n        transform:\n          - count\n        match:\n          type: gte\n          value: 1\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache OFBiz Incorrect Authorization\"\n  classification:\n    - cve.CVE-2024-38856\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-853\n", "description": "Apache OFBiz Incorrect Authorization (CVE-2024-38856)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-38856.yaml", "version": "0.1", "versions": {"0.1": {"digest": "de76534f173e4eb876dde957244121298f3032e074f2832615e9fb5c84a7f067"}}}, "crowdsecurity/vpatch-CVE-2024-4577": {"content": "name: crowdsecurity/vpatch-CVE-2024-4577\ndescription: \"PHP CGI Command Injection - CVE-2024-4577\"\nrules:\n  - and:\n    - zones:\n      - URI_FULL\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"?%ad\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PHP CGI Command Injection - CVE-2024-4577\"\n  classification:\n   - cve.CVE-2024-4577\n   - attack.T1595\n   - attack.T1190\n   - attack.T1059\n   - cwe.CWE-74\n   - cwe.CWE-88\n   - cwe.CWE-707\n\n\n", "description": "PHP CGI Command Injection - CVE-2024-4577", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-4577.yaml", "version": "0.1", "versions": {"0.1": {"digest": "c68e38d0721f936f1596d81fcc0794298f45ec9096b188218bda1a592dd36287"}}}, "crowdsecurity/vpatch-CVE-2024-51567": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-51567\ndescription: \"CyberPanel RCE (CVE-2024-51567)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: /databases/upgrademysqlstatus\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: PUT\n    - zones:\n      - BODY_ARGS\n      transform:\n        - lowercase\n        - urldecode\n      variables:\n       - json.statusfile\n      match:\n        type: contains\n        value: ';'\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CyberPanel RCE\"\n  classification:\n   - cve.CVE-2024-51567\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-306\n   - cwe.CWE-276", "description": "CyberPanel RCE (CVE-2024-51567)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-51567.yaml", "version": "0.1", "versions": {"0.1": {"digest": "99ef5af971e1263bdf18201229b8cd004f9aec0643a9ef9dbc824a2e2f5be43a"}}}, "crowdsecurity/vpatch-CVE-2024-52301": {"content": "name: crowdsecurity/vpatch-CVE-2024-52301\ndescription: \"Laravel - Parameter Injection (CVE-2024-52301)\"\nrules:\n  - and:\n    - zones:\n      - ARGS_NAMES\n      match:\n        type: endsWith\n        value: \"--env\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Laravel - Parameter Injection\"\n  classification:\n   - cve.CVE-2024-52301\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-88\n", "description": "Laravel - Parameter Injection (CVE-2024-52301)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-52301.yaml", "version": "0.1", "versions": {"0.1": {"digest": "939ac16b02348d9f1295dfaeaa9254def91eb3b31b7d4c637905664682ca4cee"}}}, "crowdsecurity/vpatch-CVE-2024-7593": {"content": "name: crowdsecurity/vpatch-CVE-2024-7593\ndescription: \"Ivanti vTM - Authentication Bypass (CVE-2024-7593)\"\nrules:\n  - and:\n    - zones:\n        - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n        - URI\n      transform:\n        - lowercase\n      match:\n        type: endsWith\n        value: /apps/zxtm/wizard.fcgi\n    - zones:\n        - ARGS\n      variables:\n        - section\n      transform:\n        - lowercase\n        - urldecode\n      match:\n        type: equals\n        value: \"access management:localusers\"\n    - zones:\n        - ARGS\n      variables:\n        - error\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: 1\n    - zones:\n        - BODY_ARGS\n      variables:\n        - create_user\n      match:\n        type: equals\n        value: Create\n    - zones:\n        - BODY_ARGS\n      variables:\n        - group\n      match:\n        type: equals\n        value: admin\n    - zones:\n        - BODY_ARGS\n      variables:\n        - newusername\n      match:\n        type: regex\n        value: ^.*$\n    - zones:\n        - BODY_ARGS\n      variables:\n        - password1\n      match:\n        type: regex\n        value: ^.*$\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti vTM - Authentication Bypass\"\n  classification:\n    - cve.CVE-2024-7593\n    - attack.T1190\n    - cwe.CWE-287\n    - cwe.CWE-303", "description": "Ivanti vTM - Authentication Bypass (CVE-2024-7593)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-7593.yaml", "version": "0.1", "versions": {"0.1": {"digest": "150dab77481d68e06e7c1214584d7724a66249394fcf72e493880a541fb59517"}}}, "crowdsecurity/vpatch-CVE-2024-8190": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-8190\ndescription: \"Ivanti Cloud Services Appliance - RCE (CVE-2024-8190)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /gsb/datetime.php\n    - zones:\n      - BODY_ARGS\n      variables:\n       - TIMEZONE\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \";\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti Cloud Services Appliance - RCE\"\n  classification:\n   - cve.CVE-2024-8190\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "Ivanti Cloud Services Appliance - RCE (CVE-2024-8190)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-8190.yaml", "version": "0.1", "versions": {"0.1": {"digest": "cd59cd1ada47411f0b12408c87f6c8137bb33ae8754d36bc041f59d85c87e115"}}}, "crowdsecurity/vpatch-CVE-2024-9474": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-9474\ndescription: \"PanOS - Privilege Escalation (CVE-2024-9474)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /php/utils/createremoteappwebsession.php/\n    - zones:\n       - URI\n      transform:\n        - lowercase\n      match:\n        type: endsWith\n        value: .js.map\n    - zones:\n      - BODY_ARGS\n      variables:\n       - user\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: \"[$;|&`>]\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PanOS - Privilege Escalation (CVE-2024-9474)\"\n  classification:\n   - cve.CVE-2024-9474\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78\n", "description": "PanOS - Privilege Escalation (CVE-2024-9474)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-9474.yaml", "version": "0.3", "versions": {"0.1": {"digest": "8460703181c94f6078058c7c9a5f567c161fcc0ce6676d0efc6ab19f3dd5fde3"}, "0.2": {"digest": "8c7edf75d60d36d4b5e8ecb57ea87526ffde766f6e4f95a2a0029c18dc9be03b"}, "0.3": {"digest": "f540b7e6a8e73388c3a045070e3d8b54b4b1b00d005803548e009ff7ff01df0d"}}}, "crowdsecurity/vpatch-connectwise-auth-bypass": {"content": "name: crowdsecurity/vpatch-connectwise-auth-bypass\ndescription: \"Detect exploitation of auth bypass in ConnectWise ScreenConnect\"\nrules:\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: endsWith\n      value: /setupwizard.aspx/\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"ConnectWise ScreenConnect - Auth Bypass\"\n  classification:\n   - attack.T1595\n   - attack.T1190\n   - cve.CVE-2024-1709\n", "description": "Detect exploitation of auth bypass in ConnectWise ScreenConnect", "path": "appsec-rules/crowdsecurity/vpatch-connectwise-auth-bypass.yaml", "version": "0.3", "versions": {"0.1": {"digest": "3a461c52bf1c676beadeeef321bcd39a871b4051f1e5aca42fe2268b7f917dcd"}, "0.2": {"digest": "a7c50e04363300961065df8065b2fa7b038e07aa4f81b98b64484f2b567d982d"}, "0.3": {"digest": "70f819f47b0c12d5bafc64b3f7274b8e61dca3b22a35c23e21119d871dce2f61"}}}, "crowdsecurity/vpatch-env-access": {"content": "name: crowdsecurity/vpatch-env-access\ndescription: \"Detect access to .env files\"\nrules:\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: endsWith\n      value: /.env\nlabels:\n  type: scan\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:scan\"\n  label: \"Access to .env file\"\n  classification:\n   - attack.T1595\n   - attack.T1190\n", "description": "Detect access to .env files", "path": "appsec-rules/crowdsecurity/vpatch-env-access.yaml", "version": "0.1", "versions": {"0.1": {"digest": "ae22c494fb05801bc4886564e63927ccc248be20b1d1dc31f1011a27a4d75cbe"}}}, "crowdsecurity/vpatch-git-config": {"content": "name: crowdsecurity/vpatch-git-config\ndescription: \"Detect access to .git files\"\nrules:\n  - zones:\n      - URI\n    transform:\n      - lowercase\n    match:\n      type: contains\n      value: /.git/config\nlabels:\n  type: scan\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:scan\"\n  label: \"Access to .git file\"\n  classification:\n    - attack.T1595\n", "description": "Detect access to .git files", "path": "appsec-rules/crowdsecurity/vpatch-git-config.yaml", "version": "0.2", "versions": {"0.1": {"digest": "cf59d1a407e0352662db0c66681d256c0e363560d93109f03ecdee994b04a542"}, "0.2": {"digest": "c1f8230f65f1cb5d1afe8e6ef164ce750ac8056db655d2096ca5dfeffdaa421c"}}}, "crowdsecurity/vpatch-laravel-debug-mode": {"content": "name: crowdsecurity/vpatch-laravel-debug-mode\ndescription: \"Detect bots exploiting laravel debug mode\"\n#see https://github.com/s1miii/cape/blob/main/ler.py : bot is trying to trigger a debug log to extract secrets.\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n        - BODY_ARGS_NAMES\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: \"0x[]\"\nlabels:\n  type: scan\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:scan\"\n  label: \"Access to laravel debug mode\"\n  #while the vpatch doesn't address directly the CVEs below, it detects the bot that abuses them.\n  classification:\n   - attack.T1595\n   - attack.T1190\n   - cve.CVE-2017-16894\n   - cve.CVE-2021-41714\n   - cve.CVE-2019-17050\n", "description": "Detect bots exploiting laravel debug mode", "path": "appsec-rules/crowdsecurity/vpatch-laravel-debug-mode.yaml", "version": "0.3", "versions": {"0.1": {"digest": "096552a04dd5f6c94e6beeadb8c197bc543518388b2b2316ce602b60ba3d9f49"}, "0.2": {"digest": "38bac09d834161aa1f0e66dbf6930c53a8f71c25871cb1e527c97c02b3a41b50"}, "0.3": {"digest": "209bf1b8311c071da33bf6ad7a2bd4b074c0ec1dcd2e28030d95cd4cd5fc1711"}}}, "crowdsecurity/vpatch-symfony-profiler": {"content": "name: crowdsecurity/vpatch-symfony-profiler\ndescription: \"Detect abuse of symfony profiler\"\nrules:\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: contains\n      value: /_profiler/phpinfo\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: contains\n      value: /_profiler/open\nlabels:\n  type: scan\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:scan\"\n  label: \"Access to symfony profiler\"\n  classification:\n   - attack.T1595\n   - attack.T1190\n", "description": "Detect abuse of symfony profiler", "path": "appsec-rules/crowdsecurity/vpatch-symfony-profiler.yaml", "version": "0.1", "versions": {"0.1": {"digest": "9f9f2298f065610b0b45115147050747dfb53eb51d8bda781811bdce3f5bef10"}}}}, "collections": {"Dominic-Wagner/vaultwarden": {"content": "parsers:\n  - Dominic-Wagner/vaultwarden-logs\nscenarios:\n  - Dominic-Wagner/vaultwarden-bf\ndescription: \"Vaultwarden support : parser and brute-force detection\"\nauthor: Dominic-Wagner\ntags:\n  - linux\n  - brute-force\n  - vaultwarden\n", "description": "Vaultwarden support : parser and brute-force detection", "parsers": ["Dominic-Wagner/vaultwarden-logs"], "path": "collections/Dominic-Wagner/vaultwarden.yml", "scenarios": ["Dominic-Wagner/vaultwarden-bf"], "version": "0.1", "versions": {"0.1": {"digest": "41f537b7985ef168a1d31c7cb10a49672925313724d523fba8389714c4222742"}}}, "LePresidente/adguardhome": {"content": "parsers:\n  - LePresidente/adguardhome-logs\nscenarios:\n  - LePresidente/adguardhome-bf\ndescription: \"AdGuardHome Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - AdGuardHome", "description": "AdGuardHome Support : parser and brute-force detection", "parsers": ["LePresidente/adguardhome-logs"], "path": "collections/LePresidente/adguardhome.yml", "scenarios": ["LePresidente/adguardhome-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3ab656c2d2be80019f8b6c63a5ea46d7400593cb50c946cde89b05d1878229e5"}}}, "LePresidente/authelia": {"content": "parsers:\n  - LePresidente/authelia-logs\nscenarios:\n  - LePresidente/authelia-bf\ndescription: \"Authelia Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - authelia", "description": "Authelia Support : parser and brute-force detection", "parsers": ["LePresidente/authelia-logs"], "path": "collections/LePresidente/authelia.yml", "scenarios": ["LePresidente/authelia-bf"], "version": "0.2", "versions": {"0.1": {"digest": "483d6a415e6649614ce28efbc2f87cf35664d989469e97cbd1f4d8b8ab7916ed"}, "0.2": {"digest": "24800ff1ae7b37bf343bc7dfc9053c0130e75c832826782fa422b182b787e0d5"}}}, "LePresidente/emby": {"content": "parsers:\n  - LePresidente/emby-logs\nscenarios:\n  - LePresidente/emby-bf\ndescription: \"Emby support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - emby", "description": "Emby support : parser and brute-force detection", "parsers": ["LePresidente/emby-logs"], "path": "collections/LePresidente/emby.yml", "scenarios": ["LePresidente/emby-bf"], "version": "0.1", "versions": {"0.1": {"digest": "53801da28b3557ad39bc8672d0db62d845cc401bbfcde36f6f4b7f0d8a749fe9"}}}, "LePresidente/gitea": {"content": "parsers:\n  - LePresidente/gitea-logs\nscenarios:\n  - LePresidente/gitea-bf\ndescription: \"Gitea Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - gitea", "description": "Gitea Support : parser and brute-force detection", "parsers": ["LePresidente/gitea-logs"], "path": "collections/LePresidente/gitea.yml", "scenarios": ["LePresidente/gitea-bf"], "version": "0.2", "versions": {"0.1": {"digest": "1282681d69e45e64050a497ac8f17bfb67ba55a0c494743e3f5b33c2f3cee97d"}, "0.2": {"digest": "f5098f91736d1c3b835dfb741c271cad33a21ffb78e0554357950313ecdfe037"}}}, "LePresidente/grafana": {"content": "parsers:\n  - LePresidente/grafana-logs\nscenarios:\n  - LePresidente/grafana-bf\ndescription: \"Grafana Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - grafana", "description": "Grafana Support : parser and brute-force detection", "parsers": ["LePresidente/grafana-logs"], "path": "collections/LePresidente/grafana.yml", "scenarios": ["LePresidente/grafana-bf"], "version": "0.1", "versions": {"0.1": {"digest": "ab0e0fd9a6a3b424af7ef5c162ae1d99e3adf0d5f166c0179acf57b8b3428ff0"}}}, "LePresidente/harbor": {"content": "parsers:\n  - LePresidente/harbor-logs\nscenarios:\n  - LePresidente/harbor-bf\ndescription: \"Harbor Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - harbor", "description": "Harbor Support : parser and brute-force detection", "parsers": ["LePresidente/harbor-logs"], "path": "collections/LePresidente/harbor.yml", "scenarios": ["LePresidente/harbor-bf"], "version": "0.1", "versions": {"0.1": {"digest": "93d1b83b4948e89c35e034037be9588309a097009cf00335e054c8314424ff24"}}}, "LePresidente/jellyfin": {"content": "parsers:\n  - LePresidente/jellyfin-logs\n  - crowdsecurity/jellyfin-whitelist\nscenarios:\n  - LePresidente/jellyfin-bf\ndescription: \"Jellyfin support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - jellyfin\n", "description": "Jellyfin support : parser and brute-force detection", "parsers": ["LePresidente/jellyfin-logs", "crowdsecurity/jellyfin-whitelist"], "path": "collections/LePresidente/jellyfin.yml", "scenarios": ["LePresidente/jellyfin-bf"], "version": "0.2", "versions": {"0.1": {"digest": "4aba23304b8de2d269e4223a64e418b23154461af1862ef6b67239033e1bef43"}, "0.2": {"digest": "fe7f6fd1f6dde5ca66020b1d8431784a27dbb9ff34bbd15f4222356eb713a80f"}}}, "LePresidente/jellyseerr": {"content": "parsers:\n  - LePresidente/jellyseerr-logs\nscenarios:\n  - LePresidente/jellyseerr-bf\ndescription: \"jellyseerr Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - jellyseerr", "description": "jellyseerr Support : parser and brute-force detection", "parsers": ["LePresidente/jellyseerr-logs"], "path": "collections/LePresidente/jellyseerr.yml", "scenarios": ["LePresidente/jellyseerr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "aca16e29cb6b48379195cc5a945d40ec50839728ad57bfeaca2002cb74c4e942"}}}, "LePresidente/ombi": {"content": "parsers:\n  - LePresidente/ombi-logs\nscenarios:\n  - LePresidente/ombi-bf\ndescription: \"Ombi Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - ombi", "description": "Ombi Support : parser and brute-force detection", "parsers": ["LePresidente/ombi-logs"], "path": "collections/LePresidente/ombi.yml", "scenarios": ["LePresidente/ombi-bf"], "version": "0.2", "versions": {"0.1": {"digest": "e9d9d297381904e0a1cc418bc8474969bca3f37acde631e7ed84529bd7e7f1f4"}, "0.2": {"digest": "fa7cf1b7df176ab36a30f56f863949f204ffea11ba93ab2d31e63c88a716725c"}}}, "LePresidente/overseerr": {"content": "parsers:\n  - LePresidente/overseerr-logs\nscenarios:\n  - LePresidente/overseerr-bf\ndescription: \"overseerr Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - overseerr", "description": "overseerr Support : parser and brute-force detection", "parsers": ["LePresidente/overseerr-logs"], "path": "collections/LePresidente/overseerr.yml", "scenarios": ["LePresidente/overseerr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "25fd12bd42233e51847faf10f6189ebbdc692ddf8ec9fe092ce4d3e55ef87ed3"}}}, "LePresidente/redmine": {"content": "parsers:\n  - LePresidente/redmine-logs\nscenarios:\n  - LePresidente/redmine-bf\ndescription: \"Redmine Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - redmine", "description": "Redmine Support : parser and brute-force detection", "parsers": ["LePresidente/redmine-logs"], "path": "collections/LePresidente/redmine.yml", "scenarios": ["LePresidente/redmine-bf"], "version": "0.1", "versions": {"0.1": {"digest": "5e00897f8019dfd8e49d5040827577195a83d57a1903e654c395874d98b029cb"}}}, "MariuszKociubinski/bitwarden": {"content": "parsers: \n  - MariuszKociubinski/bitwarden-logs\nscenarios:\n  - MariuszKociubinski/bitwarden-bf\ndescription: \"Bitwarden Self Hosted support : parser and brute-force detection\"\nauthor: MariuszKociubinski\ntags:\n  - linux\n  - brute-force\n  - bitwarden", "description": "Bitwarden Self Hosted support : parser and brute-force detection", "parsers": ["MariuszKociubinski/bitwarden-logs"], "path": "collections/MariuszKociubinski/bitwarden.yaml", "scenarios": ["MariuszKociubinski/bitwarden-bf"], "version": "0.1", "versions": {"0.1": {"digest": "6b194780d0bcc423fb609ec55cf283df24510ea53e28ee63173fd8c94490de7c"}}}, "ZoeyVid/npmplus": {"collections": ["crowdsecurity/appsec-virtual-patching", "crowdsecurity/appsec-generic-rules", "crowdsecurity/base-http-scenarios", "crowdsecurity/modsecurity"], "content": "parsers:\n  - ZoeyVid/npmplus-logs\ncollections:\n  - crowdsecurity/appsec-virtual-patching\n  - crowdsecurity/appsec-generic-rules\n  - crowdsecurity/base-http-scenarios\n  - crowdsecurity/modsecurity\nscenarios:\n  - crowdsecurity/nginx-req-limit-exceeded\ndescription: \"NPMplus support: parser and generic http scenarios\"\nauthor: ZoeyVid\ntags:\n  - linux\n  - nginx\n  - nginx-proxy\n  - crawl\n  - scan\n", "description": "NPMplus support: parser and generic http scenarios", "parsers": ["ZoeyVid/npmplus-logs"], "path": "collections/ZoeyVid/npmplus.yaml", "scenarios": ["crowdsecurity/nginx-req-limit-exceeded"], "version": "0.3", "versions": {"0.1": {"digest": "fee2cab2c1ddb4243b18cbffffd1176bbc25bfbc3803140806738f23e1b301c4"}, "0.2": {"digest": "7b9d1c50999fe6dcf3df75344de98d68d394873c7a11c61de07aaaadc8ab6926"}, "0.3": {"digest": "70a7cd34504b8f6f00ba68b45999ba89b834e6e94b99d2619a3e9998f5ba2824"}}}, "a1ad/meshcentral": {"content": "parsers:\n  - a1ad/meshcentral-logs\nscenarios:\n  - a1ad/meshcentral-bf\ndescription: \"Meshcentral support : parser and brute-force detection\"\nauthor: a1ad\ntags:\n  - linux\n  - brute-force\n  - meshcentral\n", "description": "Meshcentral support : parser and brute-force detection", "parsers": ["a1ad/meshcentral-logs"], "path": "collections/a1ad/meshcentral.yml", "scenarios": ["a1ad/meshcentral-bf"], "version": "0.2", "versions": {"0.1": {"digest": "f3f12866b7128fab9b648ae1c27202c5d46aae241d2b0151a62956d17fc3774f"}, "0.2": {"digest": "dc8041951ca55d91c59af573ae9b6284a89f84cddc1267ffe0de56d0ebd41602"}}}, "a1ad/mikrotik": {"content": "parsers:\n  - a1ad/mikrotik-logs\nscenarios:\n  - a1ad/mikrotik-scan-multi_ports\n  - a1ad/mikrotik-bf\ndescription: \"Mikrotik support: logs, auth and port-scans detection scenarios\"\nauthor: a1ad\ntags:\n  - mikrotik\n  - portscan\n  - brute force\n", "description": "Mikrotik support: logs, auth and port-scans detection scenarios", "parsers": ["a1ad/mikrotik-logs"], "path": "collections/a1ad/mikrotik.yml", "scenarios": ["a1ad/mikrotik-scan-multi_ports", "a1ad/mikrotik-bf"], "version": "0.2", "versions": {"0.1": {"digest": "04e0cdfcab4158d6067397b7592b6fecc89171e0eeac055557b17d26e3d8c00b"}, "0.2": {"digest": "7def1e4c4f498ef43a22ef297c716013892f5b2cb201359e2d9336cc7d85f028"}}}, "aidalinfo/couchdb": {"content": "#the list of parsers it contains\nparsers:\n  - aidalinfo/couchdb-logs\nscenarios:\n  - aidalinfo/couchdb-bf\n  - aidalinfo/couchdb-crawl\n\ndescription: \"CouchDB parsers and scenarios for improve your security ! Made with <3 by Aidalinfo\"\nauthor: aidalinfo\ntags:\n  - couchdb\n", "description": "CouchDB parsers and scenarios for improve your security ! Made with <3 by Aidalinfo", "parsers": ["aidalinfo/couchdb-logs"], "path": "collections/aidalinfo/couchdb.yaml", "scenarios": ["aidalinfo/couchdb-bf", "aidalinfo/couchdb-crawl"], "version": "0.1", "versions": {"0.1": {"digest": "6fb50c70d3f6297ef796f52a6c0c733da6876c0fdea01d25bf87a910152c2f0a"}}}, "andreasbrett/baikal": {"content": "parsers:\n    - andreasbrett/baikal-logs\nscenarios:\n    - andreasbrett/baikal-bf\ndescription: \"Baikal support: parser and brute-force detection\"\nauthor: andreasbrett\ntags:\n    - linux\n    - brute-force\n    - baikal\n", "description": "Baikal support: parser and brute-force detection", "parsers": ["andreasbrett/baikal-logs"], "path": "collections/andreasbrett/baikal.yml", "scenarios": ["andreasbrett/baikal-bf"], "version": "0.1", "versions": {"0.1": {"digest": "cff4a56fbb40a4b6d7b8940d397728088090b3dfebb4e773abc0c895b5a724f0"}}}, "andreasbrett/paperless-ngx": {"content": "parsers:\n    - andreasbrett/paperless-ngx-logs\nscenarios:\n    - andreasbrett/paperless-ngx-bf\ndescription: \"Paperless-ngx support: parser and brute-force detection\"\nauthor: andreasbrett\ntags:\n    - linux\n    - brute-force\n    - paperless-ngx\n", "description": "Paperless-ngx support: parser and brute-force detection", "parsers": ["andreasbrett/paperless-ngx-logs"], "path": "collections/andreasbrett/paperless-ngx.yml", "scenarios": ["andreasbrett/paperless-ngx-bf"], "version": "0.1", "versions": {"0.1": {"digest": "ea3c8748bb3c1a0ba83d93cd3e93e18ce677407d3964e1e4b97d674507f33ef8"}}}, "andreasbrett/webmin": {"content": "parsers:\n    - andreasbrett/webmin-logs\nscenarios:\n    - andreasbrett/webmin-bf\ndescription: \"Webmin support: parser and brute-force detection\"\nauthor: andreasbrett\ntags:\n    - linux\n    - brute-force\n    - webmin\n", "description": "Webmin support: parser and brute-force detection", "parsers": ["andreasbrett/webmin-logs"], "path": "collections/andreasbrett/webmin.yml", "scenarios": ["andreasbrett/webmin-bf"], "version": "0.1", "versions": {"0.1": {"digest": "6224508886b13ff1c68c31faa7cc28ecd27ce7301b8f7089743c3f5d15bd73a2"}}}, "baudneo/gotify": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - baudneo/gotify-logs\nscenarios:\n  - baudneo/gotify-bf\ndescription: \"Gotify bruteforce login protection\"\nauthor: baudneo\ntags:\n  - Gotify\n  - bruteforce\n", "description": "Gotify bruteforce login protection", "parsers": ["crowdsecurity/syslog-logs", "baudneo/gotify-logs"], "path": "collections/baudneo/gotify.yaml", "scenarios": ["baudneo/gotify-bf"], "version": "0.1", "versions": {"0.1": {"digest": "9d3c0d0e2271d560f5aa45601cca9dd1d4f5722e7f1ca8198f21acc1231bca34"}}}, "baudneo/zoneminder": {"collections": ["baudneo/zoneminder_http-cve"], "content": "parsers:\n  - crowdsecurity/syslog-logs\n  - baudneo/zoneminder-logs\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - baudneo/zoneminder-bf\ncollections:\n  - baudneo/zoneminder_http-cve\ndescription: \"ZoneMinder bruteforce login, user enum and cve  protection\"\nauthor: baudneo\ntags:\n  - ZoneMinder\n  - bruteforce\n", "description": "ZoneMinder bruteforce login, user enum and cve  protection", "parsers": ["crowdsecurity/syslog-logs", "baudneo/zoneminder-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/baudneo/zoneminder.yaml", "scenarios": ["baudneo/zoneminder-bf"], "version": "0.2", "versions": {"0.1": {"digest": "2ea1b2b8b5b7f1f6fe3c23300c08f0e6df8afea45ad94cb4cf6af36cdf489174"}, "0.2": {"digest": "a1f88aaab3a31ad0b469f80dc7ff1c12bbc3d0e8d3f1a2c4d7be218ab725e951"}}}, "baudneo/zoneminder_http-cve": {"content": "parsers:\n  - crowdsecurity/apache2-logs\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - baudneo/zoneminder_cve-2022-39285\n  - baudneo/zoneminder_cve-2022-39290\n  - baudneo/zoneminder_cve-2022-39291\ndescription: \"ZoneMinder CVE protection\"\nauthor: baudneo\ntags:\n  - ZoneMinder\n  - CVE-2022-39290\n", "description": "ZoneMinder CVE protection", "parsers": ["crowdsecurity/apache2-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/baudneo/zoneminder_http-cve.yaml", "scenarios": ["baudneo/zoneminder_cve-2022-39285", "baudneo/zoneminder_cve-2022-39290", "baudneo/zoneminder_cve-2022-39291"], "version": "0.1", "versions": {"0.1": {"digest": "0c4bc2952784bd9cc0f2a9590fa6f60124fbeaf1f3c04f603ee8b53adeef8c4a"}}}, "corvese/apache-guacamole": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - corvese/apache-guacamole-logs\nscenarios:\n  - corvese/apache-guacamole_bf\n  - corvese/apache-guacamole_user_enum\ndescription: \"Apache Guacamole bruteforce login protection\"\nauthor: corvese\ntags:\n  - ApacheGuacamole\n  - bruteforce", "description": "Apache Guacamole bruteforce login protection", "parsers": ["crowdsecurity/syslog-logs", "corvese/apache-guacamole-logs"], "path": "collections/corvese/apache-guacamole.yaml", "scenarios": ["corvese/apache-guacamole_bf", "corvese/apache-guacamole_user_enum"], "version": "0.1", "versions": {"0.1": {"digest": "eec539fc4d01c275a0777aa0e41578fc1480f79e8b23c97e695c9ff1a855dd5c"}}}, "crowdsecurity/amavis": {"content": "parsers:\n  - crowdsecurity/amavis-logs\n  - crowdsecurity/syslog-logs\nscenarios:\n  - crowdsecurity/amavis-blocked\ndescription: \"amavis support : parser and blocking scenario\"\nauthor: crowdsecurity\ntags:\n  - clamav\n  - amavis\n  - mail\n", "description": "amavis support : parser and blocking scenario", "parsers": ["crowdsecurity/amavis-logs", "crowdsecurity/syslog-logs"], "path": "collections/crowdsecurity/amavis.yaml", "scenarios": ["crowdsecurity/amavis-blocked"], "version": "0.1", "versions": {"0.1": {"digest": "cbb1f1e1029d6b8d08023f5332f430942079a00fde8fa65b14ca18c1c8194ff6"}}}, "crowdsecurity/apache2": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/apache2-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"apache2 support : parser and generic http scenarios \"\nauthor: crowdsecurity\ntags:\n  - linux\n  - apache2\n  - crawl\n  - scan\n\n", "description": "apache2 support : parser and generic http scenarios ", "parsers": ["crowdsecurity/apache2-logs"], "path": "collections/crowdsecurity/apache2.yaml", "version": "0.1", "versions": {"0.1": {"digest": "3601f38e187479724e830e0182f51468c980f661e6eedc6d2e586f622e3b48ea"}}}, "crowdsecurity/apiscp": {"collections": ["crowdsecurity/apache2", "crowdsecurity/dovecot", "crowdsecurity/haproxy", "crowdsecurity/mysql", "crowdsecurity/postfix", "crowdsecurity/pgsql", "crowdsecurity/vsftpd"], "content": "scenarios:\n  - crowdsecurity/http-apiscp-bf\ncollections:\n  - crowdsecurity/apache2\n  - crowdsecurity/dovecot\n  - crowdsecurity/haproxy\n  - crowdsecurity/mysql\n  - crowdsecurity/postfix\n  - crowdsecurity/pgsql\n  - crowdsecurity/vsftpd\ndescription: \"apisCP support : collections for services supported by apisCP + apisCP admin page parser/scenario bruteforce\"\nauthor: crowdsecurity\ntags:\n  - apiscp\n\n", "description": "apisCP support : collections for services supported by apisCP + apisCP admin page parser/scenario bruteforce", "path": "collections/crowdsecurity/apiscp.yaml", "scenarios": ["crowdsecurity/http-apiscp-bf"], "version": "0.1", "versions": {"0.1": {"digest": "0d5b10b1ab997a9826b657dfa145799904c7f340c38b0db0855f24900900408a"}}}, "crowdsecurity/appsec-crs": {"appsec-configs": ["crowdsecurity/crs"], "appsec-rules": ["crowdsecurity/crs"], "content": "parsers:\n  - crowdsecurity/appsec-logs\nappsec-configs:\n  - crowdsecurity/crs\nappsec-rules:\n  - crowdsecurity/crs\ndescription: \"Appsec: Modsecurity core rule set rules\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - http\n  - appsec\n  - modsecurity\n", "description": "Appsec: Modsecurity core rule set rules", "parsers": ["crowdsecurity/appsec-logs"], "path": "collections/crowdsecurity/appsec-crs.yaml", "version": "0.4", "versions": {"0.1": {"digest": "61d5e358aa86b872300e540be39b066c278567c4948bb74d4e4f339bbb126154"}, "0.2": {"digest": "a9f36fac18d19edcb0c3a2a4ff3d58570fc407ac39fb9447e9dac7510184fd47"}, "0.3": {"digest": "7f56cb3fa217f983d1648e6aea36d399be444e09046c0b5b23e7eb55480eaf89"}, "0.4": {"digest": "a9f36fac18d19edcb0c3a2a4ff3d58570fc407ac39fb9447e9dac7510184fd47"}}}, "crowdsecurity/appsec-generic-rules": {"appsec-configs": ["crowdsecurity/generic-rules", "crowdsecurity/appsec-default"], "appsec-rules": ["crowdsecurity/base-config", "crowdsecurity/generic-freemarker-ssti", "crowdsecurity/generic-wordpress-uploads-php"], "content": "name: crowdsecurity/appsec-generic-rules\nappsec-rules:\n  - crowdsecurity/base-config\n  - crowdsecurity/generic-freemarker-ssti\n  - crowdsecurity/generic-wordpress-uploads-php\nappsec-configs:\n  - crowdsecurity/generic-rules\n  - crowdsecurity/appsec-default\nparsers:\n  - crowdsecurity/appsec-logs\nscenarios:\n  - crowdsecurity/appsec-vpatch\ncontexts:\n  - crowdsecurity/appsec_base\ndescription: \"A collection of generic attack vectors for additional protection.\"\nauthor: crowdsecurity\n", "contexts": ["crowdsecurity/appsec_base"], "description": "A collection of generic attack vectors for additional protection.", "parsers": ["crowdsecurity/appsec-logs"], "path": "collections/crowdsecurity/appsec-generic-rules.yaml", "scenarios": ["crowdsecurity/appsec-vpatch"], "version": "0.6", "versions": {"0.1": {"digest": "f538ca65415d016977a2ed77939df0cecdea212bb16c3e1c22f1df0b1ec2775b"}, "0.2": {"digest": "16e54590169a4094bd679c607d8714fe97984e86529448cf61975fe6c270be05"}, "0.3": {"digest": "54c64c526b187a93140bbb8abf9b25b3c3f8028117fcd9859749d86808f2f2af"}, "0.4": {"digest": "e985557ce1bcf99fcf4c7360bdc1085628a894880b1e0860bedd6426eb2e05b1"}, "0.5": {"digest": "712078647aa7414a2447248cbf68a75919be37767452b14cb7e0b845e51d9972"}, "0.6": {"digest": "7428b01d3f12284c6a5e4db84c641ee0bfa37672911e364fabe8ffea816fcd83"}}}, "crowdsecurity/appsec-virtual-patching": {"appsec-configs": ["crowdsecurity/virtual-patching", "crowdsecurity/appsec-default"], "appsec-rules": ["crowdsecurity/base-config", "crowdsecurity/vpatch-env-access", "crowdsecurity/vpatch-CVE-2023-40044", "crowdsecurity/vpatch-CVE-2017-9841", "crowdsecurity/vpatch-CVE-2020-11738", "crowdsecurity/vpatch-CVE-2022-27926", "crowdsecurity/vpatch-CVE-2022-35914", "crowdsecurity/vpatch-CVE-2022-46169", "crowdsecurity/vpatch-CVE-2023-20198", "crowdsecurity/vpatch-CVE-2023-22515", "crowdsecurity/vpatch-CVE-2023-33617", "crowdsecurity/vpatch-CVE-2023-34362", "crowdsecurity/vpatch-CVE-2023-3519", "crowdsecurity/vpatch-CVE-2023-42793", "crowdsecurity/vpatch-CVE-2023-50164", "crowdsecurity/vpatch-CVE-2023-38205", "crowdsecurity/vpatch-CVE-2023-24489", "crowdsecurity/vpatch-CVE-2021-3129", "crowdsecurity/vpatch-CVE-2021-22941", "crowdsecurity/vpatch-CVE-2019-12989", "crowdsecurity/vpatch-CVE-2022-44877", "crowdsecurity/vpatch-CVE-2018-10562", "crowdsecurity/vpatch-CVE-2023-6553", "crowdsecurity/vpatch-CVE-2018-1000861", "crowdsecurity/vpatch-CVE-2019-1003030", "crowdsecurity/vpatch-CVE-2022-22965", "crowdsecurity/vpatch-CVE-2023-23752", "crowdsecurity/vpatch-CVE-2023-49070", "crowdsecurity/vpatch-laravel-debug-mode", "crowdsecurity/vpatch-CVE-2023-28121", "crowdsecurity/vpatch-CVE-2020-17496", "crowdsecurity/vpatch-CVE-2023-1389", "crowdsecurity/vpatch-CVE-2023-7028", "crowdsecurity/vpatch-CVE-2023-46805", "crowdsecurity/vpatch-CVE-2024-23897", "crowdsecurity/vpatch-CVE-2023-22527", "crowdsecurity/vpatch-CVE-2023-35078", "crowdsecurity/vpatch-CVE-2023-35082", "crowdsecurity/vpatch-CVE-2022-22954", "crowdsecurity/vpatch-CVE-2024-1212", "crowdsecurity/vpatch-symfony-profiler", "crowdsecurity/vpatch-connectwise-auth-bypass", "crowdsecurity/vpatch-CVE-2024-22024", "crowdsecurity/vpatch-CVE-2024-27198", "crowdsecurity/vpatch-CVE-2024-3273", "crowdsecurity/vpatch-CVE-2024-4577", "crowdsecurity/vpatch-CVE-2024-29849", "crowdsecurity/vpatch-CVE-2023-47218", "crowdsecurity/vpatch-git-config", "crowdsecurity/vpatch-CVE-2024-32113", "crowdsecurity/vpatch-CVE-2024-3272", "crowdsecurity/vpatch-CVE-2024-28255", "crowdsecurity/vpatch-CVE-2024-29824", "crowdsecurity/vpatch-CVE-2024-27348", "crowdsecurity/vpatch-CVE-2020-5902", "crowdsecurity/vpatch-CVE-2018-13379", "crowdsecurity/vpatch-CVE-2022-26134", "crowdsecurity/vpatch-CVE-2024-34102", "crowdsecurity/vpatch-CVE-2024-29973", "crowdsecurity/vpatch-CVE-2022-41082", "crowdsecurity/vpatch-CVE-2019-18935", "crowdsecurity/vpatch-CVE-2024-8190", "crowdsecurity/vpatch-CVE-2024-28987", "crowdsecurity/vpatch-CVE-2024-38856", "crowdsecurity/vpatch-CVE-2018-20062", "crowdsecurity/vpatch-CVE-2021-26086", "crowdsecurity/vpatch-CVE-2024-51567", "crowdsecurity/vpatch-CVE-2024-27956", "crowdsecurity/vpatch-CVE-2024-27954", "crowdsecurity/vpatch-CVE-2024-0012", "crowdsecurity/vpatch-CVE-2024-9474", "crowdsecurity/vpatch-CVE-2024-7593", "crowdsecurity/vpatch-CVE-2024-52301"], "content": "appsec-configs:\n- crowdsecurity/virtual-patching\n- crowdsecurity/appsec-default\nappsec-rules:\n- crowdsecurity/base-config\n- crowdsecurity/vpatch-env-access\n- crowdsecurity/vpatch-CVE-2023-40044\n- crowdsecurity/vpatch-CVE-2017-9841\n- crowdsecurity/vpatch-CVE-2020-11738\n- crowdsecurity/vpatch-CVE-2022-27926\n- crowdsecurity/vpatch-CVE-2022-35914\n- crowdsecurity/vpatch-CVE-2022-46169\n- crowdsecurity/vpatch-CVE-2023-20198\n- crowdsecurity/vpatch-CVE-2023-22515\n- crowdsecurity/vpatch-CVE-2023-33617\n- crowdsecurity/vpatch-CVE-2023-34362\n- crowdsecurity/vpatch-CVE-2023-3519\n- crowdsecurity/vpatch-CVE-2023-42793\n- crowdsecurity/vpatch-CVE-2023-50164\n- crowdsecurity/vpatch-CVE-2023-38205\n- crowdsecurity/vpatch-CVE-2023-24489\n- crowdsecurity/vpatch-CVE-2021-3129\n- crowdsecurity/vpatch-CVE-2021-22941\n- crowdsecurity/vpatch-CVE-2019-12989\n- crowdsecurity/vpatch-CVE-2022-44877\n- crowdsecurity/vpatch-CVE-2018-10562\n- crowdsecurity/vpatch-CVE-2023-6553\n- crowdsecurity/vpatch-CVE-2018-1000861\n- crowdsecurity/vpatch-CVE-2019-1003030\n- crowdsecurity/vpatch-CVE-2022-22965\n- crowdsecurity/vpatch-CVE-2023-23752\n- crowdsecurity/vpatch-CVE-2023-49070\n- crowdsecurity/vpatch-laravel-debug-mode\n- crowdsecurity/vpatch-CVE-2023-28121\n- crowdsecurity/vpatch-CVE-2020-17496\n- crowdsecurity/vpatch-CVE-2023-1389\n- crowdsecurity/vpatch-CVE-2023-7028\n- crowdsecurity/vpatch-CVE-2023-46805\n- crowdsecurity/vpatch-CVE-2024-23897\n- crowdsecurity/vpatch-CVE-2023-22527\n- crowdsecurity/vpatch-CVE-2023-35078\n- crowdsecurity/vpatch-CVE-2023-35082\n- crowdsecurity/vpatch-CVE-2022-22954\n- crowdsecurity/vpatch-CVE-2024-1212\n- crowdsecurity/vpatch-symfony-profiler\n- crowdsecurity/vpatch-connectwise-auth-bypass\n- crowdsecurity/vpatch-CVE-2024-22024\n- crowdsecurity/vpatch-CVE-2024-27198\n- crowdsecurity/vpatch-CVE-2024-3273\n- crowdsecurity/vpatch-CVE-2024-4577\n- crowdsecurity/vpatch-CVE-2024-29849\n- crowdsecurity/vpatch-CVE-2023-47218\n- crowdsecurity/vpatch-git-config\n- crowdsecurity/vpatch-CVE-2024-32113\n- crowdsecurity/vpatch-CVE-2024-3272\n- crowdsecurity/vpatch-CVE-2024-28255\n- crowdsecurity/vpatch-CVE-2024-29824\n- crowdsecurity/vpatch-CVE-2024-27348\n- crowdsecurity/vpatch-CVE-2020-5902\n- crowdsecurity/vpatch-CVE-2018-13379\n- crowdsecurity/vpatch-CVE-2022-26134\n- crowdsecurity/vpatch-CVE-2024-34102\n- crowdsecurity/vpatch-CVE-2024-29973\n- crowdsecurity/vpatch-CVE-2022-41082\n- crowdsecurity/vpatch-CVE-2019-18935\n- crowdsecurity/vpatch-CVE-2024-8190\n- crowdsecurity/vpatch-CVE-2024-28987\n- crowdsecurity/vpatch-CVE-2024-38856\n- crowdsecurity/vpatch-CVE-2018-20062\n- crowdsecurity/vpatch-CVE-2021-26086\n- crowdsecurity/vpatch-CVE-2024-51567\n- crowdsecurity/vpatch-CVE-2024-27956\n- crowdsecurity/vpatch-CVE-2024-27954\n- crowdsecurity/vpatch-CVE-2024-0012\n- crowdsecurity/vpatch-CVE-2024-9474\n- crowdsecurity/vpatch-CVE-2024-7593\n- crowdsecurity/vpatch-CVE-2024-52301\nauthor: crowdsecurity\ncontexts:\n- crowdsecurity/appsec_base\ndescription: a generic virtual patching collection, suitable for most web servers.\nname: crowdsecurity/appsec-virtual-patching\nparsers:\n- crowdsecurity/appsec-logs\nscenarios:\n- crowdsecurity/appsec-vpatch\n", "contexts": ["crowdsecurity/appsec_base"], "description": "a generic virtual patching collection, suitable for most web servers.", "parsers": ["crowdsecurity/appsec-logs"], "path": "collections/crowdsecurity/appsec-virtual-patching.yaml", "scenarios": ["crowdsecurity/appsec-vpatch"], "version": "4.7", "versions": {"0.1": {"digest": "a165d638c8d826a932e4ca4e70ec5379d558a0bee1356e871c7c92cc2df714fc"}, "0.2": {"digest": "4bacd3307cc84a5498d0939c83df3eccf40f430d4eedbdc1f7e7ae1fb8b71676"}, "0.3": {"digest": "28962f063f10702629018df810167378d8250185ab8d64f4f5d1454b14dd1d4f"}, "0.4": {"digest": "669b4be106d8d3e7754eeafba093db2228f2750dc399d8d9a41c3bb8256712fb"}, "0.5": {"digest": "b15a1c03f30928de35d1744f77a32dd4efe06517a9d14a640c13035124922a20"}, "0.6": {"digest": "9ef6be9953b564972004433adab368203163324bc71f236e0589b567b7c8f97b"}, "0.7": {"digest": "129a0eed7b8997130d904d6fbf1ba165927c17075b9c541eeb4cb150c6540fa4"}, "0.8": {"digest": "c01f361d48f93381b296a9c528992adee4637df7e161881ba8f41752cea70abd"}, "0.9": {"digest": "9dd886832f31bace922431d965094f1c1b38320ea0a84c1badc4a9e895a630d9"}, "1.0": {"digest": "da6cc931742c52dd5594b7b30cc9f8a0c974d1d3edbfd778c1919d7212ed9693"}, "1.1": {"digest": "4d3d9a150db5cd5735c794c5031858e62bdac6d2db7515cf3562860af448ddfd"}, "1.2": {"digest": "3867ac305d5120a69e41b00ec6176702b5d28a99086b7bab3b43ae84ce7b9f0f"}, "1.3": {"digest": "f255eae826b30e3f55b2abd06fad49a20eb3c7f479a557bb140d5894703eef4d"}, "1.4": {"digest": "8340b80826f3265925d371ea3c1fb714fc44d0effacf8f61939a52284edead40"}, "1.5": {"digest": "eef32a81c61cdd4527beca1d6e97aa0d6263ed19766aa6dfdbc68862a42d0844"}, "1.6": {"digest": "2519bff9f2587cc4978ee747ad7bc5abff0df3cb196c79eee5061bc8bf76ce93"}, "1.7": {"digest": "acea1f3ced4acc7073d8976ecb61fa60add9716deb267776a03b097f4cf2d7da"}, "1.8": {"digest": "2b370a30949b679cf0fff192026a8f0155b88c79d4a81a642620b29f4090bf1c"}, "1.9": {"digest": "e3756e1e6a6767094855fd5a333933ca3018b9ad91088b3e4aa2acfc50857f21"}, "2.0": {"digest": "c09ee7339dbed0c05974f8ef4d04770f31e7898aef1438a73f29cffb364f5fe1"}, "2.1": {"digest": "fc1ef8a2e1323bce88166aa776062c6aa25b22da058200d60d541209fdd82157"}, "2.2": {"digest": "ca70bd5441148709346929b7a8ccb9a5e9cbd7a4d5756991a9c6e6fa99245cec"}, "2.3": {"digest": "51a32651bd5fe6642a0e7a26930ecebadb72625088c611e4b12582fdfc8536b0"}, "2.4": {"digest": "b95e84a811b4f1bfcb342d7627fbacb259a995bddd553d3acbfc2851fcbdfe8f"}, "2.5": {"digest": "aec91d6be5bb8b0a3fe6c20aaa806eb619e335b9b8c7d299a0b02d312666505b"}, "2.6": {"digest": "b1681f06a22dd41a5faf1bf8cbbdecb4012517defd20399fad2a505d0aa32250"}, "2.7": {"digest": "cfe60b7855a7591bdecf89aee1897f491c88f7daa6269f0e40dfd79165f669b7"}, "2.8": {"digest": "2201db5d448c155438beb55a34dd87ce649968118ba1c1960db085aa26e18f24"}, "2.9": {"digest": "73305f1c435480e871a94ec59f09e71e93c41b2ae0e8af4faad789e314400436"}, "3.0": {"digest": "ac6307b79c4bb31ad396a1a8f4f080edc339f97c2fba54805c7ffb07d1ef6983"}, "3.1": {"digest": "a8699f10f6e47357969aa07e6e77607dfac7246fa231f59e0a9a363ba3fdfc3b"}, "3.2": {"digest": "73305f1c435480e871a94ec59f09e71e93c41b2ae0e8af4faad789e314400436"}, "3.3": {"digest": "7cd4bdca37098a2a398262c253dfa2d2925168b1820cc58ea62ea953a1517722"}, "3.4": {"digest": "0b89691d948596e37fc998f369d2f782b0357f0036a6752ae5b3811566615236"}, "3.5": {"digest": "b3954ab20799bf5e8f4217aff7487fd2053d68ac570f85b353699705f15b2dbc"}, "3.6": {"digest": "ef44f9692220ce052b4d39829021ac4d9f7257714f87b9b2081d1cca7c39d36c"}, "3.7": {"digest": "90d32e8091a3bfc3b60a10e199df5b3e3a60402da5e32dc4cf6c4138c2de83ec"}, "3.8": {"digest": "b6d443d5023980301f177fd9797fdc5053c40d3449feebabdad170e527086778"}, "3.9": {"digest": "321e359895a43e8bdecf3e935829664a34b74f345a23d7cbdbe38d73aa45aaf1"}, "4.0": {"digest": "368679c328cc886eb25027046c94d82d141bc701e9fa398275c6ee4d5a6de70e"}, "4.1": {"digest": "541309db799190b3791bd72fd289cdab50c8ba7d90ae99084918ace0a890050a"}, "4.2": {"digest": "db45e9ff4b84538b8402dd1fc57ee137ad14562f15fbd7719f4f5813e824b71a"}, "4.3": {"digest": "f526f84b222b2e83c148c4c028c69ae124b04d790877084395a1750b38ecaae9"}, "4.4": {"digest": "ba304a73baf21c9d547dbf7dbb7507173b3ad5ec139cbb762cb13fc78819278f"}, "4.5": {"digest": "702bce51ce84b376355b93e8accf3943b50007fcebcb3388eec8771806ba726b"}, "4.6": {"digest": "a96e4880adb015a86249a6808fe7085d9c5bb37e6351adbbe105b5f3ac53cac6"}, "4.7": {"digest": "be7baa78901f12377f0d346d46a38c9ff4f73f0c584d32ff3373ed8c2abe5560"}}}, "crowdsecurity/appsec-wordpress": {"appsec-configs": ["crowdsecurity/virtual-patching"], "appsec-rules": ["crowdsecurity/base-config", "crowdsecurity/vpatch-CVE-2023-0600", "crowdsecurity/vpatch-CVE-2023-0900", "crowdsecurity/vpatch-CVE-2023-2009", "crowdsecurity/vpatch-CVE-2023-23488", "crowdsecurity/vpatch-CVE-2023-23489", "crowdsecurity/vpatch-CVE-2023-4634", "crowdsecurity/vpatch-CVE-2023-6360", "crowdsecurity/vpatch-CVE-2023-6567", "crowdsecurity/vpatch-CVE-2023-6623", "crowdsecurity/vpatch-CVE-2024-1061", "crowdsecurity/vpatch-CVE-2024-1071", "crowdsecurity/generic-wordpress-uploads-php"], "content": "name: crowdsecurity/appsec-wordpress\nappsec-rules:\n  - crowdsecurity/base-config\n  - crowdsecurity/vpatch-CVE-2023-0600\n  - crowdsecurity/vpatch-CVE-2023-0900\n  - crowdsecurity/vpatch-CVE-2023-2009\n  - crowdsecurity/vpatch-CVE-2023-23488\n  - crowdsecurity/vpatch-CVE-2023-23489\n  - crowdsecurity/vpatch-CVE-2023-4634\n  - crowdsecurity/vpatch-CVE-2023-6360\n  - crowdsecurity/vpatch-CVE-2023-6567\n  - crowdsecurity/vpatch-CVE-2023-6623\n  - crowdsecurity/vpatch-CVE-2024-1061\n  - crowdsecurity/vpatch-CVE-2024-1071\n  - crowdsecurity/generic-wordpress-uploads-php\nappsec-configs:\n  - crowdsecurity/virtual-patching\ndescription: \"A virtual patching collection, suitable for WordPress websites\"\nauthor: crowdsecurity\n", "description": "A virtual patching collection, suitable for WordPress websites", "path": "collections/crowdsecurity/appsec-wordpress.yaml", "version": "0.3", "versions": {"0.1": {"digest": "6e7995f560a05aa0229b9aa7a4ff23d1d6418777ab4e732be74d52bea2d875f7"}, "0.2": {"digest": "6b682d61b32739dbea965b3dfc34d2c9f19577216fe49b7ea905d733d25c68e6"}, "0.3": {"digest": "db408d5534c3d187fa010e2889f0e79a3ac840ae055bcd7f1d01e1f57a51dbaf"}}}, "crowdsecurity/asterisk": {"content": "parsers:\n  - crowdsecurity/asterisk-logs\nscenarios:\n  - crowdsecurity/asterisk_bf\n  - crowdsecurity/asterisk_user_enum\ndescription: \"asterisk support : parser and bruteforce/user enumeration scenarios \"\nauthor: crowdsecurity\ntags:\n  - asterisk\n  - bruteforce\n\n", "description": "asterisk support : parser and bruteforce/user enumeration scenarios ", "parsers": ["crowdsecurity/asterisk-logs"], "path": "collections/crowdsecurity/asterisk.yaml", "scenarios": ["crowdsecurity/asterisk_bf", "crowdsecurity/asterisk_user_enum"], "version": "0.1", "versions": {"0.1": {"digest": "4dcfaad1205510572bc715811b4f70a4ab12ad2a54a7ceac202ce9f2517502cd"}}}, "crowdsecurity/auditd": {"content": "parsers:\n  - crowdsecurity/auditd-logs\nscenarios:\n  - crowdsecurity/auditd-postexploit-rm\n  - crowdsecurity/auditd-postexploit-pkill\n  - crowdsecurity/auditd-postexploit-exec-from-net\n  - crowdsecurity/auditd-sus-exec\n  - crowdsecurity/auditd-base64-exec-behavior\n  - crowdsecurity/auditd-suid-crash\npostoverflows:\n  - crowdsecurity/auditd-whitelisted-process\ndescription: \"auditd support : parsers and scenarios\"\nauthor: crowdsecurity\ntags:\n  - auditd\n  - compliance\n  - postexploitation\n\n\n", "description": "auditd support : parsers and scenarios", "parsers": ["crowdsecurity/auditd-logs"], "path": "collections/crowdsecurity/auditd.yaml", "postoverflows": ["crowdsecurity/auditd-whitelisted-process"], "scenarios": ["crowdsecurity/auditd-postexploit-rm", "crowdsecurity/auditd-postexploit-pkill", "crowdsecurity/auditd-postexploit-exec-from-net", "crowdsecurity/auditd-sus-exec", "crowdsecurity/auditd-base64-exec-behavior", "crowdsecurity/auditd-suid-crash"], "version": "0.6", "versions": {"0.1": {"digest": "784496b8295720e314a9a5da7bbc6645605781a4cb46595ebb4c04b158468768"}, "0.2": {"digest": "b102e29804978190bc98a8c1b9240d3818c8f951d6878038855df2105aacb371"}, "0.3": {"digest": "f2f94b96a57723a8017ef35c1ded8f56458b0c6bd4ace3da3e26e4f88b6fa439"}, "0.4": {"digest": "13671c6d74df80a651e3f8d3e5a637950bfa54c2efcf444692d2d6b0e10d4011"}, "0.5": {"digest": "f0e852bed7179bd9e82595036714e49ec124d199d3dac02b20fe44c9aa1fdc92"}, "0.6": {"digest": "22934d51878ef76b5cece7d8af7788803d9c735f9f4a1926e1beaac56259f5f6"}}}, "crowdsecurity/aws-cis-benchmark": {"content": "parsers:\n  - crowdsecurity/aws-cloudtrail\nscenarios:\n  - crowdsecurity/aws-cis-benchmark-cloudtrail-config-change\n  - crowdsecurity/aws-cis-benchmark-config-config-change\n  - crowdsecurity/aws-cis-benchmark-console-auth-fail\n  - crowdsecurity/aws-cis-benchmark-iam-policy-change\n  - crowdsecurity/aws-cis-benchmark-kms-deletion\n  - crowdsecurity/aws-cis-benchmark-login-no-mfa\n  - crowdsecurity/aws-cis-benchmark-nacl-change\n  - crowdsecurity/aws-cis-benchmark-ngw-change\n  - crowdsecurity/aws-cis-benchmark-root-usage\n  - crowdsecurity/aws-cis-benchmark-route-table-change\n  - crowdsecurity/aws-cis-benchmark-s3-policy-change\n  - crowdsecurity/aws-cis-benchmark-security-group-change\n  - crowdsecurity/aws-cis-benchmark-unauthorized-call\n  - crowdsecurity/aws-cis-benchmark-vpc-change\ndescription: \"AWS CIS Benchmark: cloudtrail parser and alerting scenarios\"\nauthor: crowdsecurity\ntags:\n  - aws\n  - CIS benchmark\n  - compliance\n\n", "description": "AWS CIS Benchmark: cloudtrail parser and alerting scenarios", "parsers": ["crowdsecurity/aws-cloudtrail"], "path": "collections/crowdsecurity/aws-cis-benchmark.yaml", "scenarios": ["crowdsecurity/aws-cis-benchmark-cloudtrail-config-change", "crowdsecurity/aws-cis-benchmark-config-config-change", "crowdsecurity/aws-cis-benchmark-console-auth-fail", "crowdsecurity/aws-cis-benchmark-iam-policy-change", "crowdsecurity/aws-cis-benchmark-kms-deletion", "crowdsecurity/aws-cis-benchmark-login-no-mfa", "crowdsecurity/aws-cis-benchmark-nacl-change", "crowdsecurity/aws-cis-benchmark-ngw-change", "crowdsecurity/aws-cis-benchmark-root-usage", "crowdsecurity/aws-cis-benchmark-route-table-change", "crowdsecurity/aws-cis-benchmark-s3-policy-change", "crowdsecurity/aws-cis-benchmark-security-group-change", "crowdsecurity/aws-cis-benchmark-unauthorized-call", "crowdsecurity/aws-cis-benchmark-vpc-change"], "version": "0.1", "versions": {"0.1": {"digest": "cb39befddc3658a98283e8b506c349b50c61023a09f1c4a939acd0a6f5c697d3"}}}, "crowdsecurity/aws-cloudfront": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/aws-cloudfront\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"AWS CloudFront support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - AWS\n  - CloudFront\n  - crawl\n  - scan\n\n", "description": "AWS CloudFront support : parser and generic http scenarios", "parsers": ["crowdsecurity/aws-cloudfront"], "path": "collections/crowdsecurity/aws-cloudfront.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7c24fc8b7c755194e9dcea51ada580b26c11e114c5c1003825cdcdf3c9619aa2"}}}, "crowdsecurity/aws-console": {"content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/aws-cloudtrail\nscenarios:\n  - crowdsecurity/aws-bf\n  - crowdsecurity/aws-nwo-login\ndescription: \"aws cloudtrail parser and aws console bruteforce\"\nauthor: crowdsecurity\ntags:\n  - aws\n\n", "description": "aws cloudtrail parser and aws console bruteforce", "parsers": ["crowdsecurity/aws-cloudtrail"], "path": "collections/crowdsecurity/aws-console.yaml", "scenarios": ["crowdsecurity/aws-bf", "crowdsecurity/aws-nwo-login"], "version": "0.1", "versions": {"0.1": {"digest": "6016dec00d38c1716ed6c11e6c35981dd99bbde726593da257d9fdd5e7748d84"}}}, "crowdsecurity/aws-postexploit": {"content": "parsers:\n  - crowdsecurity/aws-cloudtrail\nscenarios:\n  - crowdsecurity/aws-cloudtrail-postexploit\ndescription: \"aws cloudtrail parser and aws postexploit scenarios\"\nauthor: crowdsecurity\ntags:\n  - aws\n\n", "description": "aws cloudtrail parser and aws postexploit scenarios", "parsers": ["crowdsecurity/aws-cloudtrail"], "path": "collections/crowdsecurity/aws-postexploit.yaml", "scenarios": ["crowdsecurity/aws-cloudtrail-postexploit"], "version": "0.1", "versions": {"0.1": {"digest": "c69a44ec8b86aa40e38d2817cd4eb2a1a9fb99233b1ac1428580c8cc3889f782"}}}, "crowdsecurity/base-http-scenarios": {"collections": ["crowdsecurity/http-cve"], "content": "parsers:\n  - crowdsecurity/http-logs\nscenarios:\n  - crowdsecurity/http-crawl-non_statics\n  - crowdsecurity/http-probing\n  - crowdsecurity/http-bad-user-agent\n  - crowdsecurity/http-path-traversal-probing\n  - crowdsecurity/http-sensitive-files\n  - crowdsecurity/http-sqli-probing\n  - crowdsecurity/http-xss-probing\n  - crowdsecurity/http-backdoors-attempts\n  - ltsich/http-w00tw00t\n  - crowdsecurity/http-generic-bf\n  - crowdsecurity/http-open-proxy\n  - crowdsecurity/http-admin-interface-probing\n  - crowdsecurity/http-wordpress-scan\n  - crowdsecurity/http-cve-probing\ncollections:\n  - crowdsecurity/http-cve\ncontexts:\n  - crowdsecurity/http_base\ndescription: \"http common : scanners detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - http\n  - crawl\n  - scan\n", "contexts": ["crowdsecurity/http_base"], "description": "http common : scanners detection", "parsers": ["crowdsecurity/http-logs"], "path": "collections/crowdsecurity/base-http-scenarios.yaml", "scenarios": ["crowdsecurity/http-crawl-non_statics", "crowdsecurity/http-probing", "crowdsecurity/http-bad-user-agent", "crowdsecurity/http-path-traversal-probing", "crowdsecurity/http-sensitive-files", "crowdsecurity/http-sqli-probing", "crowdsecurity/http-xss-probing", "crowdsecurity/http-backdoors-attempts", "ltsich/http-w00tw00t", "crowdsecurity/http-generic-bf", "crowdsecurity/http-open-proxy", "crowdsecurity/http-admin-interface-probing", "crowdsecurity/http-wordpress-scan", "crowdsecurity/http-cve-probing"], "version": "1.0", "versions": {"0.1": {"digest": "7ee043a9d2e063cad751e6ce5d048f02518a76d39ec81aebed3bae736b0ced9e"}, "0.2": {"digest": "affdb706e66ffd924086b24e94734589672fb531f80fe366ab06a8c3228962e2"}, "0.3": {"digest": "543df5abb020afb51f3ab9d83cdc031e95572983e72f32a59b9f6f75cac990c3"}, "0.4": {"digest": "15018789eeb01f907fad18a16a1bfd3dc4be972455b22b86c73fd95ef334a072"}, "0.5": {"digest": "98c63493ca04367acd2d889d54141f9bcf22573301b161d6d268ca053159e94e"}, "0.6": {"digest": "2d70781df8c630d36e5f4800bde77dd7e130481e9c658aa0b3aae7ae95e15271"}, "0.7": {"digest": "539db14da32a19da683fcfd9c0c92263be5b463e037a3ce35851039c8b512f08"}, "0.8": {"digest": "dd439becb69e8457354287d0d978476e15e256bc9c4c7143fa4b9981770bf311"}, "0.9": {"digest": "a8b3855c42316452d5133deb76e2fc6acafa7a1dd02c6ae59fab5369595a2911"}, "1.0": {"digest": "b0c860f48e5d24ba5e278523e5b1652ae370228eaadcc809db1f5b3463c8ce46"}}}, "crowdsecurity/caddy": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/caddy-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"caddy support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - caddy\n  - crawl\n  - scan\n", "description": "caddy support : parser and generic http scenarios", "parsers": ["crowdsecurity/caddy-logs"], "path": "collections/crowdsecurity/caddy.yaml", "version": "0.1", "versions": {"0.1": {"digest": "3501cb76beba2ec7f0ed44cf10e249e4db279903813e8b659c1d731c3a66ab2f"}}}, "crowdsecurity/cpanel": {"content": "parsers:\n  - crowdsecurity/cpanel-logs\n  - crowdsecurity/configserver-lfd-logs\nscenarios:\n  - crowdsecurity/cpanel-bf\n  - crowdsecurity/cpanel-bf-attempt\n  - crowdsecurity/configserver-lfd-bf\ndescription: \"cpanel support : parser and bruteforce detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - cpanel\n  - bruteforce\n", "description": "cpanel support : parser and bruteforce detection", "parsers": ["crowdsecurity/cpanel-logs", "crowdsecurity/configserver-lfd-logs"], "path": "collections/crowdsecurity/cpanel.yaml", "scenarios": ["crowdsecurity/cpanel-bf", "crowdsecurity/cpanel-bf-attempt", "crowdsecurity/configserver-lfd-bf"], "version": "0.3", "versions": {"0.1": {"digest": "708cb00f74feff6b8bc5109ba0dea0ed646229adbbb2174288ea7bd185b31e53"}, "0.2": {"digest": "f2496391e82604dcba85c91ba79ec8204661aca4fdb38f6c46773f203c99b9fe"}, "0.3": {"digest": "4f16f7015f9fcd4727413b3e742b4582d3c8fd565e1377e6dacdc6ed68e9735c"}}}, "crowdsecurity/discord-crawler-whitelist": {"content": "postoverflows:\n  - crowdsecurity/discord-crawler-whitelist\n  - crowdsecurity/rdns\ndescription: \"Whitelist Discord PTR domains\"\nauthor: crowdsecurity\ntags:\n  - whitelist\n  - bot\n  - crawler\n", "description": "Whitelist Discord PTR domains", "path": "collections/crowdsecurity/discord-crawler-whitelist.yaml", "postoverflows": ["crowdsecurity/discord-crawler-whitelist", "crowdsecurity/rdns"], "version": "0.1", "versions": {"0.1": {"digest": "f8d9ddc77d06de7b5a861a44190bbbb1cd16e71e835c7c85b39d2c03d01c7b33"}}}, "crowdsecurity/dovecot": {"content": "parsers:\n  - crowdsecurity/dovecot-logs\nscenarios:\n  - crowdsecurity/dovecot-spam\ndescription: \"dovecot support : parser and spammer detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - spam\n  - bruteforce\n", "description": "dovecot support : parser and spammer detection", "parsers": ["crowdsecurity/dovecot-logs"], "path": "collections/crowdsecurity/dovecot.yaml", "scenarios": ["crowdsecurity/dovecot-spam"], "version": "0.1", "versions": {"0.1": {"digest": "7990a4b855273b5ceaa379d2979d796e070c96a398caeefbfa1933cc36f690be"}}}, "crowdsecurity/endlessh": {"content": "#the list of parsers it contains\nparsers:\n  - crowdsecurity/endlessh-logs\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - crowdsecurity/endlessh-bf\ndescription: \"endlessh support : logs parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - ssh\n  - endlessh\n  - bruteforce\n", "description": "endlessh support : logs parser and brute-force detection", "parsers": ["crowdsecurity/endlessh-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/endlessh.yaml", "scenarios": ["crowdsecurity/endlessh-bf"], "version": "0.1", "versions": {"0.1": {"digest": "43b070a6e5c49f66dc970d4a8cc8fb37cef90c5da5aa6276c012e343ba06f0e5"}}}, "crowdsecurity/exchange": {"collections": ["crowdsecurity/windows", "crowdsecurity/iis"], "content": "parsers:\n  - crowdsecurity/exchange-smtp-logs\n  - crowdsecurity/exchange-imap-logs\n  - crowdsecurity/exchange-pop-logs\nscenarios:\n  - crowdsecurity/exchange-bf\n  - crowdsecurity/windows-bf\ncollections:\n  - crowdsecurity/windows\n  - crowdsecurity/iis\ndescription: \"Exchange support : Bruteforce detection for OWA,SMTP,IMAP and POP\"\nauthor: crowdsecurity\ntags:\n  - windows\n  - iis\n  - exchange\n  - bruteforce\n\n", "description": "Exchange support : Bruteforce detection for OWA,SMTP,IMAP and POP", "parsers": ["crowdsecurity/exchange-smtp-logs", "crowdsecurity/exchange-imap-logs", "crowdsecurity/exchange-pop-logs"], "path": "collections/crowdsecurity/exchange.yaml", "scenarios": ["crowdsecurity/exchange-bf", "crowdsecurity/windows-bf"], "version": "0.3", "versions": {"0.1": {"digest": "95cf2f72de900427c545793800c465716508b4e2953bdc0024b8d757fbbed8df"}, "0.2": {"digest": "cc3b0e749e8fd9470d6274bc9cace5d7fa1fa2d09eac6c36a4c998600c449dae"}, "0.3": {"digest": "33da539eede53d578b7f415591d69b9ffabdfdf59b33de2a5f9224e5b345785c"}}}, "crowdsecurity/exim": {"content": "parsers:\n  - crowdsecurity/exim-logs\nscenarios:\n  - crowdsecurity/exim-bf\n  - crowdsecurity/exim-spam\ndescription: \"exim support : parser and bruteforce/spam detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - spam\n  - bruteforce\n", "description": "exim support : parser and bruteforce/spam detection", "parsers": ["crowdsecurity/exim-logs"], "path": "collections/crowdsecurity/exim.yaml", "scenarios": ["crowdsecurity/exim-bf", "crowdsecurity/exim-spam"], "version": "0.1", "versions": {"0.1": {"digest": "f4a5ec5e7a5d52b4686e3c58481e098a231adc603e559bb3cb9aab888545eaa4"}}}, "crowdsecurity/fastly": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/fastly-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"fastly support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - fastly\n  - http\n  - crawl\n  - scan", "description": "fastly support : parser and generic http scenarios", "parsers": ["crowdsecurity/fastly-logs"], "path": "collections/crowdsecurity/fastly.yaml", "version": "0.1", "versions": {"0.1": {"digest": "6bac9453d3b274fc310b558fe41672ff09ac910463e3bea982b4f14cb3a7bf61"}}}, "crowdsecurity/fortinet": {"content": "parsers:\n  - crowdsecurity/fortinet-logs\nscenarios:\n  - crowdsecurity/fortinet-vpn-bruteforce\ncontexts:\n  - crowdsecurity/fortinet\ndescription: \"Fortinet support : Parser and scenarios for Fortinet Log\"\nauthor: crowdsecurity\ntags:\n  - fortinet\n", "contexts": ["crowdsecurity/fortinet"], "description": "Fortinet support : Parser and scenarios for Fortinet Log", "parsers": ["crowdsecurity/fortinet-logs"], "path": "collections/crowdsecurity/fortinet.yaml", "scenarios": ["crowdsecurity/fortinet-vpn-bruteforce"], "version": "0.1", "versions": {"0.1": {"digest": "190ec6987667d8812a9c78f48b6347da23211e5aafde2821dca42b798dcdd174"}}}, "crowdsecurity/freebsd": {"collections": ["crowdsecurity/sshd"], "content": "parsers:\n  - crowdsecurity/syslog-logs\n  - crowdsecurity/geoip-enrich\n  - crowdsecurity/dateparse-enrich\ncollections:\n  - crowdsecurity/sshd\ndescription: \"core freebsd support : syslog+geoip+ssh\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n\n", "description": "core freebsd support : syslog+geoip+ssh", "parsers": ["crowdsecurity/syslog-logs", "crowdsecurity/geoip-enrich", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/freebsd.yaml", "version": "0.3", "versions": {"0.1": {"digest": "f2969de2e7c76a12e9c9f6a7797a62f184df6a2c188db2ac6b1e0914e342b59f"}, "0.2": {"digest": "306667f291b1cb3b9fc27122c82cea3e59cb6e2f9597a1eee995b6f010fac7a1"}, "0.3": {"digest": "985e9853fb5799730272b51c4495648e0fa6a1d8566a2e517aa1166d06a02e29"}}}, "crowdsecurity/freeswitch": {"content": "parsers:\n  - crowdsecurity/freeswitch\nscenarios:\n  - crowdsecurity/freeswitch-user-enumeration\n  - crowdsecurity/freeswitch-bf\n  - crowdsecurity/freeswitch-acl-reject\ndescription: \"freeswitch collection\"\nauthor: crowdsecurity\ntags:\n  - voip", "description": "freeswitch collection", "parsers": ["crowdsecurity/freeswitch"], "path": "collections/crowdsecurity/freeswitch.yaml", "scenarios": ["crowdsecurity/freeswitch-user-enumeration", "crowdsecurity/freeswitch-bf", "crowdsecurity/freeswitch-acl-reject"], "version": "0.1", "versions": {"0.1": {"digest": "3a7747ed253a57ef3f985cf18d1649fdea195db3608c6a162ccba43c3066b63a"}}}, "crowdsecurity/haproxy": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/haproxy-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"haproxy support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - haproxy\n  - crawl\n  - scan\n\n", "description": "haproxy support : parser and generic http scenarios", "parsers": ["crowdsecurity/haproxy-logs"], "path": "collections/crowdsecurity/haproxy.yaml", "version": "0.1", "versions": {"0.1": {"digest": "41d5394188f55956e017cb3f851e93411dbf078b0176a0968dd7760b1ad5b2e5"}}}, "crowdsecurity/home-assistant": {"content": "parsers:\n  - crowdsecurity/home-assistant-logs\nscenarios:\n  - crowdsecurity/home-assistant-bf\ndescription: \"Home assistant support : logs and brute-force scenario\"\nauthor: crowdsecurity\ntags:\n  - home-assistant\n  - bruteforce\n", "description": "Home assistant support : logs and brute-force scenario", "parsers": ["crowdsecurity/home-assistant-logs"], "path": "collections/crowdsecurity/home-assistant.yaml", "scenarios": ["crowdsecurity/home-assistant-bf"], "version": "0.1", "versions": {"0.1": {"digest": "4af5665511aa35371d1abf2007505863c4e166a1637a51a47c5f7db49f2bdf76"}}}, "crowdsecurity/http-cve": {"content": "scenarios:\n  - crowdsecurity/http-cve-2021-41773\n  - crowdsecurity/http-cve-2021-42013\n  - crowdsecurity/grafana-cve-2021-43798\n  - crowdsecurity/vmware-vcenter-vmsa-2021-0027\n  - crowdsecurity/fortinet-cve-2018-13379\n  - crowdsecurity/pulse-secure-sslvpn-cve-2019-11510\n  - crowdsecurity/f5-big-ip-cve-2020-5902\n  - crowdsecurity/thinkphp-cve-2018-20062\n  - crowdsecurity/apache_log4j2_cve-2021-44228\n  - crowdsecurity/jira_cve-2021-26086\n  - crowdsecurity/spring4shell_cve-2022-22965\n  - crowdsecurity/vmware-cve-2022-22954\n  - crowdsecurity/CVE-2022-37042\n  - crowdsecurity/CVE-2022-41082\n  - crowdsecurity/CVE-2022-35914\n  - crowdsecurity/CVE-2022-40684\n  - crowdsecurity/CVE-2022-26134\n  - crowdsecurity/CVE-2022-42889\n  - crowdsecurity/CVE-2022-41697\n  - crowdsecurity/CVE-2022-46169\n  - crowdsecurity/CVE-2022-44877\n  - crowdsecurity/CVE-2019-18935\n  - crowdsecurity/netgear_rce\n  - crowdsecurity/CVE-2023-22515\n  - crowdsecurity/CVE-2023-22518\n  - crowdsecurity/CVE-2023-49103\n  - crowdsecurity/CVE-2017-9841\n  - crowdsecurity/CVE-2024-38475\n  - crowdsecurity/CVE-2024-0012\n  - crowdsecurity/CVE-2024-9474\nauthor: crowdsecurity\ndescription: \"Detect CVE exploitation in http logs\"\ntags:\n  - web\n  - exploit\n  - cve\n  - http\n", "description": "Detect CVE exploitation in http logs", "path": "collections/crowdsecurity/http-cve.yaml", "scenarios": ["crowdsecurity/http-cve-2021-41773", "crowdsecurity/http-cve-2021-42013", "crowdsecurity/grafana-cve-2021-43798", "crowdsecurity/vmware-vcenter-vmsa-2021-0027", "crowdsecurity/fortinet-cve-2018-13379", "crowdsecurity/pulse-secure-sslvpn-cve-2019-11510", "crowdsecurity/f5-big-ip-cve-2020-5902", "crowdsecurity/thinkphp-cve-2018-20062", "crowdsecurity/apache_log4j2_cve-2021-44228", "crowdsecurity/jira_cve-2021-26086", "crowdsecurity/spring4shell_cve-2022-22965", "crowdsecurity/vmware-cve-2022-22954", "crowdsecurity/CVE-2022-37042", "crowdsecurity/CVE-2022-41082", "crowdsecurity/CVE-2022-35914", "crowdsecurity/CVE-2022-40684", "crowdsecurity/CVE-2022-26134", "crowdsecurity/CVE-2022-42889", "crowdsecurity/CVE-2022-41697", "crowdsecurity/CVE-2022-46169", "crowdsecurity/CVE-2022-44877", "crowdsecurity/CVE-2019-18935", "crowdsecurity/netgear_rce", "crowdsecurity/CVE-2023-22515", "crowdsecurity/CVE-2023-22518", "crowdsecurity/CVE-2023-49103", "crowdsecurity/CVE-2017-9841", "crowdsecurity/CVE-2024-38475", "crowdsecurity/CVE-2024-0012", "crowdsecurity/CVE-2024-9474"], "version": "2.9", "versions": {"0.1": {"digest": "30748e051a470c1bc91506ae63e8784cd054564f90ccc23eb655823fc30e3019"}, "0.2": {"digest": "bc244c864674e59cd36ec4781bb85b5f94f77562a28a65e6bb64da789cf97379"}, "0.3": {"digest": "8a33f5787f19100add139f53ae98978a2c265badaf99b09365a47d686baeb5b2"}, "0.4": {"digest": "f5a38fc37ff6a5aa80a1411fe75ba27d9691ebf3da96b6d169d2fecc052fb528"}, "0.5": {"digest": "f9be2b19b2c12d4b0d4fc10de95b3138c4ae19ccaa04975d1e6a242e1fc2abf4"}, "0.6": {"digest": "d385131b7c0763a6fe71d6544599e69d79e6ff97c92b2b253470b9b1632bb71a"}, "0.7": {"digest": "33d997a205be7dad55f5fadb1b56da3cd7a22b6333037af83132a948a6cc063f"}, "0.8": {"digest": "9a6f6b6afb19f4ecafa4cb195d96c3380d9f2b5621424a1ee296ae34dc29f814"}, "0.9": {"digest": "ff8e1e8b942d229cbe6de261b864fef4052b3c83018fe389b5441bd62c824d38"}, "1.0": {"digest": "c10453ceeb22dcdf11fa386fe072c9aa6ede4a76e7cc9940caa429d8ec8814d5"}, "1.1": {"digest": "d211c127d1295986dd11c1502295e538943baafcb04bab094b792f85531376f9"}, "1.2": {"digest": "e1a9c0a6a058d043717ce66c649f632161d9ea788a77c9ce92ad50ab231c920c"}, "1.3": {"digest": "537a00505f86acb335d66130e9e3d1cc867d99a26fe7d3a66904eb3ec57c3f43"}, "1.4": {"digest": "e07c151e8686c9cf5ba5f5cb1513c8edeb1e4d6ee6a3672a835a0441c3cfcff7"}, "1.5": {"digest": "97e3a10706edfa4ccb637673705d133e24ec8601f7199c7fd5884bd673778506"}, "1.6": {"digest": "f38f6f62c92971e1537992406128a5438962f8bea6b9fdd9d8eacd5fd5cb6485"}, "1.7": {"digest": "f7d7eb0b2c5257e689397ff696e85a56640f0819ef4695c47119927aefbf8c79"}, "1.8": {"digest": "a00340eb67ac16be546794135dd64ee2ae1709989d1d31ae7633de771bcec529"}, "1.9": {"digest": "74c4696ca67d82e18dd6188f8934699f0c3b10e8ccde318d9de2a6ca9c40f31c"}, "2.0": {"digest": "282fb0e5941d39b850f3199498fe282c69293c7f29892c80e16d28e4c452608d"}, "2.1": {"digest": "bf083cddb42468da403bdcba02efc6e287ef640512a0442f7b180dc091e1fb44"}, "2.2": {"digest": "a80217f6b47bfb101bad21a25666123b1f940d1dcd31e1e1e320b6213fa9f4b0"}, "2.3": {"digest": "00e148cb998efbf5668391f2971ec39ee3c2bcc8e0e6c952fe436709678abf72"}, "2.4": {"digest": "9a1288c042d53f81c16653efae7084bbb83e56cec8a6eade98c702e2febb8d4e"}, "2.5": {"digest": "c6c395c6d6d694ecfb8957e93bd8895a8c341511d070486cbd768056a323994d"}, "2.6": {"digest": "dd2e8debbba19d19646b9a8010baf9bd901a4eec84a53a0cb62294b8da3e91ef"}, "2.7": {"digest": "b974f20dc2cf23c292eede422c1c6e0008297f8b3397e3851bb6a988866f3e34"}, "2.8": {"digest": "7c6a2ecd3b3d28164eb0212ea49e5ce23f35814ef0f6d8be5d8dab058b514083"}, "2.9": {"digest": "4bd84ba53d1668df2bc2933f38f7d07322b6a68ea60907860a9b81bc1a497407"}}}, "crowdsecurity/http-dos": {"content": "scenarios:\n  - crowdsecurity/http-dos-bypass-cache\n  - crowdsecurity/http-dos-random-uri\n  - crowdsecurity/http-dos-switching-ua\n  - crowdsecurity/http-dos-invalid-http-versions\nauthor: crowdsecurity\ntags:\n  - web\n  - dos\n  - http\n", "path": "collections/crowdsecurity/http-dos.yaml", "scenarios": ["crowdsecurity/http-dos-bypass-cache", "crowdsecurity/http-dos-random-uri", "crowdsecurity/http-dos-switching-ua", "crowdsecurity/http-dos-invalid-http-versions"], "version": "0.2", "versions": {"0.1": {"digest": "9b9657dd6f304e3660f4dd8e9e289ef3d7302cdad759c5efc72333c1e3e96020"}, "0.2": {"digest": "3ffa21f9474ea37d7c7d70156d05d557c16a62b8ae08dce202ce5d288609fef7"}}}, "crowdsecurity/iis": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/iis-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"IIS support : parser and generic http scenarios \"\nauthor: crowdsecurity\ntags:\n  - windows\n  - iis\n  - crawl\n  - scan\n\n", "description": "IIS support : parser and generic http scenarios ", "parsers": ["crowdsecurity/iis-logs"], "path": "collections/crowdsecurity/iis.yaml", "version": "0.1", "versions": {"0.1": {"digest": "045c579c8cbb0e1e15f76c22b6465d6113df4117e48ae018043c2c1c01cd4b42"}}}, "crowdsecurity/iptables": {"content": "parsers:\n  - crowdsecurity/iptables-logs\nscenarios:\n  - crowdsecurity/iptables-scan-multi_ports\ncontexts:\n  - crowdsecurity/firewall_base\ndescription: \"iptables support : logs and port-scans detection scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - portscan\n  - iptables\n\n", "contexts": ["crowdsecurity/firewall_base"], "description": "iptables support : logs and port-scans detection scenarios", "parsers": ["crowdsecurity/iptables-logs"], "path": "collections/crowdsecurity/iptables.yaml", "scenarios": ["crowdsecurity/iptables-scan-multi_ports"], "version": "0.2", "versions": {"0.1": {"digest": "ba5c8e97c06b19e4c075e0285e6b60c1da3b86381c88c4bfea4b374378ced10a"}, "0.2": {"digest": "d59e4198c2b88cccb6f9da9f9375348a1835d7f5a933d7452693ad0321ef1282"}}}, "crowdsecurity/k8s-audit": {"content": "parsers:\n  - crowdsecurity/k8s-audit\nscenarios:\n  - crowdsecurity/k8s-audit-anonymous-access\n  - crowdsecurity/k8s-audit-api-server-bruteforce\n  - crowdsecurity/k8s-audit-pod-host-network\n  - crowdsecurity/k8s-audit-pod-exec\n  - crowdsecurity/k8s-audit-pod-host-path-volume\n  - crowdsecurity/k8s-audit-privileged-pod-creation\n  - crowdsecurity/k8s-audit-service-account-access-denied\ndescription: \"Kubernetes audit log support: detect security sensitive events in a cluster\"\nauthor: crowdsecurity\ntags:\n  - kubernetes\n  - notification\n  - audit\n\n", "description": "Kubernetes audit log support: detect security sensitive events in a cluster", "parsers": ["crowdsecurity/k8s-audit"], "path": "collections/crowdsecurity/k8s-audit.yaml", "scenarios": ["crowdsecurity/k8s-audit-anonymous-access", "crowdsecurity/k8s-audit-api-server-bruteforce", "crowdsecurity/k8s-audit-pod-host-network", "crowdsecurity/k8s-audit-pod-exec", "crowdsecurity/k8s-audit-pod-host-path-volume", "crowdsecurity/k8s-audit-privileged-pod-creation", "crowdsecurity/k8s-audit-service-account-access-denied"], "version": "0.1", "versions": {"0.1": {"digest": "b1f61b14b0f5411d78d1737375a01790e6c3b45feec2fbcb35595a39f17ecadd"}}}, "crowdsecurity/kasm": {"content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/kasm-logs\nscenarios:\n  - crowdsecurity/kasm-bruteforce\ndescription: \"kasm workspaces support : parser and bruteforce scenario\"\nauthor: crowdsecurity\ntags:\n  - kasm\n  - bruteforce\n", "description": "kasm workspaces support : parser and bruteforce scenario", "parsers": ["crowdsecurity/kasm-logs"], "path": "collections/crowdsecurity/kasm.yaml", "scenarios": ["crowdsecurity/kasm-bruteforce"], "version": "0.1", "versions": {"0.1": {"digest": "4e228f3fca8480631574e00b5821384f846d1d9e636b6fa4461525a914ed790b"}}}, "crowdsecurity/linux": {"collections": ["crowdsecurity/sshd"], "content": "parsers:\n  - crowdsecurity/syslog-logs\n  - crowdsecurity/geoip-enrich\n  - crowdsecurity/dateparse-enrich\ncollections:\n  - crowdsecurity/sshd\ndescription: \"core linux support : syslog+geoip+ssh\"\nauthor: crowdsecurity\ntags:\n  - linux\n\n", "description": "core linux support : syslog+geoip+ssh", "parsers": ["crowdsecurity/syslog-logs", "crowdsecurity/geoip-enrich", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/linux.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8d16483218a979b84549fb020b0342feea3d1f4951294b6994d33a9b7214842f"}, "0.2": {"digest": "baaa37b12b4d734fab81ae01ff81c58ceb7a99304f21e6bb6ff86b871ed6d5eb"}}}, "crowdsecurity/linux-lpe": {"collections": ["crowdsecurity/linux"], "content": "parsers:\n  - crowdsecurity/pkexec-logs\n  - crowdsecurity/segfault-logs\nscenarios:\n  - crowdsecurity/CVE-2021-4034\n  - crowdsecurity/CVE-2023-4911\ncollections:\n  - crowdsecurity/linux\ndescription: \"Linux Local Privilege Escalation collection : detect trivial LPEs\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - privsec\n  - lpe\n\n\n", "description": "Linux Local Privilege Escalation collection : detect trivial LPEs", "parsers": ["crowdsecurity/pkexec-logs", "crowdsecurity/segfault-logs"], "path": "collections/crowdsecurity/linux-lpe.yaml", "scenarios": ["crowdsecurity/CVE-2021-4034", "crowdsecurity/CVE-2023-4911"], "version": "0.2", "versions": {"0.1": {"digest": "a68ef0b517c988b50b3cdc0d84702b2f70e621d29378b9782b2e037bf6663458"}, "0.2": {"digest": "fd4a1d641522646b438dcf6572eddee3196c21bbc4dc75907515fd25e4f27578"}}}, "crowdsecurity/litespeed": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/litespeed-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\nscenarios:\n  - crowdsecurity/litespeed-admin-bf\ndescription: \"litespeed support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - litespeed\n  - crawl\n  - scan\n\n", "description": "litespeed support : parser and generic http scenarios", "parsers": ["crowdsecurity/litespeed-logs"], "path": "collections/crowdsecurity/litespeed.yaml", "scenarios": ["crowdsecurity/litespeed-admin-bf"], "version": "0.1", "versions": {"0.1": {"digest": "c3bfb3dea73e8880ca0598b4ede129f0468361cadabd7ce214f92598348da97e"}}}, "crowdsecurity/magento": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - crowdsecurity/magento-extension-logs\n  - crowdsecurity/dateparse-enrich\n  - crowdsecurity/geoip-enrich\nscenarios:\n  - crowdsecurity/http-magento-bf\n  - crowdsecurity/http-magento-ccs-by-country\n  - crowdsecurity/http-magento-ccs-by-as\n  - crowdsecurity/http-magento-ccs\ndescription: \"Magento collection\"\nauthor: crowdsecurity\ntags:\n  - magento\n  - http\n\n", "description": "Magento collection", "parsers": ["crowdsecurity/syslog-logs", "crowdsecurity/magento-extension-logs", "crowdsecurity/dateparse-enrich", "crowdsecurity/geoip-enrich"], "path": "collections/crowdsecurity/magento.yaml", "scenarios": ["crowdsecurity/http-magento-bf", "crowdsecurity/http-magento-ccs-by-country", "crowdsecurity/http-magento-ccs-by-as", "crowdsecurity/http-magento-ccs"], "version": "0.1", "versions": {"0.1": {"digest": "9ed2119aafbc789322dcde0e88a1df2912764b98c5e978edb001b67e610f31ad"}}}, "crowdsecurity/mariadb": {"content": "parsers:\n  - crowdsecurity/mariadb-logs\nscenarios:\n  - crowdsecurity/mariadb-bf\ndescription: \"mariadb support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - mariadb\n  - bruteforce\n", "description": "mariadb support : logs and brute-force scenarios", "parsers": ["crowdsecurity/mariadb-logs"], "path": "collections/crowdsecurity/mariadb.yaml", "scenarios": ["crowdsecurity/mariadb-bf"], "version": "0.1", "versions": {"0.1": {"digest": "88ec0daef18bbbce68c6ae2c0593cf152973221efb630a745f7cbb34feb80ff8"}}}, "crowdsecurity/modsecurity": {"content": "parsers:\n  - crowdsecurity/modsecurity\nscenarios:\n  - crowdsecurity/modsecurity\ndescription: \"modsecurity support : modsecurity parser and scenario\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - web\n  - waf", "description": "modsecurity support : modsecurity parser and scenario", "parsers": ["crowdsecurity/modsecurity"], "path": "collections/crowdsecurity/modsecurity.yaml", "scenarios": ["crowdsecurity/modsecurity"], "version": "0.1", "versions": {"0.1": {"digest": "530454a9dbdb3800f62de4b8ba7d6ed2160b4e533d577c52393f5f286df2b615"}}}, "crowdsecurity/mssql": {"content": "parsers:\n  - crowdsecurity/mssql-logs\nscenarios:\n  - crowdsecurity/mssql-bf\ndescription: \"mssql support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - windows\n  - mssql\n  - bruteforce\n", "description": "mssql support : logs and brute-force scenarios", "parsers": ["crowdsecurity/mssql-logs"], "path": "collections/crowdsecurity/mssql.yaml", "scenarios": ["crowdsecurity/mssql-bf"], "version": "0.1", "versions": {"0.1": {"digest": "109bf56d5781fca733b958588338370d2196a2c3e490eccb94c56df6341a3ba8"}}}, "crowdsecurity/mysql": {"content": "parsers:\n  - crowdsecurity/mysql-logs\nscenarios:\n  - crowdsecurity/mysql-bf\ndescription: \"mysql support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - mysql\n  - bruteforce\n", "description": "mysql support : logs and brute-force scenarios", "parsers": ["crowdsecurity/mysql-logs"], "path": "collections/crowdsecurity/mysql.yaml", "scenarios": ["crowdsecurity/mysql-bf"], "version": "0.1", "versions": {"0.1": {"digest": "77e63a6deedaedc15457691e8631633c15663e796f9e896331d64aa3614fdafc"}}}, "crowdsecurity/naxsi": {"content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/nginx-logs\n  - crowdsecurity/naxsi-logs\nscenarios:\n  - crowdsecurity/naxsi-exploit-vpatch\ndescription: \"naxsi support : parser and vpatch scenario\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - nginx\n  - naxsi\n  - exploit\n\n", "description": "naxsi support : parser and vpatch scenario", "parsers": ["crowdsecurity/nginx-logs", "crowdsecurity/naxsi-logs"], "path": "collections/crowdsecurity/naxsi.yaml", "scenarios": ["crowdsecurity/naxsi-exploit-vpatch"], "version": "0.1", "versions": {"0.1": {"digest": "cd093e3b26795e8ae86898a585ef77509dc988c4841ea49ba61795a7c849b06e"}}}, "crowdsecurity/nextcloud": {"content": "---\nparsers:\n  - crowdsecurity/nextcloud-logs\n  - crowdsecurity/nextcloud-whitelist\nscenarios:\n  - crowdsecurity/nextcloud-bf\ndescription: \"Nextcloud support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - bruteforce\n  - nextcloud\n", "description": "Nextcloud support : parser and brute-force detection", "parsers": ["crowdsecurity/nextcloud-logs", "crowdsecurity/nextcloud-whitelist"], "path": "collections/crowdsecurity/nextcloud.yaml", "scenarios": ["crowdsecurity/nextcloud-bf"], "version": "0.3", "versions": {"0.1": {"digest": "970735016eb78b0d0c722d7ed426b0edc1efd603547bf8cd5d68c57484e7a855"}, "0.2": {"digest": "a60b9e37b9f440f290632cdc20832b5a53ce9b59b3ce1d926b4ef40b49776c34"}, "0.3": {"digest": "d2da4c1ec583f676030446419b7cc2e1b02935965c1ba7f10ffe8fce0e1f4182"}}}, "crowdsecurity/nginx": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/nginx-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\nscenarios:\n  - crowdsecurity/nginx-req-limit-exceeded\ndescription: \"nginx support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - nginx\n  - crawl\n  - scan\n\n", "description": "nginx support : parser and generic http scenarios", "parsers": ["crowdsecurity/nginx-logs"], "path": "collections/crowdsecurity/nginx.yaml", "scenarios": ["crowdsecurity/nginx-req-limit-exceeded"], "version": "0.2", "versions": {"0.1": {"digest": "5ef06c9a84fbea5b01d901a6a23d5de8de811da5036e5ec4f6a8d00fb096805b"}, "0.2": {"digest": "334f7e5626a83c576af2dec1360b760991d09b6f418590a174748a4ca00bd1e4"}}}, "crowdsecurity/nginx-proxy-manager": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/nginx-proxy-manager-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"Nginx Proxy Manager support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - nginx\n  - nginx-proxy\n  - crawl\n  - scan", "description": "Nginx Proxy Manager support : parser and generic http scenarios", "parsers": ["crowdsecurity/nginx-proxy-manager-logs"], "path": "collections/crowdsecurity/nginx-proxy-manager.yaml", "version": "0.1", "versions": {"0.1": {"digest": "fcde72227c4fc913f5472fff55e041aef913a0a4a0143f0ad8ef29bdc2e4e7f9"}}}, "crowdsecurity/odoo": {"content": "parsers:\n  - crowdsecurity/odoo-logs\nscenarios:\n  - crowdsecurity/odoo-bf_user-enum\ndescription: \"Odoo support : parser and brute-force/user enumeration detection\"\nauthor: crowdsecurity\ntags:\n  - erp\n  - odoo\n  - bruteforce\n", "description": "Odoo support : parser and brute-force/user enumeration detection", "parsers": ["crowdsecurity/odoo-logs"], "path": "collections/crowdsecurity/odoo.yaml", "scenarios": ["crowdsecurity/odoo-bf_user-enum"], "version": "0.1", "versions": {"0.1": {"digest": "7b9b2323ffda7ffd8a48aea52b8424bc12a58d0047bb9bebb2cf030c5fa088c9"}}}, "crowdsecurity/opnsense": {"collections": ["crowdsecurity/freebsd", "crowdsecurity/opnsense-gui", "firewallservices/pf"], "content": "collections:\n  - crowdsecurity/freebsd\n  - crowdsecurity/opnsense-gui\n  - firewallservices/pf\ndescription: \"core opnsense support\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n", "description": "core opnsense support", "path": "collections/crowdsecurity/opnsense.yaml", "version": "0.4", "versions": {"0.1": {"digest": "2e389ca4cda774d45d19657579cee7bd735b62147875f333b8cd072ed4b91a04"}, "0.2": {"digest": "bfac0c94acc89565c80ed1be59b655d8ba718b0b0097bf9da378ee4f24a4d02d"}, "0.3": {"digest": "754157043e75342b8d6f4e0ae195657027473055072f7d22720d557a2f2e1c0d"}, "0.4": {"digest": "6cef916d409c4c75d69b22b5c65d2dc9ff83246cdb03e0650895ae7f213c04ab"}}}, "crowdsecurity/opnsense-gui": {"content": "parsers:\n  - crowdsecurity/opnsense-gui-logs\nscenarios:\n  - crowdsecurity/opnsense-gui-bf\ndescription: \"OPNSense web authentication support\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n  - opnsense\n  - bruteforce\n  - scan\n\n\n", "description": "OPNSense web authentication support", "parsers": ["crowdsecurity/opnsense-gui-logs"], "path": "collections/crowdsecurity/opnsense-gui.yaml", "scenarios": ["crowdsecurity/opnsense-gui-bf"], "version": "0.1", "versions": {"0.1": {"digest": "91be3b0655e3de8a1c82787dadf1521c1ad1489e5798b5b9e2cdf3df0fc7cd1d"}}}, "crowdsecurity/palo-alto": {"content": "parsers:\n  - crowdsecurity/palo-alto-threat-log\nscenarios:\n  - crowdsecurity/palo-alto-threat\ncontexts:\n  - crowdsecurity/palo_alto\ndescription: \"Palo Alto support : Parser and scenarios for Palo Alto Threat Log\"\nauthor: crowdsecurity\ntags:\n  - palo-alto\n", "contexts": ["crowdsecurity/palo_alto"], "description": "Palo Alto support : Parser and scenarios for Palo Alto Threat Log", "parsers": ["crowdsecurity/palo-alto-threat-log"], "path": "collections/crowdsecurity/palo-alto.yaml", "scenarios": ["crowdsecurity/palo-alto-threat"], "version": "0.2", "versions": {"0.1": {"digest": "2976ac04400d43a55cbe7a7e6c62ba784c5e7b55bcf14c566d25e7218a87f526"}, "0.2": {"digest": "7509ca9a7de912219978f71f7ae5d2018adfde1dd000182ddd4942a9c09eaf8a"}}}, "crowdsecurity/pfsense": {"collections": ["crowdsecurity/freebsd", "crowdsecurity/pfsense-gui", "crowdsecurity/nginx", "firewallservices/pf"], "content": "collections:\n  - crowdsecurity/freebsd\n  - crowdsecurity/pfsense-gui\n  - crowdsecurity/nginx\n  - firewallservices/pf\ndescription: \"core pfsense support\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n", "description": "core pfsense support", "path": "collections/crowdsecurity/pfsense.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b0e0d8b751b34cc9d63268169a51849182039aa17ea78093a80da9d302756b97"}, "0.2": {"digest": "cc77813340e5e49379dcae520d2da5b2d5b9451eca6cbe7f5a68b6f9ad302d75"}}}, "crowdsecurity/pfsense-gui": {"content": "parsers:\n  - crowdsecurity/pfsense-gui-logs\nscenarios:\n  - crowdsecurity/pfsense-gui-bf\ndescription: \"pfSense web authentication support\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n  - pfsense\n  - bruteforce\n  - scan\n", "description": "pfSense web authentication support", "parsers": ["crowdsecurity/pfsense-gui-logs"], "path": "collections/crowdsecurity/pfsense-gui.yaml", "scenarios": ["crowdsecurity/pfsense-gui-bf"], "version": "0.1", "versions": {"0.1": {"digest": "5e3c9d329eb515265634bcb8684180c2df2d01431273b6d1a9123e972109f408"}}}, "crowdsecurity/pgsql": {"content": "parsers:\n  - crowdsecurity/pgsql-logs\nscenarios:\n  - crowdsecurity/pgsql-bf\ndescription: \"postgres support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - pgsql\n  - postgres\n  - bruteforce\n", "description": "postgres support : logs and brute-force scenarios", "parsers": ["crowdsecurity/pgsql-logs"], "path": "collections/crowdsecurity/pgsql.yaml", "scenarios": ["crowdsecurity/pgsql-bf"], "version": "0.1", "versions": {"0.1": {"digest": "78408615dfdfa97075b37dc7533b3d682b57293053aae5522ee3cd7b5825be02"}}}, "crowdsecurity/plex": {"content": "parsers:\n  - crowdsecurity/plex-allowlist\ndescription: \"plex support: allowlist\"\nauthor: crowdsecurity\ntags:\n  - plex\n  - allowlist\n", "description": "plex support: allowlist", "parsers": ["crowdsecurity/plex-allowlist"], "path": "collections/crowdsecurity/plex.yaml", "version": "0.1", "versions": {"0.1": {"digest": "2361b10d19f3f5c4d84ca2c8a9fbbfc8522e1f28047b2e2b87bdfbab6d119de3"}}}, "crowdsecurity/postfix": {"content": "parsers:\n  - crowdsecurity/postfix-logs\n  - crowdsecurity/postscreen-logs\nscenarios:\n  - crowdsecurity/postfix-spam\n  - crowdsecurity/postfix-relay-denied\n  - crowdsecurity/postfix-helo-rejected\n  - crowdsecurity/postfix-non-smtp-command\ndescription: \"postfix support : parser and spammer detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - spam\n  - bruteforce\n", "description": "postfix support : parser and spammer detection", "parsers": ["crowdsecurity/postfix-logs", "crowdsecurity/postscreen-logs"], "path": "collections/crowdsecurity/postfix.yaml", "scenarios": ["crowdsecurity/postfix-spam", "crowdsecurity/postfix-relay-denied", "crowdsecurity/postfix-helo-rejected", "crowdsecurity/postfix-non-smtp-command"], "version": "0.4", "versions": {"0.1": {"digest": "81767bab91a7a071d8d32f3227f2391744eef5ba6a4cf916a96ec8183d050ae0"}, "0.2": {"digest": "b4cceea527807a9fe70f673ef34e0d7d4372267d665fbbe164f0d6a1a3531a2e"}, "0.3": {"digest": "850515aa2593b279ddf33b2018b1c437f2481f961df8cb06e1f18ac53d14e110"}, "0.4": {"digest": "b04afb125fe152bff5a1f4043a5e46d4cbdb1780493a097836555659d23b154a"}}}, "crowdsecurity/proftpd": {"content": "parsers:\n  - crowdsecurity/proftpd-logs\nscenarios:\n  - crowdsecurity/proftpd-bf\n  - crowdsecurity/proftpd-bf_user-enum\ndescription: \"proftpd support : parser and brute-force/user enumeration detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - proftpd\n  - bruteforce\n\n", "description": "proftpd support : parser and brute-force/user enumeration detection", "parsers": ["crowdsecurity/proftpd-logs"], "path": "collections/crowdsecurity/proftpd.yaml", "scenarios": ["crowdsecurity/proftpd-bf", "crowdsecurity/proftpd-bf_user-enum"], "version": "0.1", "versions": {"0.1": {"digest": "6f98f64784109c356578bf50c7b296c5936bddfd5a206f25d39f92f504ea04ad"}}}, "crowdsecurity/sabnzbd": {"content": "parsers:\n  - crowdsecurity/sabnzbd-logs\nscenarios:\n  - crowdsecurity/sabnzbd-bf\ndescription: \"sabnzbd support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - sabnzbd\n  - bruteforce\n\n", "description": "sabnzbd support : parser and brute-force detection", "parsers": ["crowdsecurity/sabnzbd-logs"], "path": "collections/crowdsecurity/sabnzbd.yaml", "scenarios": ["crowdsecurity/sabnzbd-bf"], "version": "0.1", "versions": {"0.1": {"digest": "d41742ac520e96f3739afa9f7a4d71e0cb9fa2e30994abd5bfffe9213216dea4"}}}, "crowdsecurity/smb": {"content": "parsers:\n  - crowdsecurity/smb-logs\nscenarios:\n  - crowdsecurity/smb-bf\ndescription: \"smb support : parser and brute-force scenario\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - smb\n  - bruteforce\n\n", "description": "smb support : parser and brute-force scenario", "parsers": ["crowdsecurity/smb-logs"], "path": "collections/crowdsecurity/smb.yaml", "scenarios": ["crowdsecurity/smb-bf"], "version": "0.1", "versions": {"0.1": {"digest": "9b87e4588319834b833778cc10602d906194d96b3fd6f8fdd8d1db7adf1a4abe"}}}, "crowdsecurity/sshd": {"content": "parsers:\n  - crowdsecurity/sshd-logs\nscenarios:\n  - crowdsecurity/ssh-bf\n  - crowdsecurity/ssh-slow-bf\n  - crowdsecurity/ssh-cve-2024-6387\ndescription: \"sshd support : parser and brute-force detection\"\ncontexts:\n  - crowdsecurity/bf_base\nauthor: crowdsecurity\ntags:\n  - linux\n  - ssh\n  - bruteforce\n\n", "contexts": ["crowdsecurity/bf_base"], "description": "sshd support : parser and brute-force detection", "parsers": ["crowdsecurity/sshd-logs"], "path": "collections/crowdsecurity/sshd.yaml", "scenarios": ["crowdsecurity/ssh-bf", "crowdsecurity/ssh-slow-bf", "crowdsecurity/ssh-cve-2024-6387"], "version": "0.5", "versions": {"0.1": {"digest": "21159aeb87529efcf1a5033f720413d5321a6451bab679a999f7f01a7aa972b3"}, "0.2": {"digest": "72f6329808fafbb42da52cc6476a6e794d0a1ae5b3847e0060cf23593dd40352"}, "0.3": {"digest": "31d549124634df1d13e67f0903b10c1816690589f4d6add6fec0ed74d30499bb"}, "0.4": {"digest": "f160bdac7f159746128db1f8d425d56ead03f47dfc4f0b0abfe4a6d3bc0a617b"}, "0.5": {"digest": "745d8f2a0460b80546812e618cbb65c99614a159759eede8a46c6b0f9dabdc53"}}}, "crowdsecurity/sshd-impossible-travel": {"content": "parsers:\n  - crowdsecurity/sshd-success-logs\nscenarios:\n  - crowdsecurity/impossible-travel\n  - crowdsecurity/impossible-travel-user\ndescription: \"sshd success: parser and impossible travel\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - ssh\n  - inside-threat\n", "description": "sshd success: parser and impossible travel", "parsers": ["crowdsecurity/sshd-success-logs"], "path": "collections/crowdsecurity/sshd-impossible-travel.yaml", "scenarios": ["crowdsecurity/impossible-travel", "crowdsecurity/impossible-travel-user"], "version": "0.1", "versions": {"0.1": {"digest": "7ed01cfd256c6e46819ed63812200c988280894a9497623fbd1591237f4c8da2"}}}, "crowdsecurity/stirling-pdf": {"content": "parsers:\n  - crowdsecurity/stirling-pdf-logs\nscenarios:\n  - crowdsecurity/stirling-pdf-bf\ndescription: \"Stirling-PDF: parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - stirling-pdf\n  - bruteforce\n\n\n", "description": "Stirling-PDF: parser and brute-force detection", "parsers": ["crowdsecurity/stirling-pdf-logs"], "path": "collections/crowdsecurity/stirling-pdf.yaml", "scenarios": ["crowdsecurity/stirling-pdf-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3a53e0770c6173c3849f66aa83ccb474ca6e4d099798d41751bf6c02bec898d1"}}}, "crowdsecurity/supabase-compose": {"collections": ["crowdsecurity/nginx"], "content": "collections:\n  - crowdsecurity/nginx\nparsers:\n  - crowdsecurity/supabase-docker-pgsql\nscenarios:\n  - crowdsecurity/pgsql-bf\n  - crowdsecurity/pgsql-user-enum\n\ndescription: \"supabase docker compose support\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - pgsql\n  - postgres\n  - bruteforce\n  - nginx\n  - supabase\n  - docker-compose\n  - docker\n", "description": "supabase docker compose support", "parsers": ["crowdsecurity/supabase-docker-pgsql"], "path": "collections/crowdsecurity/supabase-compose.yaml", "scenarios": ["crowdsecurity/pgsql-bf", "crowdsecurity/pgsql-user-enum"], "version": "0.2", "versions": {"0.1": {"digest": "c96259bfa2e7e0d2782b945de44840f55721d05f3324ada1866fcbb0cdaa6462"}, "0.2": {"digest": "5d79c29d476579ef89c2656b563ec30736200015707eeae5ff918872115ecd40"}}}, "crowdsecurity/suricata": {"content": "parsers:\n  - crowdsecurity/suricata-logs\nscenarios:\n  - crowdsecurity/suricata-alerts\ndescription: \"suricata support : parser and automatic remediation on high/major alerts\"\nauthor: crowdsecurity\ncontexts:\n  - crowdsecurity/suricata_base\ntags:\n  - linux\n  - suricata\n  - IDS\n\n", "contexts": ["crowdsecurity/suricata_base"], "description": "suricata support : parser and automatic remediation on high/major alerts", "parsers": ["crowdsecurity/suricata-logs"], "path": "collections/crowdsecurity/suricata.yaml", "scenarios": ["crowdsecurity/suricata-alerts"], "version": "0.2", "versions": {"0.1": {"digest": "6f5d4ed7c676be6082af86c8ff771a063808a5970cb56edb9c8161c9b8390466"}, "0.2": {"digest": "dd64cd667d97c13485e0ca5c1274b1c33e9c98a0df76024cc12c88d461db1209"}}}, "crowdsecurity/synology-dsm": {"content": "# Synology DSM parsers\nparsers:\n  - crowdsecurity/synology-dsm-logs\n# Synology DSM collections\n#collections:\n#  - \n# the list of postoverflows it contains\n# postoverflows:\n#   - crowdsecurity/seo-bots-whitelist\n# the list of scenarios it contains\nscenarios:\n  - crowdsecurity/synology-dsm-bf\ndescription: \"Synology DSM web authentication support\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - synology\n  - bruteforce\n  - scan\n", "description": "Synology DSM web authentication support", "parsers": ["crowdsecurity/synology-dsm-logs"], "path": "collections/crowdsecurity/synology-dsm.yaml", "scenarios": ["crowdsecurity/synology-dsm-bf"], "version": "0.2", "versions": {"0.1": {"digest": "cdd3722569d65100a93620001b867e7932407410b7de78b56f88c7a721f61ac6"}, "0.2": {"digest": "6a2b5e562f0b6a4b9f1c03a05c73985e5326b7fa6d910f74a698fe182a951004"}}}, "crowdsecurity/teamspeak3": {"content": "parsers:\n  - crowdsecurity/teamspeak3-logs\nscenarios:\n  - crowdsecurity/teamspeak3-bf\ndescription: \"teamspeak3 support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - teamspeak3\n  - bruteforce\n", "description": "teamspeak3 support : parser and brute-force detection", "parsers": ["crowdsecurity/teamspeak3-logs"], "path": "collections/crowdsecurity/teamspeak3.yaml", "scenarios": ["crowdsecurity/teamspeak3-bf"], "version": "0.1", "versions": {"0.1": {"digest": "d5012c6747469f7c7d8dbf6f3f1e156593911d490b4cbe8f9cad237865858c7e"}}}, "crowdsecurity/teleport": {"content": "parsers:\n  - crowdsecurity/teleport-logs\nscenarios:\n  - crowdsecurity/teleport-bf\n  - crowdsecurity/impossible-travel\n  - crowdsecurity/impossible-travel-user\ndescription: \"Teleport support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - teleport\n  - bruteforce\n", "description": "Teleport support : parser and brute-force detection", "parsers": ["crowdsecurity/teleport-logs"], "path": "collections/crowdsecurity/teleport.yaml", "scenarios": ["crowdsecurity/teleport-bf", "crowdsecurity/impossible-travel", "crowdsecurity/impossible-travel-user"], "version": "0.1", "versions": {"0.1": {"digest": "797254847c87721261c3898e36e8dfbb4fad9b88983e3311ef402808eef70241"}}}, "crowdsecurity/thehive": {"content": "parsers:\n  - crowdsecurity/thehive-logs\nscenarios:\n  - crowdsecurity/thehive-bf\ndescription: \"Thehive support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - soc\n  - security\n  - thehive\n  - bruteforce\n", "description": "Thehive support : parser and brute-force detection", "parsers": ["crowdsecurity/thehive-logs"], "path": "collections/crowdsecurity/thehive.yaml", "scenarios": ["crowdsecurity/thehive-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3d6910c9ee4fd1c7395018de8ecd98a9128c858eb8799e631b754055711b1c29"}}}, "crowdsecurity/traefik": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "# co-authored with gmelodie (https://github.com/gmelodie)\nparsers:\n  - crowdsecurity/traefik-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"traefik support: parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - traefik\n  - http\n  - bruteforce\n\n", "description": "traefik support: parser and generic http scenarios", "parsers": ["crowdsecurity/traefik-logs"], "path": "collections/crowdsecurity/traefik.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b7b9feedcd49009ce80e4ab12c2642e68054222a7e7bb8611f2f45d5d3600ef2"}}}, "crowdsecurity/unifi": {"collections": ["crowdsecurity/iptables"], "content": "parsers:\n  - crowdsecurity/unifi-logs\n  - crowdsecurity/dropbear-logs\nscenarios:\n  - crowdsecurity/ssh-bf\ncollections:\n  - crowdsecurity/iptables\ndescription: \"Unifi support: syslog parser + port scan + SSH BF detection\"\nauthor: crowdsecurity\ntags:\n  - unifi\n  - ssh\n  - bruteforce\n  - dropbear\n  - portscan\n", "description": "Unifi support: syslog parser + port scan + SSH BF detection", "parsers": ["crowdsecurity/unifi-logs", "crowdsecurity/dropbear-logs"], "path": "collections/crowdsecurity/unifi.yaml", "scenarios": ["crowdsecurity/ssh-bf"], "version": "0.1", "versions": {"0.1": {"digest": "55ad6aac392ac93a0d866522c1fd88ba30c7c4ad99e334a9c46b741f948f27e6"}}}, "crowdsecurity/vsftpd": {"content": "parsers:\n  - crowdsecurity/vsftpd-logs\nscenarios:\n  - crowdsecurity/vsftpd-bf\ndescription: \"VSFTPD support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - ftp\n  - bruteforce\n", "description": "VSFTPD support : logs and brute-force scenarios", "parsers": ["crowdsecurity/vsftpd-logs"], "path": "collections/crowdsecurity/vsftpd.yaml", "scenarios": ["crowdsecurity/vsftpd-bf"], "version": "0.1", "versions": {"0.1": {"digest": "7cb60c9ce9772d4dc7227cc415a55114b8f4e3c07e27c17a666e56e11cb04b32"}}}, "crowdsecurity/whitelist-good-actors": {"content": "postoverflows:\n  - crowdsecurity/seo-bots-whitelist\n  - crowdsecurity/cdn-whitelist\n  - crowdsecurity/rdns\ndescription: \"Good actors whitelists\"\nauthor: crowdsecurity\ntags:\n  - whitelist\n  - bots\n  - partners\n", "description": "Good actors whitelists", "path": "collections/crowdsecurity/whitelist-good-actors.yaml", "postoverflows": ["crowdsecurity/seo-bots-whitelist", "crowdsecurity/cdn-whitelist", "crowdsecurity/rdns"], "version": "0.1", "versions": {"0.1": {"digest": "70f9b1723423de3918bfa3f33fa9c266da71c897b6173ff21e2fb73f9a24245e"}}}, "crowdsecurity/whm": {"collections": ["crowdsecurity/apache2", "crowdsecurity/cpanel", "crowdsecurity/dovecot", "crowdsecurity/exim", "crowdsecurity/http-cve", "crowdsecurity/linux", "crowdsecurity/modsecurity", "crowdsecurity/mysql", "crowdsecurity/pgsql", "crowdsecurity/proftpd", "crowdsecurity/sshd", "crowdsecurity/vsftpd", "fulljackz/pureftpd", "crowdsecurity/whitelist-good-actors"], "content": "collections:\n  - crowdsecurity/apache2\n  - crowdsecurity/cpanel\n  - crowdsecurity/dovecot\n  - crowdsecurity/exim\n  - crowdsecurity/http-cve\n  - crowdsecurity/linux\n  - crowdsecurity/modsecurity\n  - crowdsecurity/mysql\n  - crowdsecurity/pgsql\n  - crowdsecurity/proftpd\n  - crowdsecurity/sshd\n  - crowdsecurity/vsftpd\n  - fulljackz/pureftpd\n  - crowdsecurity/whitelist-good-actors\ndescription: \"WHM broad selection of collections possibly being installed\"\nauthor: crowdsecurity\ntags:\n  - whm\n  - cpanel\n  - linux\n", "description": "WHM broad selection of collections possibly being installed", "path": "collections/crowdsecurity/whm.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b2e05f1a3fb4a667f7bf39fa3224e3f77cc12a199f4fae209a9da173700fe768"}}}, "crowdsecurity/windows": {"content": "parsers:\n  - crowdsecurity/windows-logs\n  - crowdsecurity/windows-auth\n  - crowdsecurity/geoip-enrich\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - crowdsecurity/windows-bf\ndescription: \"core windows support : windows event log + bf detection\"\nauthor: crowdsecurity\ntags:\n  - windows\n\n", "description": "core windows support : windows event log + bf detection", "parsers": ["crowdsecurity/windows-logs", "crowdsecurity/windows-auth", "crowdsecurity/geoip-enrich", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/windows.yaml", "scenarios": ["crowdsecurity/windows-bf"], "version": "0.1", "versions": {"0.1": {"digest": "dca4187a260a723cfc7d47246cccfadab4249adca84f9e8b0cff7727f4503ae9"}}}, "crowdsecurity/windows-cve": {"content": "parsers:\n  - crowdsecurity/windows-logs\n  - crowdsecurity/sysmon-logs\nscenarios:\n  - crowdsecurity/windows-CVE-2022-30190-msdt\n  - crowdsecurity/CVE-2023-23397\ndescription: \"windows CVE: try to detect local CVE exploitation on windows.\"\nauthor: crowdsecurity\ntags:\n  - windows\n  - local\n  - exploit\n\n", "description": "windows CVE: try to detect local CVE exploitation on windows.", "parsers": ["crowdsecurity/windows-logs", "crowdsecurity/sysmon-logs"], "path": "collections/crowdsecurity/windows-cve.yaml", "scenarios": ["crowdsecurity/windows-CVE-2022-30190-msdt", "crowdsecurity/CVE-2023-23397"], "version": "0.3", "versions": {"0.1": {"digest": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "0.2": {"digest": "64a28a68af069438de9f54c6f31ffebf289d9bfe246bc42c06ef4228f65fa808"}, "0.3": {"digest": "ef9545e3263afd26967b0dbed02330f1841b7f33161c6c7e72e016785b052cac"}}}, "crowdsecurity/windows-firewall": {"content": "parsers:\n  - crowdsecurity/windows-firewall-logs\nscenarios:\n  - crowdsecurity/iptables-scan-multi_ports\ncontexts:\n  - crowdsecurity/firewall_base\ndescription: \"windows firewall support : logs and port-scans detection scenarios\"\nauthor: crowdsecurity\ntags:\n  - windows\n  - portscan\n\n", "contexts": ["crowdsecurity/firewall_base"], "description": "windows firewall support : logs and port-scans detection scenarios", "parsers": ["crowdsecurity/windows-firewall-logs"], "path": "collections/crowdsecurity/windows-firewall.yaml", "scenarios": ["crowdsecurity/iptables-scan-multi_ports"], "version": "0.2", "versions": {"0.1": {"digest": "597b15292d86f2aa7df95cc09fb9dc2f7d29aa541727f9704faa1095068889b2"}, "0.2": {"digest": "d5bc6aef85dc2fb3e9589c3d4ee2f879a66b1551787d05f70ad11a2146d98373"}}}, "crowdsecurity/wireguard": {"content": "parsers:\n  - crowdsecurity/wireguard-logs\n  - crowdsecurity/syslog-logs\nscenarios:\n  - crowdsecurity/wireguard-auth\ndescription: \"wireguard auth detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - wireguard\n  - vpn\n", "description": "wireguard auth detection", "parsers": ["crowdsecurity/wireguard-logs", "crowdsecurity/syslog-logs"], "path": "collections/crowdsecurity/wireguard.yaml", "scenarios": ["crowdsecurity/wireguard-auth"], "version": "0.1", "versions": {"0.1": {"digest": "0fa6e103d2206ee8037012e4c580323fde5bca957e4b8a70eb39e045c01a7d50"}}}, "crowdsecurity/wordpress": {"content": "scenarios:\n  - crowdsecurity/http-bf-wordpress_bf\n  - crowdsecurity/http-wordpress_wpconfig\n  - crowdsecurity/http-wordpress_user-enum\n  - crowdsecurity/http-wordpress-scan\ndescription: \"wordpress: Bruteforce protection and config probing\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - wordpress\n  - bruteforce\n", "description": "wordpress: Bruteforce protection and config probing", "path": "collections/crowdsecurity/wordpress.yaml", "scenarios": ["crowdsecurity/http-bf-wordpress_bf", "crowdsecurity/http-wordpress_wpconfig", "crowdsecurity/http-wordpress_user-enum", "crowdsecurity/http-wordpress-scan"], "version": "0.5", "versions": {"0.1": {"digest": "14f428b1d171a092d703478a891db27aaf83a3f6ba99199a3be4a64d193d718d"}, "0.2": {"digest": "502dde075615e4b98edc705b43d3c3d52de6c0d4e62340b91ab5e8676c916668"}, "0.3": {"digest": "c342ae222954a731b60b7c72548fe876de791b3722088ae57cee09d2b2fd7028"}, "0.4": {"digest": "f45c1bb9daec2f8a81e125f75033a3a0198f4eb36c342985f831c77a3057f1bd"}, "0.5": {"digest": "7d253f3f00afe40eabe8334d1e2be59739ab87f3dddc9f9653948b2073a6b92b"}}}, "darkclip/charon-ipsec": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - darkclip/charon-ipsec-logs\nscenarios:\n  - darkclip/charon-ipsec-bf\n  - darkclip/charon-ipsec-slow-bf\ndescription: \"Charon IPSEC support: parsers and scenarios\"\nauthor: darkclip\ntags:\n  - freebsd\n  - opnsense\n  - pfsense\n  - charon\n  - strongswan\n  - vpn\n  - ipsec\n  - bruteforce", "description": "Charon IPSEC support: parsers and scenarios", "parsers": ["crowdsecurity/syslog-logs", "darkclip/charon-ipsec-logs"], "path": "collections/darkclip/charon-ipsec.yaml", "scenarios": ["darkclip/charon-ipsec-bf", "darkclip/charon-ipsec-slow-bf"], "version": "0.1", "versions": {"0.1": {"digest": "936e0b860d53b0f5ec796488d4d70a6d0b97b4c480c297afcc0ee0326fa44edd"}}}, "firewallservices/lemonldap-ng": {"content": "scenarios:\n  - firewallservices/lemonldap-ng-bf\nparsers:\n  - firewallservices/lemonldap-ng\ndescription: \"Lemonldap::NG support : parser and brutefurce detection\"\nauthor: firewallservices\ntags:\n  - linux\n  - bruteforce\n", "description": "Lemonldap::NG support : parser and brutefurce detection", "parsers": ["firewallservices/lemonldap-ng"], "path": "collections/firewallservices/lemonldap-ng.yaml", "scenarios": ["firewallservices/lemonldap-ng-bf"], "version": "0.1", "versions": {"0.1": {"digest": "c7ee2139e599aa59a56e0db3b1946470426b0c766978d6dbc2cc8a76e8e22e4b"}}}, "firewallservices/pf": {"content": "scenarios:\n  - firewallservices/pf-scan-multi_ports\nparsers:\n  - firewallservices/pf-logs\ncontexts:\n  - crowdsecurity/firewall_base\ndescription: \"Parser and scenario for Packet Filter logs\"\nauthor: firewallservices\ntags:\n  - firewall\n  - pfsense\n  - freebsd\n  - portscan\n", "contexts": ["crowdsecurity/firewall_base"], "description": "Parser and scenario for Packet Filter logs", "parsers": ["firewallservices/pf-logs"], "path": "collections/firewallservices/pf.yaml", "scenarios": ["firewallservices/pf-scan-multi_ports"], "version": "0.2", "versions": {"0.1": {"digest": "d549e7f67cffe712b081a9467a84f94f9a57a3852a369e68d079b61eba83c264"}, "0.2": {"digest": "955cbafa111bfceef4d61ff0b345d459fc806d8e3d110a1e429ce2575468034c"}}}, "firewallservices/zimbra": {"content": "parsers:\n  - firewallservices/zimbra-logs\nscenarios:\n  - firewallservices/zimbra-bf\ndescription: \"zimbra support : parser and spammer detection\"\nauthor: firewallservices\ntags:\n  - linux\n  - spam\n  - bruteforce\n  - zimbra\n", "description": "zimbra support : parser and spammer detection", "parsers": ["firewallservices/zimbra-logs"], "path": "collections/firewallservices/zimbra.yaml", "scenarios": ["firewallservices/zimbra-bf"], "version": "0.1", "versions": {"0.1": {"digest": "23dcbf45a7677927d72361f7d0d0210763fd1e4bc019c276b98092966ab14b5c"}}}, "firix/authentik": {"content": "parsers:\n  - firix/authentik-logs\nscenarios:\n  - firix/authentik-bf\ncollections:\ndescription: \"Authentik Support : parser and brute-force detection\"\nauthor: firix\ntags:\n  - linux\n  - brute-force\n  - authentik\n", "description": "Authentik Support : parser and brute-force detection", "parsers": ["firix/authentik-logs"], "path": "collections/firix/authentik.yaml", "scenarios": ["firix/authentik-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3aad9afc16c8be4f1480f3dfbf7b992a571e065cf535775a891c657d67ddbec6"}}}, "fulljackz/proxmox": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - fulljackz/proxmox-logs\nscenarios:\n  - fulljackz/proxmox-bf\ndescription: \"Proxmox Web interface support : parser for brute force detection on Proxmox VE Web UI\"\nauthor: fulljackz\ntags:\n  - Proxmox \n  - bruteforce\n\n", "description": "Proxmox Web interface support : parser for brute force detection on Proxmox VE Web UI", "parsers": ["crowdsecurity/syslog-logs", "fulljackz/proxmox-logs"], "path": "collections/fulljackz/proxmox.yaml", "scenarios": ["fulljackz/proxmox-bf"], "version": "0.1", "versions": {"0.1": {"digest": "a671536baca4ae612eede90a29e39e7079a03d4d16fea9a534fab79c50b30deb"}}}, "fulljackz/pureftpd": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - fulljackz/pureftpd-logs\nscenarios:\n  - fulljackz/pureftpd-bf\ndescription: \"Pureftpd support : parser for brute force detection on Pureftpd\"\nauthor: fulljackz\ntags:\n  - Pureftpd\n  - bruteforce\n\n", "description": "Pureftpd support : parser for brute force detection on Pureftpd", "parsers": ["crowdsecurity/syslog-logs", "fulljackz/pureftpd-logs"], "path": "collections/fulljackz/pureftpd.yaml", "scenarios": ["fulljackz/pureftpd-bf"], "version": "0.1", "versions": {"0.1": {"digest": "efffdc3d30f38ea0e236f6fe55d0997b046ab25f44bef64fbf37ab5fb9b184ed"}}}, "gauth-fr/immich": {"content": "parsers:\n  - gauth-fr/immich-logs\nscenarios:\n  - gauth-fr/immich-bf\ndescription: \"Immich support : parser and brute-force detection\"\nauthor: gauth-fr\ntags:\n  - linux\n  - brute-force\n  - immich\n", "description": "Immich support : parser and brute-force detection", "parsers": ["gauth-fr/immich-logs"], "path": "collections/gauth-fr/immich.yml", "scenarios": ["gauth-fr/immich-bf"], "version": "0.1", "versions": {"0.1": {"digest": "b18a419be300518ec1c82139f892af0d854dda2ff38ef13310568d48f632d5d1"}}}, "hitech95/nginx-mail": {"content": "parsers:\n  - hitech95/nginx-mail-logs\nscenarios:\n  - hitech95/mail-generic-bf\ndescription: \"nginx email core : parser and spammer detection\"\nauthor: hitech95\ntags:\n  - linux\n  - spam\n  - bruteforce\n  - email\n", "description": "nginx email core : parser and spammer detection", "parsers": ["hitech95/nginx-mail-logs"], "path": "collections/hitech95/nginx-mail.yaml", "scenarios": ["hitech95/mail-generic-bf"], "version": "0.1", "versions": {"0.1": {"digest": "0dd42652366dd9cc2dcdc8bee7977cc45b51fba865796fb699b0bf5ca010d736"}}}, "inherent-io/keycloak": {"content": "parsers:\n  - inherent-io/keycloak-logs\nscenarios:\n  - inherent-io/keycloak-bf\n  - inherent-io/keycloak-slow-bf\ndescription: \"Keycloak support : parser and brute-force detection\"\nauthor: inherent-io\ntags:\n  - keycloak\n  - bruteforce\n", "description": "Keycloak support : parser and brute-force detection", "parsers": ["inherent-io/keycloak-logs"], "path": "collections/inherent-io/keycloak.yaml", "scenarios": ["inherent-io/keycloak-bf", "inherent-io/keycloak-slow-bf"], "version": "0.2", "versions": {"0.1": {"digest": "b57e28a782a618fd349ddba5deb1af5795dc75e72022b443de287ec98ec6daa0"}, "0.2": {"digest": "f3ddcd12543d906393577d99474efffe23262d640dce5f7b405de93794cc6627"}}}, "jbowdre/miniflux": {"content": "parsers:\n  - jbowdre/miniflux-logs\nscenarios:\n  - jbowdre/miniflux-bf\ndescription: \"Miniflux support : parser and brute-force detection\"\nauthor: jbowdre\ntags:\n  - linux\n  - brute-force\n  - miniflux\n", "description": "Miniflux support : parser and brute-force detection", "parsers": ["jbowdre/miniflux-logs"], "path": "collections/jbowdre/miniflux.yml", "scenarios": ["jbowdre/miniflux-bf"], "version": "0.1", "versions": {"0.1": {"digest": "cbee1547c09e002b2030a6b59a8b706fdd222e79f38c0fadaa46380f53735262"}}}, "jusabatier/apereo-cas": {"content": "parsers:\n  - jusabatier/apereo-cas-audit-logs\nscenarios:\n  - jusabatier/apereo-cas-bf\n  - jusabatier/apereo-cas-slow-bf\ndescription: \"APEREO-CAS support : parser and brute-force detection\"\nauthor: jusabatier\ntags:\n  - Apereo CAS\n  - bruteforce\n", "description": "APEREO-CAS support : parser and brute-force detection", "parsers": ["jusabatier/apereo-cas-audit-logs"], "path": "collections/jusabatier/apereo-cas.yaml", "scenarios": ["jusabatier/apereo-cas-bf", "jusabatier/apereo-cas-slow-bf"], "version": "0.1", "versions": {"0.1": {"digest": "44e11d3facd2d5ff4b39d72367f688a1dc995270dd78b30ca9226e0a0b70ad3f"}}}, "lourys/pterodactyl": {"content": "parsers:\n  - lourys/pterodactyl-wings-logs\ncollections:\nscenarios:\n  - lourys/pterodactyl-wings-bf\ndescription: \"pterodactyl wings support : parser and generic wings bruteforce\"\nauthor: lourys\ntags:\n  - pterodactyl\n  - wings\n  - brute-force\n", "description": "pterodactyl wings support : parser and generic wings bruteforce", "parsers": ["lourys/pterodactyl-wings-logs"], "path": "collections/lourys/pterodactyl.yaml", "scenarios": ["lourys/pterodactyl-wings-bf"], "version": "0.1", "versions": {"0.1": {"digest": "081021627594cbedcd4523e84b910f71f113feb36f3de50acd1474dd94985916"}}}, "mstilkerich/bind9": {"content": "parsers:\n  - mstilkerich/bind9-logs\nscenarios:\n  - mstilkerich/bind9-refused\ndescription: \"bind9 support : security policy violations detection\"\nauthor: mstilkerich\ntags:\n  - linux\n", "description": "bind9 support : security policy violations detection", "parsers": ["mstilkerich/bind9-logs"], "path": "collections/mstilkerich/bind9.yaml", "scenarios": ["mstilkerich/bind9-refused"], "version": "0.1", "versions": {"0.1": {"digest": "4ee8361d2f94b53c29a518291fbf548d6fdd336c1dee37942d2c305771796957"}}}, "mwinters-stuff/mailu-admin": {"content": "parsers:\n  - mwinters-stuff/mailu-admin-logs\nscenarios:\n  - mwinters-stuff/mailu-admin-bf\ndescription: \"mailu admin support : parser and scenario\"\nauthor: mwinters-stuff\ntags:\n  - linux\n  - mailu\n", "description": "mailu admin support : parser and scenario", "parsers": ["mwinters-stuff/mailu-admin-logs"], "path": "collections/mwinters-stuff/mailu-admin.yaml", "scenarios": ["mwinters-stuff/mailu-admin-bf"], "version": "0.2", "versions": {"0.1": {"digest": "a3921dac9fd22d94069f6ae0dabaf00b26777e36467100077e3c1b3336c86d52"}, "0.2": {"digest": "166621702256cf4adc70f359ec7a6921ef139bd26f10699d77a4abeb6a487487"}}}, "openappsec/openappsec": {"content": "parsers:\n  - openappsec/openappsec-logs\nscenarios:\n  - openappsec/openappsec-ldap-injection\n  - openappsec/openappsec-path-traversal\n  - openappsec/openappsec-probing\n  - openappsec/openappsec-rce\n  - openappsec/openappsec-sql-injection\n  - openappsec/openappsec-xss\n  - openappsec/openappsec-xxe\n  - openappsec/openappsec-url-instead-of-file\n  - openappsec/openappsec-schema-validation\n  - openappsec/openappsec-request-rate-limit\n  - openappsec/openappsec-open-redirect\n  - openappsec/openappsec-http-method-violation\n  - openappsec/openappsec-http-limit-violation\n  - openappsec/openappsec-general\n  - openappsec/openappsec-evasion-techniques\n  - openappsec/openappsec-error-disclosure\n  - openappsec/openappsec-error-limit\n  - openappsec/openappsec-csrf\n  - openappsec/openappsec-bot-protection\n  - openappsec/openappsec-cross-site-redirect\ndescription: \"open-appsec support : open-appsec parser and scenarios\"\nauthor: openappsec\ntags:\n  - linux\n  - web\n  - waf", "description": "open-appsec support : open-appsec parser and scenarios", "parsers": ["openappsec/openappsec-logs"], "path": "collections/openappsec/openappsec.yaml", "scenarios": ["openappsec/openappsec-ldap-injection", "openappsec/openappsec-path-traversal", "openappsec/openappsec-probing", "openappsec/openappsec-rce", "openappsec/openappsec-sql-injection", "openappsec/openappsec-xss", "openappsec/openappsec-xxe", "openappsec/openappsec-url-instead-of-file", "openappsec/openappsec-schema-validation", "openappsec/openappsec-request-rate-limit", "openappsec/openappsec-open-redirect", "openappsec/openappsec-http-method-violation", "openappsec/openappsec-http-limit-violation", "openappsec/openappsec-general", "openappsec/openappsec-evasion-techniques", "openappsec/openappsec-error-disclosure", "openappsec/openappsec-error-limit", "openappsec/openappsec-csrf", "openappsec/openappsec-bot-protection", "openappsec/openappsec-cross-site-redirect"], "version": "0.1", "versions": {"0.1": {"digest": "c940f93ab8715abf6788e3052596e1c279ae59689d50aaecc4be693e05b603a2"}}}, "plague-doctor/audiobookshelf": {"content": "parsers:\n    - plague-doctor/audiobookshelf-logs\nscenarios:\n    - plague-doctor/audiobookshelf-bf\ndescription: \"Audiobookshelf: parser and brute-force detection\"\nauthor: plague-doctor\ntags:\n    - linux\n    - brute-force\n    - audiobookshelf\n", "description": "Audiobookshelf: parser and brute-force detection", "parsers": ["plague-doctor/audiobookshelf-logs"], "path": "collections/plague-doctor/audiobookshelf.yaml", "scenarios": ["plague-doctor/audiobookshelf-bf"], "version": "0.1", "versions": {"0.1": {"digest": "d2e2afd09a10c004b7dd9f1c5be07c1237fc5f1bd9ec339ae374521c6313661b"}}}, "schiz0phr3ne/prowlarr": {"content": "parsers:\n  - schiz0phr3ne/prowlarr-logs\nscenarios:\n  - schiz0phr3ne/prowlarr-bf\ndescription: \"Prowlarr support: parser and brute-force detections\"\nauthor: schiz0phr3ne\ntags:\n  - linux\n  - brute-force\n  - prowlarr\n", "description": "Prowlarr support: parser and brute-force detections", "parsers": ["schiz0phr3ne/prowlarr-logs"], "path": "collections/schiz0phr3ne/prowlarr.yaml", "scenarios": ["schiz0phr3ne/prowlarr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3b125f7cb02336af4db16850ba14589f3976f4a9907ac18d568e50a61d6b1bbf"}}}, "schiz0phr3ne/radarr": {"content": "parsers:\n  - schiz0phr3ne/radarr-logs\nscenarios:\n  - schiz0phr3ne/radarr-bf\ndescription: \"Radarr support: parser and brute-force detections\"\nauthor: schiz0phr3ne\ntags:\n  - linux\n  - brute-force\n  - radarr\n", "description": "Radarr support: parser and brute-force detections", "parsers": ["schiz0phr3ne/radarr-logs"], "path": "collections/schiz0phr3ne/radarr.yaml", "scenarios": ["schiz0phr3ne/radarr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "577bcb650cb6069a638290703064efa15884614a3ba4736feae2adc37033a4dd"}}}, "schiz0phr3ne/sonarr": {"content": "parsers:\n  - schiz0phr3ne/sonarr-logs\nscenarios:\n  - schiz0phr3ne/sonarr-bf\ndescription: \"Sonarr support: parser and brute-force detections\"\nauthor: schiz0phr3ne\ntags:\n  - linux\n  - brute-force\n  - sonarr\n", "description": "Sonarr support: parser and brute-force detections", "parsers": ["schiz0phr3ne/sonarr-logs"], "path": "collections/schiz0phr3ne/sonarr.yaml", "scenarios": ["schiz0phr3ne/sonarr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "5a354d90be668eccf6b4c63e176778cb732c01641738a0b4a350ad3556c1fc3b"}}}, "thespad/sshesame": {"content": "parsers:\n  - thespad/sshesame-logs\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - thespad/sshesame-honeypot\ndescription: \"Collection for sshesame SSH honeypot\"\nauthor: thespad\ntags:\n  - sshesame\n  - ssh\n", "description": "Collection for sshesame SSH honeypot", "parsers": ["thespad/sshesame-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/thespad/sshesame.yaml", "scenarios": ["thespad/sshesame-honeypot"], "version": "0.1", "versions": {"0.1": {"digest": "761e58fae8abf3b8093560273f10dfca4f6681a01ba7e5a41b869b39b10dbfef"}}}, "timokoessler/gitlab": {"content": "parsers:\n  - timokoessler/gitlab-logs\nscenarios:\n  - timokoessler/gitlab-bf\ndescription: \"GitLab support: parser and brute-force detection\"\nauthor: timokoessler\ntags:\n  - linux\n  - brute-force\n  - gitlab", "description": "GitLab support: parser and brute-force detection", "parsers": ["timokoessler/gitlab-logs"], "path": "collections/timokoessler/gitlab.yaml", "scenarios": ["timokoessler/gitlab-bf"], "version": "0.1", "versions": {"0.1": {"digest": "41638aa525b599bf4cef982cf833362d6c698a8fe780d21534800dcf3dd7f7de"}}}, "timokoessler/mongodb": {"content": "parsers:\n  - timokoessler/mongodb-logs\nscenarios:\n  - timokoessler/mongodb-bf\ndescription: \"MongoDB support: parser and brute-force detection\"\nauthor: timokoessler\ntags:\n  - linux\n  - brute-force\n  - mongodb", "description": "MongoDB support: parser and brute-force detection", "parsers": ["timokoessler/mongodb-logs"], "path": "collections/timokoessler/mongodb.yaml", "scenarios": ["timokoessler/mongodb-bf"], "version": "0.1", "versions": {"0.1": {"digest": "5b2ea020a1ac45b47a5b5981c6d913d52c83acb72bdd26b704b1b2c722f5a394"}}}, "timokoessler/uptime-kuma": {"content": "parsers:\n  - timokoessler/uptime-kuma-logs\nscenarios:\n  - timokoessler/uptime-kuma-bf\ndescription: \"Uptime Kuma support: parser and brute-force detection\"\nauthor: timokoessler\ntags:\n  - linux\n  - brute-force\n  - uptime-kuma", "description": "Uptime Kuma support: parser and brute-force detection", "parsers": ["timokoessler/uptime-kuma-logs"], "path": "collections/timokoessler/uptime-kuma.yaml", "scenarios": ["timokoessler/uptime-kuma-bf"], "version": "0.1", "versions": {"0.1": {"digest": "1168b907ae5a3817d3f6fdaa685a4e2bab130a92242cdb3a46dbe8923ae52022"}}}, "xs539/bookstack": {"content": "parsers:\n  - xs539/bookstack-logs\nscenarios:\n  - xs539/bookstack-bf\ndescription: \"Bookstack Support : parser and brute-force detection\"\nauthor: xs539\ntags:\n  - Bookstack", "description": "Bookstack Support : parser and brute-force detection", "parsers": ["xs539/bookstack-logs"], "path": "collections/xs539/bookstack.yml", "scenarios": ["xs539/bookstack-bf"], "version": "0.1", "versions": {"0.1": {"digest": "c8033c7adcf79cb88650944dd5d86c799660b7d74ec5b33e7942d7a5a7f94d14"}}}, "xs539/joplin-server": {"content": "parsers:\n  - xs539/joplin-server-logs\nscenarios:\n  - xs539/joplin-server-bf\ndescription: \"Joplin Server Support : parser and brute-force detection\"\nauthor: xs539\ntags:\n  - Joplin", "description": "Joplin Server Support : parser and brute-force detection", "parsers": ["xs539/joplin-server-logs"], "path": "collections/xs539/joplin-server.yml", "scenarios": ["xs539/joplin-server-bf"], "version": "0.1", "versions": {"0.1": {"digest": "dce7649eb24f0155bcdc443bfd26d88eb25ebe8a5d0775c66be08838e9d48db3"}}}}, "contexts": {"crowdsecurity/appsec_base": {"content": "context:\n  rules:\n    - evt.Meta.rule_name\n  target_uri:\n    - evt.Meta.target_uri\n    - \"match.uri != nil ? match.uri : ''\"\n  id:\n    - \"match.id != nil ? match.id : ''\"\n  name:\n    - \"match.name != nil ? match.name : ''\"\n  method:\n    - \"match.method != nil ? match.method : ''\"\n  matched_zones:\n    - \"match.matched_zones != nil ? match.matched_zones : ''\"\n  msg:\n    - \"match.msg != nil ? match.msg : ''\"\n", "path": "contexts/crowdsecurity/appsec_base.yaml", "version": "0.7", "versions": {"0.1": {"digest": "df177378b9b01c6c8b67ff5085eda9325c67b337e31d60c4ea95f743783a5e24"}, "0.2": {"digest": "c6df9994a6e82165afa99df96993af81e12d6740e57a8955b96a0bc0a428e2aa"}, "0.3": {"digest": "0d7cb4a7b264644894ea555ddba401c780152b72ef62e7cd99610114cfa0fd3b"}, "0.4": {"digest": "9523c172a9aebbb4422d9cd39eb4ad89221053e522223f7c65ba0bf92f8fa8ff"}, "0.5": {"digest": "c6df9994a6e82165afa99df96993af81e12d6740e57a8955b96a0bc0a428e2aa"}, "0.6": {"digest": "9523c172a9aebbb4422d9cd39eb4ad89221053e522223f7c65ba0bf92f8fa8ff"}, "0.7": {"digest": "def7e20fc031282f232243fb4593464a73b5e7912f1ac07251907d8bcbf9c64f"}}}, "crowdsecurity/bf_base": {"content": "#a generic context for bruteforce based scenarios\ncontext:\n  target_user:\n    - evt.Meta.target_user\n", "path": "contexts/crowdsecurity/bf_base.yaml", "version": "0.1", "versions": {"0.1": {"digest": "5b5d0f412ea7da0712fd8e298e9a03642051591adee3817ae529fafa6b66995c"}}}, "crowdsecurity/firewall_base": {"content": "#a generic context for firewall based scenarios\ncontext:\n  dst_port: #Destination port that was targeted\n    - \"evt.Meta.service in ['tcp', 'udp'] ? evt.Meta.service + ':' + evt.Parsed.dst_port : ''\"\n", "path": "contexts/crowdsecurity/firewall_base.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c294017b404dcdb7dfbab5df231fd581999a9af6470847add8cba5d79d049053"}, "0.2": {"digest": "970ff38822f4cbd12321f533d5de42bad2ecef409837ab670e15bf4ce3526935"}}}, "crowdsecurity/fortinet": {"content": "context:\n  sub_type:\n  - evt.Meta.sub_type\n  action:\n  - evt.Meta.action\n  tunnel_type:\n  - evt.Meta.tunnel_type\n  reason:\n  - evt.Meta.reason\n  user:\n  - evt.Meta.target_user", "path": "contexts/crowdsecurity/fortinet.yaml", "version": "0.1", "versions": {"0.1": {"digest": "94562b25f19aa719f89bf9e91ba75d0e490e2faf7ce4f78ee7ebbfb147a59fd3"}}}, "crowdsecurity/http_base": {"content": "#this context file is intended to provide minimal and useful information about HTTP scenarios.\ncontext:\n  target_uri:\n  - evt.Meta.http_path\n  user_agent:\n  - evt.Meta.http_user_agent\n  method:\n  - evt.Meta.http_verb\n  status:\n    - evt.Meta.http_status\n", "path": "contexts/crowdsecurity/http_base.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a8f832e367aa06576e6c552e839b5e61bedfcb8098bd4049c6a0dff06ecab810"}, "0.2": {"digest": "d0f465d5ff866a91637cd59bc9a18f881bbebf03f8360be9df8182035c927909"}}}, "crowdsecurity/palo_alto": {"content": "context:\n  threat_id:\n  - evt.Meta.threat_id\n  severity:\n  - evt.Meta.severity\n  rule_name:\n  - evt.Meta.rule_name\n", "path": "contexts/crowdsecurity/palo_alto.yaml", "version": "0.1", "versions": {"0.1": {"digest": "828175b3d1934253f4386bca5d0ea630b1b8fd2add24a99660775effae219611"}}}, "crowdsecurity/suricata_base": {"content": "context:\n  alert_signature:\n   - evt.Parsed.suricata_alert_signature\n  dst_port:\n    - evt.Parsed.dest_port\n  # signature_id:\n  #   - evt.Meta.suricata_alert_signature_id\n", "path": "contexts/crowdsecurity/suricata_base.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a4fde8bbce311a7b128ead06027cf8651d1d611414b3cb3e08610671cf65f723"}, "0.2": {"digest": "e354b651c80c05f629930631fcbcb4c72f8e07a6ceacaccd0254cda777e027cb"}}}}, "parsers": {"Dominic-Wagner/vaultwarden-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'VAULTWARDEN'\"\nname: Dominic-Wagner/vaultwarden-logs\ndescription: \"Parse vaultwarden logs\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: '^\\[%{DATE_YMD:date} %{TIME:time}\\]\\[vaultwarden::api::identity\\]\\[ERROR\\] Username or password is incorrect\\. Try again\\. IP: %{IP:source_ip}\\. Username: %{EMAILADDRESS:username}\\.$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: vaultwarden_failed_auth\n        - meta: username\n          expression: evt.Parsed.username\n  - grok:\n      pattern: '^\\[%{DATE_YMD:date} %{TIME:time}\\]\\[vaultwarden::api::admin\\]\\[ERROR\\] Invalid admin token. IP: %{IP:source_ip}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: vaultwarden_failed_admin_auth\n  - grok:\n      pattern: '^\\[%{DATE_YMD:date} %{TIME:time}\\]\\[vaultwarden::api::core::two_factor::authenticator\\]\\[ERROR\\] Invalid TOTP code! Server time: %{DATE_YMD:server_date} %{TIME:server_time} %{TZ:server_tz} IP: %{IP:source_ip}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: vaultwarden_failed_totp\n\nstatics:\n    - meta: service\n      value: vaultwarden\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n", "description": "Parse vaultwarden logs", "path": "parsers/s01-parse/Dominic-Wagner/vaultwarden-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "016236c174143284ded1df7e2180c4271b9e7e2e949560aed17b32a00da8c0d6"}}}, "LePresidente/adguardhome-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/adguardhome-logs\ndescription: \"Parse adguardhome logs\"\nfilter: \"evt.Parsed.program == 'adguardhome'\"\nnodes:\n  - grok:\n      pattern: '%{DATE_X:date} %{TIME:time}.* POST %{HOSTNAME} /control/login: from ip %{IP:source_ip}: invalid username or password$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: adguardhome_failed_auth\n  - grok:\n      pattern: '%{DATE_X:date} %{TIME:time}.* POST %{IP:source_ip} /control/login: invalid username or password$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: adguardhome_failed_auth\n\n\nstatics:\n    - meta: service\n      value: adguardhome\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"", "description": "Parse adguardhome logs", "path": "parsers/s01-parse/LePresidente/adguardhome-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "52be900eea2c74174042277698eeaba67bb5111452ace2f454471d1eac87fc55"}, "0.2": {"digest": "41414b5c633037500f61c1ee67f5e2233cb758629468be970180151c523b54f3"}, "0.3": {"digest": "ea7fdd918dccc312f1beca5b8f23cc7ce91e010bfaa876ec51cd4b0bb29b270d"}}}, "LePresidente/authelia-logs": {"content": "debug: false\nname: LePresidente/authelia-logs\nfilter: \"evt.Parsed.program == 'authelia'\"\ndescription: \"Parse Authelia logs\"\npattern_syntax:\n  AUTHELIA_USER: '%{EMAILADDRESS}|%{USERNAME}'\nnodes:\n  ## Main parsing section either it key value pairs or JSON\n  - filter: TrimSpace(evt.Parsed.message) not startsWith \"{\" && ParseKV(evt.Parsed.message, evt.Unmarshaled, \"authelia\") in [\"\", nil]\n    statics:\n      - meta: log_format\n        value: CLF\n  - filter: evt.Unmarshaled.authelia == nil && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"authelia\") in [\"\", nil]\n    statics:\n      - meta: log_format\n        value: JSON\n\n  ## Detect msg contans authentication attempt to parse out user info\n  - grok:\n      pattern: \"%{WORD:auth_status} (1FA|Duo|TOTP) authentication attempt (made )?by user '%{AUTHELIA_USER:user}'\" \n      expression: evt.Unmarshaled.authelia.msg\n    statics:\n      - meta: log_type\n        expression: 'evt.Parsed.auth_status == \"Unsuccessful\" ? \"auth_failed\" : \"auth_success\"'\n\n  ## This section is a hack to allow all authelia logs to pass to next stage, if you set onsuccess next stage at root level all successful attempts will not be passed, so we could do some impossible trave sceanrios\n  - filter: evt.Unmarshaled.authelia != nil\n    onsuccess: next_stage\n    statics:\n      - meta: service\n        value: authelia\nstatics:\n    - meta: user\n      expression: evt.Parsed.user\n    - target: evt.StrTime\n      expression: evt.Unmarshaled.authelia.time\n    - meta: source_ip\n      expression: evt.Unmarshaled.authelia.remote_ip\n", "description": "Parse Authelia logs", "path": "parsers/s01-parse/LePresidente/authelia-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "0d1e7a9e74dc9ce035f8bf45f84dbc8d4741b76f4440d663e8354b87f919913b"}, "0.2": {"digest": "6180a4b745722e87d7cb946dfa8cbd3a2a70949b95c8e159fd4e3470bce944b3"}, "0.3": {"digest": "62b1b7424d5fc1c5aad1da9307b05e1164d1b0948dc578228b67ba10e534225b"}, "0.4": {"digest": "0a5fb148353cb12e099b21a52834965140daa22409fab2e4bfb8580e9a67a04a"}, "0.5": {"digest": "a75c1e4c88511ef40f3d10e086e3a944dbccf20bfb28c6e0a634ffe413bb68f7"}, "0.6": {"digest": "8654df176520c3b4978e0920e8b56af32116c288e5dd3f145f5e0d885d07f3e6"}}}, "LePresidente/emby-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/emby-logs\ndescription: \"Parse emby logs\"\nfilter: \"evt.Parsed.program == 'emby'\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}.*?AUTH-ERROR: %{IP:source_ip} - Invalid username or password entered\\.$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: emby_failed_auth\n\nstatics:\n    - meta: service\n      value: emby\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parse emby logs", "path": "parsers/s01-parse/LePresidente/emby-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "e4721455bd2732edce9a185498f865f42eaa945c76de2fc62666ecbcc8257aff"}, "0.2": {"digest": "a059a5f6bd938262e7775f158a6a4fe0902ae44e0f4d853285613553be7ea236"}, "0.3": {"digest": "60d30153bb280d5f3dfe1c16b3094e7e043200c379b7667b8fe1c19dba653978"}}}, "LePresidente/gitea-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/gitea-logs\nfilter: \"evt.Parsed.program == 'gitea'\"\ndescription: \"Parse gitea logs\"\npattern_syntax:\n  GITEA_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\n  GITEA_CUSTOMDATE: \"%{DATE_X} %{TIME}\"\nnodes:\n  - grok:\n      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from %{IP:remote_ip}:%{NUMBER:remote_port}.* user does not exist'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from \\[%{IP:remote_ip}\\].* user does not exist' \n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt from %{IP:remote_ip}:%{NUMBER:remote_port}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt from \\[%{IP:remote_ip}\\]'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: \"^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from %{IP:remote_ip}:%{NUMBER:remote_port}.* user's password is invalid\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n\nstatics:\n    - meta: service\n      value: gitea\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_ip\"\n", "description": "Parse gitea logs", "path": "parsers/s01-parse/LePresidente/gitea-logs.yaml", "stage": "s01-parse", "version": "0.7", "versions": {"0.1": {"digest": "61733cf559c01d68ad3ee7d571c836273a0f26e03d1ac7d3b6c5f80783f802de"}, "0.2": {"digest": "784d48685704bc9645dd7ee8bd9fa96b7c0dcdd3234cab06fc51770e21e44312"}, "0.3": {"digest": "67f28ca6777dd1e64723ed3e6a70624d371f3ddd780e5f8fea5c9fa447441c55"}, "0.4": {"digest": "23eb7133e86141d6cedc0b37ec89c43f7a4843b767d0b0c6b565be148040add7"}, "0.5": {"digest": "463f551deeea42713d1b5e15767ac5da484bb65dbf951eddba53059899fd4ab6"}, "0.6": {"digest": "99503f178fab36023d24660674b19059cb903dcbf11d516fa9acaec26185d3a0"}, "0.7": {"digest": "4586255da9713d8ef92253fdcc4a70d475c70e4fa222c0c205a2d7120afea768"}}}, "LePresidente/grafana-logs": {"content": "#debug: false\nname: LePresidente/grafana-logs\nfilter: \"evt.Parsed.program == 'grafana'\"\ndescription: \"Parse grafana logs\"\nnodes:\n  ## Main parsing section either it key value pairs or JSON\n  - filter: TrimSpace(evt.Parsed.message) not startsWith \"{\" && ParseKV(evt.Parsed.message, evt.Unmarshaled, \"grafana\") in [\"\", nil]\n    statics:\n      - meta: log_format\n        value: CLF\n  - filter: evt.Unmarshaled.grafana == nil && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"grafana\") in [\"\", nil]\n    statics:\n      - meta: log_format\n        value: JSON\n\n ## Detect msg contans authentication attempt to parse out user info\n  - grok:\n      pattern: \"%{WORD:auth_status}( username or password)?\" \n      expression: evt.Unmarshaled.grafana.msg\n    statics:\n      - meta: log_type\n        expression: 'evt.Parsed.auth_status == \"Unauthorized\" || evt.Parsed.auth_status == \"Invalid\"  ? \"auth_failed\" : \"auth_success\"'\n\n  ## This section is a hack to allow all grafana logs to pass to next stage, if you set onsuccess next stage at root level all successful attempts will not be passed, so we could do some impossible trave sceanrios\n  - filter: evt.Unmarshaled.grafana != nil\n    onsuccess: next_stage\n    statics:\n      - meta: service\n        value: grafana\nstatics:\n    - target: evt.StrTime\n      expression: evt.Unmarshaled.grafana.t\n    - meta: source_ip\n      expression: evt.Unmarshaled.grafana.remote_addr\n", "description": "Parse grafana logs", "path": "parsers/s01-parse/LePresidente/grafana-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "48c4f8429a9f158676fe5a9aef3fe32f3cd4972072a085527e773b9042385f95"}, "0.2": {"digest": "dee3c33a24ca056cf3106bdfbf6ab9535160d607f276a0c0bf9026645430cd51"}, "0.3": {"digest": "f0383cee1040d2b1a43e32d7849be73e14cf56f568c8a713c7a8305e717b1e2c"}}}, "LePresidente/harbor-logs": {"content": "onsuccess: next_stage\ndebug: false\nname: LePresidente/harbor-logs\nfilter: \"evt.Parsed.program == 'harbor'\"\ndescription: \"Parse Harbor logs\"\npattern_syntax:\n  HARBOR_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '.*core\\[%{GREEDYDATA:PID}\\]: %{RFC3339:timestamp} \\[%{GREEDYDATA:ERROR}\\] .*\\[client IP=\"%{IP:remote_ip}, %{IP:internal_ip}\".*failed to authenticate user:%{HARBOR_CUSTOMUSER:username}, error:Failed to authenticate user, due to error \\SInvalid credentials\\S'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: harbor_failed_auth\nstatics:\n    - meta: service\n      value: harbor\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_ip\"", "description": "Parse Harbor logs", "path": "parsers/s01-parse/LePresidente/harbor-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "2f93b00888095bfe2ffe8c69bd4cf7ad33f3ce22c2fd416f5aa8fffb13b29b91"}}}, "LePresidente/jellyfin-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/jellyfin-logs\ndescription: \"Parse jellyfin logs\"\nfilter: \"evt.Parsed.program == 'jellyfin'\"\npattern_syntax:\n  JELLYFIN_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\n  JELLYFIN_CUSTOMDATE: \"%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}\"\nnodes:\n  - grok:\n      pattern: '(\\[%{JELLYFIN_CUSTOMDATE:timestamp}.*\\])?.*Authentication request for \"?%{JELLYFIN_CUSTOMUSER:username}\"? has been denied \\(IP: \"?%{IP:source_ip}\"?\\).*'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyfin_failed_auth\n\nstatics:\n    - meta: service\n      value: jellyfin\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse jellyfin logs", "path": "parsers/s01-parse/LePresidente/jellyfin-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "84040848391d95ee8157b897936c52044ebf1c617fb7afb7b5dacbdc23cf0026"}, "0.2": {"digest": "30e1fd118ce846ab35a7948f8f22a80cf8a7687a8eea65f31af1d053a9be7908"}, "0.3": {"digest": "9752de75a0ee0b01a24ea373b9e3728dddcf98bea6c8495d1cf19632bc5ea4a0"}, "0.4": {"digest": "00711c44397b26c09da3846696c07b7bc9b7c87de7ccce0d80027b15da7c952c"}, "0.5": {"digest": "054003047bc134d7904ad4528c7701ea92eb8e28f307f37e9d7e3b2d4e4e27cc"}, "0.6": {"digest": "bd3285739600306f8b92aeeb0f32fbafd3146434746b60ba7344182acd46b1d1"}}}, "LePresidente/jellyseerr-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/jellyseerr-logs\ndescription: \"Parse jellyseerr logs\"\nfilter: \"evt.Parsed.program == 'jellyseerr'\"\npattern_syntax:\n  JELLYSEERR_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '%{RFC3339:timestamp}.*Failed sign-in attempt using invalid .* password.*{\"ip\":\"::ffff:%{IP:source_ip}\",\"email\":\"%{JELLYSEERR_CUSTOMUSER:username}\"}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyseerr_failed_auth\n  - grok:\n      pattern: '%{RFC3339:timestamp}.*Failed login attempt from user with incorrect.*credentials {\"account\":{\"ip\":\"::ffff:%{IP:source_ip}\",\"email\":\"%{JELLYSEERR_CUSTOMUSER:username}\",\"password\":\"__REDACTED__\"}}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyseerr_failed_auth\n  - grok:\n      pattern: '%{RFC3339:timestamp}.*Failed sign-in attempt using invalid .* password.*{\"ip\":\"%{IP:source_ip}\",\"email\":\"%{JELLYSEERR_CUSTOMUSER:username}\"}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyseerr_failed_auth\n  - grok:\n      pattern: '%{RFC3339:timestamp}.*Failed login attempt from user with incorrect.*credentials {\"account\":{\"ip\":\"%{IP:source_ip}\",\"email\":\"%{JELLYSEERR_CUSTOMUSER:username}\",\"password\":\"__REDACTED__\"}}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyseerr_failed_auth\n\nstatics:\n    - meta: service\n      value: jellyseerr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parse jellyseerr logs", "path": "parsers/s01-parse/LePresidente/jellyseerr-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "7d41498c0683ae655c3a6dcd35b9bcd8986cbe73fc4567fd09ffdf12ca3d8176"}, "0.2": {"digest": "8db12c71262bc7ea91380d2ba1387efbb932c4c384b65945b017201442ca1f18"}, "0.3": {"digest": "9a045612d84da761d7bbb603a392f3e1fe86ad7f7021a5869a300e79f9656676"}}}, "LePresidente/ombi-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/ombi-logs\ndescription: \"Parse ombi logs\"\nfilter: \"evt.Parsed.program == 'ombi'\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}.*?Failed login attempt by IP: %{IP:source_ip}'\n      \n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ombi_auth_failed\n\nstatics:\n    - meta: service\n      value: ombi\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parse ombi logs", "path": "parsers/s01-parse/LePresidente/ombi-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "349a5cf885c37a19465568ffdd1951677c0a9c9657cfa2fcd952d07899b1166d"}, "0.2": {"digest": "a0cb8745d077d692586d36eb64b052a139666d26bc04f4a48cd72575eab714d1"}}}, "LePresidente/overseerr-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/overseerr-logs\ndescription: \"Parse Overseerr logs\"\nfilter: \"evt.Parsed.program == 'overseerr'\"\npattern_syntax:\n  OVERSEERR_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '(%{RFC3339:timestamp})?.*Failed sign-in attempt using invalid .* password.*{\"ip\":\"::ffff:%{IP:source_ip}\",\"email\":\"%{OVERSEERR_CUSTOMUSER:username}\"}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: overseerr_failed_auth\n  - grok:\n      pattern: '(%{RFC3339:timestamp})?.*Failed login attempt from user with incorrect.*credentials {\"account\":{\"ip\":\"::ffff:%{IP:source_ip}\",\"email\":\"%{OVERSEERR_CUSTOMUSER:username}\",\"password\":\"__REDACTED__\"}}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: overseerr_failed_auth\n  - grok:\n      pattern: '(%{RFC3339:timestamp})?.*Failed sign-in attempt using invalid .* password.*{\"ip\":\"%{IP:source_ip}\",\"email\":\"%{OVERSEERR_CUSTOMUSER:username}\"}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: overseerr_failed_auth\n  - grok:\n      pattern: '(%{RFC3339:timestamp})?.*Failed login attempt from user with incorrect.*credentials {\"account\":{\"ip\":\"%{IP:source_ip}\",\"email\":\"%{OVERSEERR_CUSTOMUSER:username}\",\"password\":\"__REDACTED__\"}}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: overseerr_failed_auth\nstatics:\n    - meta: service\n      value: overseerr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parse Overseerr logs", "path": "parsers/s01-parse/LePresidente/overseerr-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "950272a8e13047975401e52f4c4a7f30e422baa6b88251889b24b6601a21c33c"}}}, "LePresidente/redmine-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/redmine-logs\ndescription: \"Parse redmine logs\"\nfilter: \"evt.Parsed.program == 'redmine'\"\npattern_syntax:\n  REDMINE_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '\\[%{TIMESTAMP_ISO8601:timestamp} .*\\]  %{LOGLEVEL:loglevel} .*: Failed login for \\S%{REDMINE_CUSTOMUSER:username}\\S from %{IP:source_ip} at %{GREEDYDATA:date}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: redmine_failed_auth\n\nstatics:\n    - meta: service\n      value: redmine\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp + \\\"Z\\\"\"", "description": "Parse redmine logs", "path": "parsers/s01-parse/LePresidente/redmine-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "69f706a808d2a540156b99e97467094be2432943daa8160743f3109862caa9c9"}, "0.2": {"digest": "ff08869d0519145d891910430ec64e9075185190400c803babc1d67f9ee29b5e"}}}, "MariuszKociubinski/bitwarden-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'bitwarden'\"\nname: MariuszKociubinski/bitwarden-logs\ndescription: \"Parse bitwarden logs\"\ndebug: false\npattern_syntax:\n  BITWARDEN_FAILED_LOGIN: '^%{EXIM_DATE:timestamp}.*Failed login attempt\\. %{IP:source_ip}.*$'\n  BITWARDEN_FAILED_LOGIN_2FA: '^%{EXIM_DATE:timestamp}.*Failed login attempt\\, 2FA invalid\\. %{IP:source_ip}.*$'\nnodes:\n  - grok:\n      name: BITWARDEN_FAILED_LOGIN  \n      apply_on: message\n      statics:\n        - meta: log_type\n          value: bitwarden_failed_auth\n  - grok:\n      name: BITWARDEN_FAILED_LOGIN_2FA\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: bitwarden_failed_auth_2fa\nstatics:\n    - meta: service\n      value: bitwarden\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n", "description": "Parse bitwarden logs", "path": "parsers/s01-parse/MariuszKociubinski/bitwarden-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "8c83d0c40242678340f1f96e27ae3e17e9d258ab0cff9b112c8312cec8609995"}}}, "Zaulao/aws-alb": {"content": "onsuccess: next_stage\nfilter: \"evt.Line.Labels.type == 'aws-alb'\"\nname: crowdsecurity/aws-alb\ndescription: \"Parse AWS ALB access logs\"\ngrok:\n  pattern: '%{DATA:type}\\s+%{TIMESTAMP_ISO8601:time}\\s+%{DATA:elb}\\s+%{IP:remote_addr}:%{BASE10NUM:remote_port}\\s+(-|(%{IP:target_addr}:%{BASE10NUM:target_port}))\\s+%{BASE10NUM:request_processing_time}\\s+%{DATA:target_processing_time}\\s+%{BASE10NUM:response_processing_time}\\s+%{BASE10NUM:elb_status_code}\\s+%{DATA:target_status_code}\\s+%{BASE10NUM:received_bytes}\\s+%{BASE10NUM:sent_bytes}\\s+\\\"%{WORD:verb}\\s+%{DATA:protocol}://%{DATA:host}:%{NUMBER:port}%{DATA:request}\\s+HTTP/%{NUMBER:http_version}\\\"\\s+\\\"%{DATA:http_user_agent}\\\"\\s+%{DATA:ssl_cipher}\\s+%{DATA:ssl_protocol}\\s+%{DATA:target_group_arn}\\s+\\\"%{DATA:trace_id}\\\"\\s+\\\"%{DATA:domain_name}\\\"\\s+\\\"%{DATA:chosen_cert_arn}\\\"\\s+%{DATA:matched_rule_priority}\\s+%{TIMESTAMP_ISO8601:request_creation_time}\\s+\\\"%{DATA:actions_executed}\\\"\\s+\\\"%{DATA:redirect_url}\\\"\\s+\\\"%{DATA:error_reason}\\\"\\s+\\\"%{DATA:target_list}\\\"\\s+\\\"%{DATA:target_status_code_list}\\\"\\s+\\\"%{DATA:classification}\\\"\\s+\\\"%{DATA:classification_reason}\\\"'\n  apply_on: Line.Raw\n  statics:\n    - meta: log_type\n      value: alb_access_log\nstatics:\n    - meta: service\n      value: http\n    - meta: log_type\n      value: http_access-log\n    - target: evt.StrTime\n      expression: evt.Parsed.request_creation_time\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_addr\"\n    - meta: http_status\n      expression: \"evt.Parsed.elb_status_code\"\n    - meta: http_host\n      expression: \"evt.Parsed.host\"\n    - meta: http_port\n      expression: \"evt.Parsed.port\"\n    - meta: http_path\n      expression: \"evt.Parsed.request\"\n    - meta: http_verb\n      expression: \"evt.Parsed.verb\"\n    - meta: http_user_agent\n      expression: \"evt.Parsed.http_user_agent\"", "description": "Parse AWS ALB access logs", "path": "parsers/s01-parse/Zaulao/aws-alb.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "9ba7ab74a72e7090f14d62fb95795f98be37ea981ff3de4464a8cad3b9a1747f"}, "0.2": {"digest": "bfa48a63ec4ffd89913aec70b9b33dfde22ea49a15de087dc0cb19bed8e06d9e"}}}, "ZoeyVid/npmplus-logs": {"content": "filter: \"evt.Parsed.program startsWith 'npmplus'\"\nonsuccess: next_stage\nname: ZoeyVid/npmplus-logs\ndescription: \"Parse NPMplus access and error logs\"\nnodes:\n  - grok:\n      pattern: '\\[%{HTTPDATE:time_local}\\] %{IPORHOST:target_fqdn} %{IPORHOST:remote_addr} %{NUMBER:request_time} \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} %{NUMBER:bytes_sent} %{NOTDQUOTE:http_referer} %{NOTDQUOTE:http_user_agent}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      # and this one the error log\n      pattern: '(%{IPORHOST:target_fqdn} )?%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?%{GREEDYDATA:message}, client: %{IPORHOST:remote_addr}, server: %{DATA:target_fqdn}, request: \"%{WORD:verb} ([^/]+)?%{URIPATHPARAM:request}( HTTP/%{NUMBER:http_version})?\", host: \"%{IPORHOST}(:%{NONNEGINT})?\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_error-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n    pattern_syntax:\n      NO_DOUBLE_QUOTE: '[^\"]+'\n    onsuccess: next_stage\n    nodes:\n      - filter: \"evt.Parsed.message contains 'was not found in'\"\n        pattern_syntax:\n          USER_NOT_FOUND: 'user \"%{NO_DOUBLE_QUOTE:username}\" was not found in \"%{NO_DOUBLE_QUOTE}\"'\n        grok:\n          pattern: '%{USER_NOT_FOUND}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'password mismatch'\"\n        pattern_syntax:\n          PASSWORD_MISMATCH: 'user \"%{NO_DOUBLE_QUOTE:username}\": password mismatch'\n        grok:\n          pattern: '%{PASSWORD_MISMATCH}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'limiting requests, excess'\"\n        statics:\n          - meta: sub_type\n            value: \"req_limit_exceeded\"\n  ## Parse malformed requests\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn} )?%{IPORHOST:remote_addr} - (%{NGUSER:remote_user})? \\[%{HTTPDATE:time_local}\\] \"%{DATA:request}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"( %{NUMBER:request_length} %{NUMBER:request_time} \\[%{DATA:proxy_upstream_name}\\] \\[%{DATA:proxy_alternative_upstream_name}\\])?'\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: http_access-log\n      - target: evt.StrTime\n        expression: evt.Parsed.time_local\n    # these ones apply for both grok patterns\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: target_fqdn\n    expression: \"evt.Parsed.target_fqdn\"\n", "description": "Parse NPMplus access and error logs", "path": "parsers/s01-parse/ZoeyVid/npmplus-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "f8d7c6e259f94d2ce34c6bdd0b9843a1bb52e395c7ba491d3832d3d0ad672103"}}}, "a1ad/meshcentral-logs": {"content": "\nonsuccess: next_stage\n#debug: false\nname: a1ad/meshcentral-logs\ndescription: \"Parse meshcentral logs\"\nfilter: \"evt.Parsed.program == 'meshcentral'\"\npattern_syntax:\n  MESHCENTRAL_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\n  MESHCENTRAL_CUSTOMDATE: \"%{MONTH} %{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}\"\nnodes:\n  - grok:\n      pattern: '%{MESHCENTRAL_CUSTOMDATE:timestamp}.*Failed password for %{MESHCENTRAL_CUSTOMUSER:username} from %{IP:source_ip}.*'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: meshcentral_failed_auth\n\nstatics:\n    - meta: service\n      value: meshcentral\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse meshcentral logs", "path": "parsers/s01-parse/a1ad/meshcentral-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "5d0d9069a3e8872106d88c3b7bbefc61817dceea197b41eb5e29e149c9100f26"}, "0.2": {"digest": "3d89097772e8fd781deeb6695f2cb69242e0b8cdc3e9dad575fb47d075fe3b1e"}}}, "a1ad/mikrotik-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'mikrotik'\"\nname: a1ad/mikrotik-logs\ndescription: \"Parse Mikrotik logs\"\npattern_syntax:\n  MIKROTIK_FIREWALL_DROP: \"%{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME} .* %{DATA:tag} input: in:%{DATA:if_in} out:%{DATA:if_out}, connection-state:%{DATA:connection_state} src-mac %{MAC:src_mac}, proto %{WORD:proto}.*, %{IP:source_ip}:%{INT:src_port}->%{IP:dst_ip}:%{INT:dst_port}, len %{INT:length}\"\n  MIKROTIK_AUTH_FAILED: \"%{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME} .* login failure for user %{USERNAME:invalid_user} from %{IP:source_ip}\"\nnodes:\n  - grok:\n     name: \"MIKROTIK_FIREWALL_DROP\"\n     apply_on: message\n    statics:\n      - meta: service\n        value: tcp_udp\n      - meta: log_type\n        value: mikrotik_drop\n      - meta: dst_port\n        expression: \"evt.Parsed.dst_port\"\n  - grok:\n     name : \"MIKROTIK_AUTH_FAILED\"\n     apply_on: message\n    statics:\n      - meta: service\n        value: mikrotik\n      - meta: log_type\n        value: mikrotik_failed_auth\n      - meta: user\n        expression: \"evt.Parsed.invalid_user\"\nstatics:\n - meta: source_ip\n   expression: \"evt.Parsed.source_ip\"\n - target: evt.StrTime\n   expression: evt.Parsed.timestamp\n", "description": "Parse Mikrotik logs", "path": "parsers/s01-parse/a1ad/mikrotik-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "f93eb0de9904b9b1ef035f5fa74ae3fdd68516de1a28c2e7c00d14afc76d86e8"}, "0.2": {"digest": "f837ac29caf28ee1e273f118fd4a0f9be6e71fa7f8b30983f7ee091cbb82740e"}}}, "aderumier/proxmox-iptables-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.message contains 'PVEFW-reject' or evt.Parsed.message contains 'DROP' or evt.Parsed.message contains 'REJECT'\"\ndebug: false\nname: aderumier/proxmox-iptables-logs\ndescription: \"Parse proxmox iptables drop logs\"\ngrok:\n  pattern: \"^%{NOTSPACE:vmid} %{NOTSPACE:loglevel} %{NOTSPACE:int_eth}-IN %{HTTPDATE:logdate} (policy )?%{NOTSPACE:action}:( IN=%{DATA:iface})?( OUT=%{DATA:oface})?( PHYSIN=%{DATA:physin})?( PHYSOUT=%{DATA:physout})?( MAC=%{MAC:dst_mac}:%{MAC}%{NOTSPACE})? SRC=%{IP:src_ip} DST=%{IP:dst_ip} LEN=%{INT:data_length}( TOS=0x%{BASE16NUM:tos})?( PREC=0x%{BASE16NUM:prec})?( TC=%{INT})?( FLOWLBL=%{INT})?( HOPLIMIT=%{INT:ttl})?( TTL=%{INT:ttl})?( ID=%{INT:id})?( %{WORD})? PROTO=%{NOTSPACE:proto}( SPT=%{INT:src_port})?( DPT=%{INT:dst_port})?( LEN=%{INT:data_length})?( SEQ=%{INT})?( ACK=%{INT:ack})?( WINDOW=%{INT})?( %{WORD:tcp_flags})?\"\n  apply_on: message\nstatics:\n    - meta: service\n      value: tcp\n    - meta: log_type\n      value: iptables_drop\n    - meta: source_ip\n      expression: \"evt.Parsed.src_ip\"\n", "description": "Parse proxmox iptables drop logs", "path": "parsers/s01-parse/aderumier/proxmox-iptables-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "c0c3a2300829f3172cd2b850ed3c21fcc27765a587b31ebad8c1223c06cc647f"}}}, "aidalinfo/couchdb-logs": {"content": "# debug: true\nfilter: \"evt.Parsed.program == 'couchdb'\"\nname: aidalinfo/couchdb-log-node\ndescription: \"First step get IP, User, time and IP from couchdb logs\"\nnodes:\n  - grok:\n      pattern: '\\[notice\\] %{TIMESTAMP_ISO8601:timestamp} %{GREEDYDATA} %{IP:source_ip} %{WORD:user} %{WORD:http_method} %{URIPATHPARAM:request} %{NUMBER:http_status_code}'\n      apply_on: message\n      statics:\n        - meta: stage_log\n          value: root-done\n        - meta: target_user\n          expression: \"evt.Parsed.user\"\n        - meta: source_ip\n          expression: \"evt.Parsed.source_ip\"\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: path_db\n          expression: evt.Parsed.request\n---\nonsuccess: next_stage\nfilter: \"evt.Meta.stage_log == 'root-done'\"\nname: aidalinfo/couchdb-log-subnode\ndescription: \"Second step sort if is bruteforce or crawl\"\n# debug: true\nnodes:\n  - filter: \"evt.Parsed.http_status_code == '401'\"\n    debug: false\n    statics:\n      - meta: log_type\n        value: bf-enum-couchdb\n  - filter: \"evt.Parsed.http_status_code == '404'\"\n    debug: false\n    statics:\n      - meta: log_type\n        value: crawl-couchdb", "description": "First step get IP, User, time and IP from couchdb logs", "path": "parsers/s01-parse/aidalinfo/couchdb-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "cd9a26d6fd50e86a2c14942c5d82a5d83dca70fcc9e4505a7703a73e8f98455c"}}}, "aidalinfo/tcpudp-flood-traefik": {"content": "onsuccess: next_stage\n## Facilite le d\u00e9bogage\n## EN: Enable debugging\ndebug: false\n## Nom de la t\u00e2che\n## EN: Task name\nname: aidalinfo/tcpudp-flood-traefik\n## Description de la t\u00e2che\n## EN: Task description\ndescription: \"Parse TCP/UDP traefik logs\"\n## filtre du log \u00e0 traiter\n## EN: Log filter to process\nfilter: \"evt.Parsed.program == 'tcpudp-traefik'\"\n## Liste des n\u0153uds\n## EN: List of nodes\nnodes:\n## TCP GROK\n  - grok:\n  ## Grok pattern for extract IP SOURCE and other informations on this message structure\n      pattern: 'time=\"%{TIMESTAMP_ISO8601:time}\" level=%{LOGLEVEL:level} msg=\"Handling TCP connection from %{IP:source_ip}:%{NUMBER:source_port} to %{IP:destination_ip}:%{NUMBER:destination_port}\"'\n      ## Apply pattern on for all message in logs\n      apply_on: message\n      statics:\n      ## Add meta value, this type is used by scenario\n        - meta: log_type\n          value: traefik_tcpudp\n## UDP GROK pattern for extract IP SOURCE and other informations on this message structure\n  - grok:\n      pattern: 'time=\"%{TIMESTAMP_ISO8601:time}\" level=%{LOGLEVEL:level} msg=\"Handling UDP stream from %{IP:source_ip}:%{NUMBER:source_port} to %{IP:destination_ip}:%{NUMBER:destination_port}\"'\n     ## Apply pattern on for all message in logs\n      apply_on: message\n      statics:\n      ## Add meta value, this type is used by scenario\n        - meta: log_type\n          value: traefik_tcpudp\nstatics:\n## Pass Time and Source IP to other stages and scenarios.\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.time\n", "description": "Parse TCP/UDP traefik logs", "path": "parsers/s01-parse/aidalinfo/tcpudp-flood-traefik.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "13b543d2cdbd39fa04ff4988825566c06006e9ecc789d23e0e56ec399feddc87"}}}, "andreasbrett/baikal-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'BAIKAL'\"\nname: andreasbrett/baikal-logs\ndescription: \"Parse baikal logs\"\npattern_syntax:\n    BAIKAL_FAILED_AUTH: '\\[%{HTTPDERROR_DATE:timestamp}\\].*\\[client %{IP:source_ip}:%{INT:source_port}\\] AH01071: Got error ''PHP message: user %{USERNAME:username} authentication failure for Baikal'''\n    BAIKAL_FAILED_AUTH_NO_USER: '\\[%{HTTPDERROR_DATE:timestamp}\\].*\\[client %{IP:source_ip}:%{INT:source_port}\\] AH01071: Got error ''PHP message: user \\(name stripped-out\\) authentication failure for Baikal'''\nnodes:\n    - grok:\n          pattern: \"%{BAIKAL_FAILED_AUTH}\"\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: baikal_failed_auth\n              - meta: username\n                expression: evt.Parsed.username\n    - grok:\n          pattern: \"%{BAIKAL_FAILED_AUTH_NO_USER}\"\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: baikal_failed_auth_no_user\n\nstatics:\n    - meta: service\n      value: baikal\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse baikal logs", "path": "parsers/s01-parse/andreasbrett/baikal-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "9272d4c7b7cb4367a5a3da506876b3d292f6b328f048772fe285fc16633c5a0d"}}}, "andreasbrett/paperless-ngx-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'PAPERLESS-NGX'\"\nname: andreasbrett/paperless-ngx-logs\ndescription: \"Parse paperless-ngx logs\"\npattern_syntax:\n    DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\n    PAPERLESS_NGX_USER: \"%{USERNAME}|%{EMAILADDRESS}\"\nnodes:\n    - grok:\n          # Paperless-ngx v1.14.0 to v1.16.5\n          pattern: '\\[%{DATE_YMD:date} %{TIME:time}\\] \\[INFO\\] \\[paperless\\.auth\\] Login failed for user `%{PAPERLESS_NGX_USER:username}` from (private )?IP `%{IP:source_ip}\\.`'\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: paperless_ngx_failed_auth\n              - meta: username\n                expression: evt.Parsed.username\n    - grok:\n          # Paperless-ngx v1.16.6+\n          pattern: '\\[%{DATE_YMD:date} %{TIME:time}\\] \\[INFO\\] \\[paperless\\.auth\\] Login failed for user `%{PAPERLESS_NGX_USER:username}` from (private )?IP `%{IP:source_ip}`\\.'\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: paperless_ngx_failed_auth\n              - meta: username\n                expression: evt.Parsed.username\n\nstatics:\n    - meta: service\n      value: paperless-ngx\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n", "description": "Parse paperless-ngx logs", "path": "parsers/s01-parse/andreasbrett/paperless-ngx-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "9e0192bcc89e1050c982852c611d23f4ca781c4c201a094f11a5a2f4055f47f6"}, "0.2": {"digest": "19dc9f87ca60b58d199a42a6901200d1cf538db0254773b303512cf66308f4a6"}, "0.3": {"digest": "85ecad2a725e827e4d340f312cf8419203264bf2092c7eaa5c78dac618d10cbd"}, "0.4": {"digest": "21d1dff2e2d42b5aa2c24e30f7d761d141afcc64706b3a24efbe5ddd528b605f"}, "0.5": {"digest": "b8c9eaf3783acbf71d2ee98d515dd9dbf97aa2d3c72a4f897d5425c2669d654a"}}}, "andreasbrett/webmin-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'WEBMIN'\"\nname: andreasbrett/webmin-logs\ndescription: \"Parse webmin logs\"\npattern_syntax:\n    WEBMIN_AUTH_WRONG_PASS: '%{INT:unix_epoch}\\.%{INT}\\.%{INT} \\[.*\\] %{USERNAME:username} - %{IP:source_ip} global miniserv.pl \"failed\" \"-\" \"wrongpass\"'\n    WEBMIN_AUTH_TWOFACTOR: '%{INT:unix_epoch}\\.%{INT}\\.%{INT} \\[.*\\] %{USERNAME:username} - %{IP:source_ip} global miniserv.pl \"failed\" \"-\" \"twofactor\"'\n\nnodes:\n    - grok:\n          pattern: \"%{WEBMIN_AUTH_WRONG_PASS}\"\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: webmin_failed_auth_wrong_pass\n    - grok:\n          pattern: \"%{WEBMIN_AUTH_TWOFACTOR}\"\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: webmin_failed_auth_twofactor\n\nstatics:\n    - meta: service\n      value: webmin\n    - meta: username\n      expression: evt.Parsed.username\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.unix_epoch\"\n", "description": "Parse webmin logs", "path": "parsers/s01-parse/andreasbrett/webmin-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "32f1e1ac638422ad152f59e627818970547e548a2496db78cea2da71f30391e4"}, "0.2": {"digest": "604b0334eb171e626fcff15367bf291329291296572cf14ea30b7ca6bc8486de"}}}, "baudneo/gotify-logs": {"content": "#filter: '1 == 1'  # For hub tests\nfilter: evt.Parsed.program == \"gotify\"  # Production\n#debug: true\nonsuccess: next_stage\nname: baudneo/gotify-logs\ndescription: parser for Gotify server\npattern_syntax:\n  GOTIFY_SEPERATOR: '%{SPACE}\\|%{SPACE}'\n  GOTIFY_401: '^\\[GIN\\]\\s*%{YEAR:year}/%{MONTHNUM:month}/%{NUMBER:day}%{SPACE}[-]%{SPACE}%{TIME:time}%{GOTIFY_SEPERATOR}401%{GOTIFY_SEPERATOR}%{DATA:request_time_took}%{GOTIFY_SEPERATOR}%{IP:source_ip}%{GOTIFY_SEPERATOR}%{WORD:request_type}%{SPACE}\"%{DATA:endpoint}\"'\nnodes:\n  - grok:\n      name: \"GOTIFY_401\"\n      apply_on: message\n      statics:\n        - target: StrTime\n          expression: |-\n            evt.Parsed.year+ \"/\" + evt.Parsed.month + \"/\" + evt.Parsed.day + \" \" + evt.Parsed.time\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}%{GOTIFY_SEPERATOR}401%{GOTIFY_SEPERATOR}%{DATA:request_time_took}%{GOTIFY_SEPERATOR}%{IP:source_ip}%{GOTIFY_SEPERATOR}%{WORD:request_type}%{SPACE}\"%{DATA:endpoint}\"'\n      apply_on: message\n      statics:\n        - target: StrTime\n          expression: evt.Parsed.timestamp\nstatics:\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: log_type\n    value: gotify_failed_auth\n", "description": "parser for Gotify server", "path": "parsers/s01-parse/baudneo/gotify-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "526d78255dcba17af4ee78e969241dfdcf00fe1efee8d4498e4875ec2db9d0b8"}, "0.2": {"digest": "918275f986bbd2fd2a5a7b4fd16056a8447d6a95bd076fd698535fcc0d086b3b"}}}, "baudneo/zoneminder-logs": {"content": "#filter: '1==1'     # Testing\nfilter: evt.Parsed.program == \"zoneminder\"   # Production\n#debug: true\nonsuccess: next_stage\nname: baudneo/zoneminder-logs\ndescription: A parser for zoneminder web_php.log (Logins to DB/Web), now supports default PHP intl date format\npattern_syntax:\n  ZM_TIME: '2[0123]|[01]?[0-9]:[0-5][0-9]:(?:[0-5]?[0-9]|60)\\s?(AM|PM [A-Z]{3})?\\.[0-9]{6}'\n  ZM_BADUSER: '^%{MONTHNUM:month}[/-]%{MONTHDAY:day}[/-]%{YEAR:year},?[- ]%{ZM_TIME:time} web_php\\[\\d+]\\.[A-Z]{3} \\[(%{IP:source_ip})\\]\\s\\[Could not retrieve user %{DATA:username} details\\]'\n  ZM_BADPASSWORD: '^%{MONTHNUM:month}[/-]%{MONTHDAY:day}[/-]%{YEAR:year},?[- ]%{ZM_TIME:time} web_php\\[\\d+]\\.[A-Z]{3} \\[(%{IP:source_ip})\\]\\s\\[Login denied for user \\\"%{DATA:username}\\\"\\]'\n##NEW BAD USER# 12/17/22, 10:31:29 PM MST.557710 web_php[254894].ERR [10.0.1.5] [Could not retrieve user aaaa details] at /usr/share/zoneminder/www/includes/auth.php line 395\n##NEW BAD PASS# 01/06/22, 10:31:29 PM MST.557710 web_php[688].ERR [99.1.1.1] [Login denied for user \"validuser\"] at /usr/share/zoneminder/www/includes/auth.php line 313\n##OLD BAD USER# 01/06/22 09:26:15.117434 web_php[258].ERR [99.1.1.1] [Could not retrieve user testuser details] at /usr/share/zoneminder/www/includes/auth.php line 313\n##OLD BAD PASS# 01/06/22 09:27:39.843338 web_php[688].ERR [99.1.1.1] [Login denied for user \"validuser\"] at /usr/share/zoneminder/www/includes/auth.php line 313\n\nnodes:\n  - grok:\n      name: \"ZM_BADPASSWORD\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: zm_failed_auth\n        - meta: log_subtype\n          value: zm_bad_password\n        - meta: username\n          expression: evt.Parsed.username\n  - grok:\n      name: \"ZM_BADUSER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: zm_failed_auth\n        - meta: log_subtype\n          value: zm_bad_user\n        - meta: username\n          expression: evt.Parsed.username\n\nstatics:\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - target: StrTime\n    expression: |-\n      \"20\" + evt.Parsed.year + \"/\" + evt.Parsed.month + \"/\" + evt.Parsed.day + \" \" + evt.Parsed.time\n", "description": "A parser for zoneminder web_php.log (Logins to DB/Web), now supports default PHP intl date format", "path": "parsers/s01-parse/baudneo/zoneminder-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "f603455093722174960807241d0959bfbd485c089372e4770298a0a9cd219001"}, "0.2": {"digest": "150c13541d7664c6557199a47d877fdac7d1a8cf64ec812d4f8af032cbf73815"}}}, "corvese/apache-guacamole-logs": {"content": "name: corvese/apache-guacamole-logs\ndescription: \"Parses Apache Guacamole logs\"\nfilter: \"evt.Parsed.program == 'apache-guacamole'\"\nonsuccess: next_stage\npattern_syntax:\n  GUAC_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}.*Authentication attempt from \\[%{IP:source_ip}.*for user \"%{GUAC_CUSTOMUSER:username}\" failed'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: apache-guacamole_failed_auth\n        - meta: target_user\n          expression: evt.Parsed.username\nstatics:\n    - meta: service\n      value: apache-guacamole\n    - meta: source_ip\n      expression: evt.Parsed.source_ip\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parses Apache Guacamole logs", "path": "parsers/s01-parse/corvese/apache-guacamole-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "16e2b2205362d6ce2d83cce6a843194b5aea947891e5c7e72d006d4980c2d610"}}}, "crowdsecurity/amavis-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/amavis-logs\ndescription: \"Parse amavis logs\"\nfilter: \"evt.Parsed.program == 'amavis'\"\npattern_syntax:\n  AMAVIS_MESSAGEID: \"Message-ID: <%{DATA:amavis_message-id}>\"\n  AMAVIS_SIZE: \"size: %{POSINT:amavis_size}\"\n  AMAVIS_TESTS: 'Tests: \\[%{DATA:amavis_tests}\\]'\n  AMAVIS_FROM: \"From: %{DATA:amavis_header_from}\"\n  AMAVIS_HITS: \"Hits: %{NUMBER:amavis_hits}\"\n  AMAVIS_QUARANTINE: \"quarantine: %{NOTSPACE:amavis_quarantine}\"\n  AMAVIS_SUBJECT: 'Subject: \"%{DATA:amavis_subject}\"'\n  AMAVIS_KV: \"((%{AMAVIS_MESSAGEID}|%{AMAVIS_SIZE}|%{AMAVIS_TESTS}|%{AMAVIS_FROM}|%{AMAVIS_HITS}|%{AMAVIS_QUARANTINE}|%{AMAVIS_SUBJECT}|%{DATA}), )*\"\n  AMAVIS: '\\(%{DATA:amavis_id}\\) %{WORD:amavis_action} %{NOTSPACE:amavis_category}( \\(%{DATA:amavis_match}\\))( \\{%{DATA:amavis_acions}\\})?, \\[(IPv6:)?%{IP:amavis_relay_ip}\\]:%{POSINT:src_port} \\[(IPv6:)?%{IP:amavis_amavis_origin_ip}\\] <%{DATA:amavis_from}> -> <%{DATA:amavis_to}>, %{AMAVIS_KV}%{POSINT:amavis_elapsedtime} ms'\ngrok:\n  name: \"AMAVIS\"\n  apply_on: message\nstatics:\n  - meta: service\n    value: amavis\n  - meta: log_type\n    value: \"amavis\"\n  - meta: source_ip\n    expression: \"evt.Parsed.amavis_relay_ip\"\n  - meta: amavis_category\n    expression: \"evt.Parsed.amavis_category\"\n  - meta: amavis_match\n    expression: \"evt.Parsed.amavis_match\"\n", "description": "Parse amavis logs", "path": "parsers/s01-parse/crowdsecurity/amavis-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "f712aa420ac1e4b89979c3e880a972fbd6b6214585f8f068312aed2b5290c240"}, "0.2": {"digest": "4e3b45710bd862fe27336fcfc7b7736ccdc8874b4d54921d75d1bb3c7c869b8c"}}}, "crowdsecurity/apache2-logs": {"content": "#Apache access/errors logs\n#debug: true\nfilter: \"evt.Parsed.program startsWith 'apache2'\"\nonsuccess: next_stage\nname: crowdsecurity/apache2-logs\ndescription: \"Parse Apache2 access and error logs\"\n#log line can be prefixed by a target_fqdn\nnodes:\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn}(:%{INT:port})? )?%{COMMONAPACHELOG}( \"%{NOTDQUOTE:referrer}\" \"%{NOTDQUOTE:http_user_agent}\")?'\n      apply_on: message\n      # these ones apply for both grok patterns\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: service\n          value: http\n        - meta: source_ip\n          expression: evt.Parsed.clientip\n        - meta: http_status\n          expression: evt.Parsed.response\n        - meta: http_path\n          expression: \"evt.Parsed.request != '' ? evt.Parsed.request : evt.Parsed.rawrequest\"\n        - meta: http_verb\n          expression: \"evt.Parsed.verb\"\n        - meta: http_user_agent\n          expression: \"evt.Parsed.http_user_agent\"\n        - meta: target_fqdn\n          expression: \"evt.Parsed.target_fqdn\"\n    onsuccess: next_stage\n  - grok:\n      pattern: '%{HTTPD_ERRORLOG}'\n      apply_on: message\n    onsuccess: next_stage\n    pattern_syntax:\n      NOT_DOUBLE_POINT: '[^:]+'\n      NOT_DOUBLE_QUOTE: '[^\"]+'    \n    nodes:\n      - filter: \"evt.Parsed.module == 'auth_basic'\"\n        onsuccess: next_stage\n        pattern_syntax:\n          EXTRACT_USER_AND_PATH: 'user %{NOT_DOUBLE_POINT:username}: authentication failure for \"%{NOT_DOUBLE_QUOTE:target_uri}\": Password Mismatch'\n          EXTRACT_USER_AND_PATH2: 'user %{NOT_DOUBLE_POINT:username} not found: \"?%{NOT_DOUBLE_QUOTE:target_uri}\"?'\n        grok:\n          pattern: '%{EXTRACT_USER_AND_PATH}|%{EXTRACT_USER_AND_PATH2}'\n          apply_on: message\n          # these ones apply for both grok patterns\n        statics:\n          - meta: username\n            expression: evt.Parsed.username\n          - meta: http_path\n            expression: evt.Parsed.target_uri\n          - meta: sub_type\n            value: \"auth_fail\"\n      - filter: \"evt.Parsed.module == 'core' && evt.Parsed.message contains 'Invalid URI'\"\n        onsuccess: next_stage\n        pattern_syntax:\n          EXTRACT_URIVERB: 'Invalid URI in request %{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})'\n        grok:\n          pattern: '%{EXTRACT_URIVERB}'\n          apply_on: message\n        statics:\n          - meta: http_path\n            expression: evt.Parsed.request\n          - meta: sub_type\n            value: \"invalid_uri\"\n      - filter: \"evt.Parsed.module == 'authz_core' && evt.Parsed.message contains 'client denied'\"\n        onsuccess: next_stage\n        pattern_syntax:\n          EXTRACT_PATH: 'client denied by server configuration: %{GREEDYDATA:target_uri}'\n        grok:\n          pattern: '%{EXTRACT_PATH}'\n          apply_on: message\n        statics:\n          - meta: http_path\n            expression: evt.Parsed.target_uri\n          - meta: sub_type\n            value: \"permission_denied\"\n    statics:\n      - meta: log_type\n        value: http_error-log\n      - target: evt.StrTime\n        expression: evt.Parsed.timestamp\n      - meta: service\n        value: http\n      - meta: source_ip\n        expression: evt.Parsed.client\n      - meta: http_status\n        expression: evt.Parsed.response\n\n      \n", "description": "Parse Apache2 access and error logs", "path": "parsers/s01-parse/crowdsecurity/apache2-logs.yaml", "stage": "s01-parse", "version": "1.4", "versions": {"0.1": {"digest": "405a1eacb736240024a1302fb7a95184bd1dbb4205c9746877b01aa74aff602f"}, "0.2": {"digest": "911be04b02a2aef5052020087b0941c9a646a0ad6213cb34d541d35c5c10fba1"}, "0.3": {"digest": "2acd7b53dd7ac9765246dbcc539395ad89942a5b48f3cab6b1489cb6c9fe1360"}, "0.4": {"digest": "63c47a8b0740d05e15a84640c44cdbc7b96907deae4650dcdb61329d37bcf9e8"}, "0.5": {"digest": "cb41418db5e5dcf3f1e0fba7731f2eab8eff07f1083a92f5e45e13a4d8f6ff95"}, "0.6": {"digest": "305729e749b6c7c7c7370d0b2fd247c5de13c3d3b45809745049eeb45d7f46b9"}, "0.7": {"digest": "8244953978839afc950bea90934cf20834d4f243b79163a44c8ff67b9eb9e459"}, "0.8": {"digest": "b37a7940a2b6c0b7b909679c1e837ec9e6628f24e9a88f8830600e0df9ba5941"}, "0.9": {"digest": "f4fa2cfb6ff5742b499f575630acf884e1dbdd6af7196e2fd3a2aeeeec9bceb9"}, "1.0": {"digest": "bc4cce2766afde63489bfe7d8d1f8aec82f9c897da5e824904156c53cdc555f6"}, "1.1": {"digest": "311e3761538c96f641478da49af219df8084205e191c39f3794fba4a4780ed76"}, "1.2": {"digest": "a2e968ebf9d568de24f2c407504c85edb08e2e31e9422b913de763ab855dc6d4"}, "1.3": {"digest": "c8fac234d41df2edd112265f75a5178718eeabe58135bd1e307bf92892ff3639"}, "1.4": {"digest": "0b4f8ca4b1a3486d6e6d1c214d05e600035fc95bf717e4247325c5506c98ed46"}}}, "crowdsecurity/appsec-logs": {"content": "onsuccess: next_stage\nformat: 3.0\n#debug: true\nfilter: \"evt.Parsed.program == 'appsec'\"\nname: crowdsecurity/appsec-logs\ndescription: \"Parse Appsec events\"\nstatics:\n  - meta: service\n    value: appsec\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: target_host\n    expression: \"evt.Parsed.target_host\"\n  - meta: request_uuid\n    expression: \"evt.Parsed.req_uuid\"\n  - meta: target_uri\n    expression: \"evt.Parsed.target_uri\"\n#was the request blocked ?\n  - meta: log_type\n    expression: |\n      evt.Appsec.HasInBandMatches ? \"appsec-block\" : \"appsec-info\"\n  - meta: rule_name\n    expression: evt.Appsec.GetName()\n  - meta: rule_ids\n    expression: Sprintf(\"%+v\", evt.Appsec.GetRuleIDs())\n  - meta: remediation_cmpt_ip\n    expression: \"evt.Parsed.remediation_cmpt_ip\"\n", "description": "Parse Appsec events", "path": "parsers/s01-parse/crowdsecurity/appsec-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "b6de996d25dcbbbda4889fea9e8b05559660c54ea2ed7202430741ef40141179"}, "0.2": {"digest": "20fe00d38f9756169fb5d56027e5c26085e038f699a18d17be94ad6b0da14447"}, "0.3": {"digest": "24ea66d28ee00e9bef266b86fc56ed9e7a95e8f36027765b99389f0b4ed8c2d3"}, "0.4": {"digest": "60b45bc8957dfc40f270500b8ef438085294fc172c92332dcb9dcb3c14cc9c85"}, "0.5": {"digest": "e44f2877c363061fef239a9af472253900674bf261e8762febd06d7ef20022a0"}}}, "crowdsecurity/asterisk-logs": {"content": "name: crowdsecurity/asterisk-logs\ndescription: \"Parse Asterisk logs\"\nfilter: \"evt.Parsed.program == 'asterisk'\"\nonsuccess: next_stage\nnodes:\n  - grok:\n      pattern: '(\\[%{DATA:timestamp}\\] )?SECURITY\\[%{NUMBER}\\].* SecurityEvent=\"InvalidAccountID\",EventTV=\"%{DATA:event_timestamp}\",Severity=\"Error\",Service=\"%{NOTDQUOTE:asterisk_service}\",EventVersion=\"%{NUMBER}\",AccountID=\"%{NOTDQUOTE:username}\",SessionID=\"%{NOTDQUOTE:asterisk_session_id}\",LocalAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:target_ip}/%{NUMBER:target_port}\",RemoteAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:source_ip}/%{NUMBER:source_port}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: asterisk_failed_auth\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: target_user\n          expression: evt.Parsed.username\n        - meta: session_id\n          expression: evt.Parsed.asterisk_session_id\n        - meta: asterisk_service\n          expression: evt.Parsed.asterisk_service\n  - grok:\n      pattern: '(\\[%{DATA:timestamp}\\] )?SECURITY\\[%{NUMBER}\\].* SecurityEvent=\"ChallengeResponseFailed\",EventTV=\"%{DATA:event_timestamp}\",Severity=\"Error\",Service=\"%{NOTDQUOTE:asterisk_service}\",EventVersion=\"%{NUMBER}\",AccountID=\"%{NOTDQUOTE:username}\",SessionID=\"%{NOTDQUOTE:asterisk_session_id}\",LocalAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:target_ip}/%{NUMBER:target_port}\",RemoteAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:source_ip}/%{NUMBER:source_port}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: asterisk_failed_auth\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: target_user\n          expression: evt.Parsed.username\n        - meta: session_id\n          expression: evt.Parsed.asterisk_session_id\n        - meta: asterisk_service\n          expression: evt.Parsed.asterisk_service\n  - grok:\n      pattern: '(\\[%{DATA:timestamp}\\] )?SECURITY\\[%{NUMBER}\\].* SecurityEvent=\"InvalidPassword\",EventTV=\"%{DATA:event_timestamp}\",Severity=\"Error\",Service=\"%{NOTDQUOTE:asterisk_service}\",EventVersion=\"%{NUMBER}\",AccountID=\"%{NOTDQUOTE:username}\",SessionID=\"%{NOTDQUOTE:asterisk_session_id}\",LocalAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:target_ip}/%{NUMBER:target_port}\",RemoteAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:source_ip}/%{NUMBER:source_port}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: asterisk_failed_auth\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: target_user\n          expression: evt.Parsed.username\n        - meta: session_id\n          expression: evt.Parsed.asterisk_session_id\n        - meta: asterisk_service\n          expression: evt.Parsed.asterisk_service\nstatics:\n    - meta: service\n      value: asterisk\n    - meta: source_ip\n      expression: evt.Parsed.source_ip\n", "description": "Parse Asterisk logs", "path": "parsers/s01-parse/crowdsecurity/asterisk-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "6c32f0c5c37b86d83b35c9c90aee2550b8c2d59748a31bd2ba95842be35bf031"}, "0.2": {"digest": "29155ff1a969acdbd1be800f350168d0b2bf2c2adcfd9350d284667d857e9fe3"}, "0.3": {"digest": "f8a4fb06d81b9b1344ae9ba158c34b069f234597dc2fa140ae2f139cc8da148d"}, "0.4": {"digest": "9679a5939331f6d40527c715e112cc5df7619374213801a57542712a7f305945"}, "0.5": {"digest": "1a3d1f0f9808428c88bbff7d88c73ef3816a4465f2a8948bd1c95c156334f2ea"}}}, "crowdsecurity/auditd-logs": {"content": "#type=SYSCALL msg=audit(1672330955.273:4433): arch=c000003e syscall=263 success=no exit=-2 a0=ffffff9c a1=557162396590 a2=0 a3=0 items=1 ppid=144571 pid=145400 auid=1000 uid=1000 gid=1000 euid=1000 suid=1000 fsuid=1000 egid=1000 sgid=1000 fsgid=1000 tty=pts0 ses=79 comm=\"rm\" exe=\"/usr/bin/rm\" key=\"file_modification\"\nname: crowdsecurity/auditd-logs\ndescription: \"Parse auditd logs\"\nfilter: \"evt.Parsed.program == 'auditd'\"\nonsuccess: next_stage\npattern_syntax:\n  FLOAT: '[0-9\\.]+'\n\nnodes:\n  #SYSCALL 59 on x86_64 -> execve\n  - filter: ParseKV(evt.Parsed.message, evt.Unmarshaled, \"auditd\") == nil # == nil is required because ParseKV does not return a value\n    nodes:\n      - grok:\n          pattern: '%{WORD:msg_type}\\(%{FLOAT:timestamp}:%{INT:event_inc_id}\\):'\n          expression: evt.Unmarshaled.auditd.msg\n        nodes:\n          - filter: evt.Unmarshaled.auditd.type == \"SYSCALL\" and evt.Unmarshaled.auditd.arch == \"c000003e\" and evt.Unmarshaled.auditd.syscall == \"59\"\n            statics:\n              - meta: log_type\n                value: execve\n              #let's hydrate with ppid process if we can :)\n              - target: evt.Meta.parent_progname\n                expression: GetFromStash(\"auditd_pid_progname\", evt.Unmarshaled.auditd.ppid)\n            #let's capture process name if we can\n            stash:\n              - name: auditd_pid_progname\n                key: evt.Unmarshaled.auditd.pid\n                value: evt.Unmarshaled.auditd.exe\n                ttl: 1m\n                size: 100\n          - filter: evt.Unmarshaled.auditd.type == \"ANOM_ABEND\"\n            statics:\n              - meta: log_type\n                value: anom_abend\n        statics:\n          - target: evt.StrTime\n            expression: evt.Parsed.timestamp\n          - meta: ppid\n            expression: evt.Unmarshaled.auditd.ppid\n          - meta: exe\n            expression: evt.Unmarshaled.auditd.exe\n          - meta: uid\n            expression: evt.Unmarshaled.auditd.uid\n          - meta: auid\n            expression: evt.Unmarshaled.auditd.auid\n          - meta: euid\n            expression: evt.Unmarshaled.auditd.euid\n          - meta: gid\n            expression: evt.Unmarshaled.auditd.gid\n          - meta: ses\n            expression: evt.Unmarshaled.auditd.ses\n          - meta: subj\n            expression: evt.Unmarshaled.auditd.subj\n          - meta: pid\n            expression: evt.Unmarshaled.auditd.pid\n          - meta: comm\n            expression: evt.Unmarshaled.auditd.comm\n          - meta: sig\n            expression: evt.Unmarshaled.auditd.sig\n          - meta: tty\n            expression: evt.Unmarshaled.auditd.tty\n          - meta: res\n            expression: evt.Unmarshaled.auditd.res\n          - meta: str_UID\n            expression: evt.Unmarshaled.auditd.UID\n          - meta: str_GID\n            expression: evt.Unmarshaled.auditd.GID \n          - meta: auditd_eventid\n            expression: evt.Parsed.event_inc_id\n", "description": "Parse auditd logs", "path": "parsers/s01-parse/crowdsecurity/auditd-logs.yaml", "stage": "s01-parse", "version": "0.9", "versions": {"0.1": {"digest": "fa23b38e12ef4abce21475ad78c3d6650538c88e68f8235f74afc238345b0279"}, "0.2": {"digest": "de3f1196ca61471401f0fbb0d628228ad2d894670233b72f0e0ad97ffa33c4b8"}, "0.3": {"digest": "5172acd163c92054c107b6f82769c2f763a73c6c43e63a74452d674cf4c772a3"}, "0.4": {"digest": "770cd94fb8d0cd0044a63dc2fa391c0eb33be2bf277c26d090731d9c9d563de9"}, "0.5": {"digest": "c6bd6b56738da1f23805cc0ff3eeedf2dddebf1305b072dcddf30b1cfff544fd"}, "0.6": {"digest": "7e8321dd50751a53ed82b4a34c58206ce2266c1bdb8c435ce011dc1c46892309"}, "0.7": {"digest": "777a9632ba5871cb42e51096c8e4ad49c1b6a39912e8a5097be4401dc42879c8"}, "0.8": {"digest": "094e29326685de68912952a3561ff862d78acc2d515d5c7badc6e3be13857d48"}, "0.9": {"digest": "a8302c5a00fd74c13205934a6b101b5216ba93f2798fcbf816cc361bd63c829f"}}}, "crowdsecurity/aws-cloudfront": {"content": "onsuccess: next_stage\nfilter: \"evt.Line.Labels.type == 'aws-cloudfront'\"\nname: crowdsecurity/aws-cloudfront\ndescription: \"Parse AWS CloudFront access logs\"\ngrok:\n  pattern: '%{YEAR:year}-%{MONTHNUM2:month}-%{MONTHDAY:day}\\s+%{TIME:time}\\s+%{DATA:x_edge_location}\\s+%{NUMBER:sc_bytes}\\s+%{IP:c_ip}\\s+%{WORD:cs_method}\\s+%{HOSTNAME:cs_host}\\s+%{DATA:cs_uri_stem}\\s+%{NUMBER:sc_status}\\s+%{DATA:cs_referer}\\s+%{DATA:cs_user_agent}\\s+%{DATA:cs_uri_query}\\s+%{DATA:cs_cookie}\\s+%{WORD:x_edge_result_type}\\s+%{DATA:x_edge_request_id}\\s+%{HOSTNAME:x_host_header}\\s+%{WORD:cs_protocol}\\s+%{NUMBER:cs_bytes}\\s+%{NUMBER:time_taken}\\s+%{DATA:x_forwarded_for}\\s+%{DATA:ssl_protocol}\\s+%{DATA:ssl_cipher}\\s+%{WORD:x_edge_response_result_type}\\s+%{DATA:cs_protocol_version}\\s+%{DATA:fle_status}\\s+%{DATA:fle_encrypted_fields}\\s+%{NUMBER:c_port}\\s+%{NUMBER:time_to_first_byte}\\s+%{WORD:x_edge_detailed_result_type}\\s+%{DATA:sc_content_type}\\s+%{DATA:sc_content_len}\\s+%{DATA:sc_range_start}\\s+%{DATA:sc_range_end}'\n  apply_on: message\nstatics:\n    - meta: service\n      value: http\n    - meta: log_type\n      value: http_access-log\n    - target: evt.StrTime\n      expression: \"evt.Parsed.year + '-' + evt.Parsed.month + '-' + evt.Parsed.day + 'T' + evt.Parsed.time + 'Z'\"\n    - meta: source_ip\n      expression: \"evt.Parsed.c_ip\"\n    - meta: http_status\n      expression: \"evt.Parsed.sc_status\"\n    - meta: http_path\n      expression: |\n        evt.Parsed.cs_uri_query == \"-\" ? evt.Parsed.cs_uri_stem : evt.Parsed.cs_uri_stem + '?' + evt.Parsed.cs_uri_query\n    - meta: http_verb\n      expression: \"evt.Parsed.cs_method\"\n    - meta: http_user_agent\n      expression: \"evt.Parsed.cs_user_agent\"", "description": "Parse AWS CloudFront access logs", "path": "parsers/s01-parse/crowdsecurity/aws-cloudfront.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "795f0501182540325f30f3ca69ac7237653549989a65838d0c218fc03589ddcc"}, "0.2": {"digest": "62f22527304c1287f7c52b28b5fcbba9c4a7c18fdbf4299414c77b15f7bf5f8b"}, "0.3": {"digest": "525b1d131081c2b35bc7ca97b9dfc4c2ebf2737f328ed91ae4c7882dc2c56705"}}}, "crowdsecurity/aws-cloudtrail": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'aws-cloudtrail'\"\nname: crowdsecurity/aws-cloudtrail\ndescription: \"Parse AWS Cloudtrail logs\"\nstatics:\n  - parsed: cloudtrail_parsed\n    expression: UnmarshalJSON(evt.Line.Raw, evt.Unmarshaled, 'cloudtrail')\n  - target: evt.StrTime\n    expression: evt.Unmarshaled.cloudtrail.eventTime\n  - meta: user_type\n    expression: evt.Unmarshaled.cloudtrail.userIdentity.type\n # see : https://github.com/antonmedv/expr/blob/master/docs/Language-Definition.md#nil-coalescing\n  - meta: user_arn\n    expression: |\n      evt.Unmarshaled.cloudtrail.userIdentity?.arn ?? evt.Unmarshaled.cloudtrail.userIdentity.userName\n  - meta: event_name\n    expression: evt.Unmarshaled.cloudtrail.eventName\n  - meta: event_source\n    expression: evt.Unmarshaled.cloudtrail.eventSource\n  - meta: region\n    expression: evt.Unmarshaled.cloudtrail.awsRegion\n  - meta: source_ip\n    expression: |\n      IsIP(evt.Unmarshaled.cloudtrail.sourceIPAddress) ? evt.Unmarshaled.cloudtrail.sourceIPAddress : \"\"\n  - meta: user_agent\n    expression: evt.Unmarshaled.cloudtrail.userAgent\n  - meta: error_code\n    expression: evt.Unmarshaled.cloudtrail.errorCode\n  - meta: event_id\n    expression: evt.Unmarshaled.cloudtrail.eventID\n  - meta: account_id\n    expression: evt.Unmarshaled.cloudtrail.userIdentity.accountId\n  - meta: log_type\n    value: aws-cloudtrail\n", "description": "Parse AWS Cloudtrail logs", "path": "parsers/s01-parse/crowdsecurity/aws-cloudtrail.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "e8a3be4f59909cb5ce9e84132c41d73d6a038362668f84cd851e5228f8ce22a4"}, "0.2": {"digest": "9684e924bd23962cfb00b11530c569a9db5972be3ec254ec6fa711c19aeb03fe"}, "0.3": {"digest": "1c1ce10d16bda257a81f838efe8d9069559f0d9c1bf712dad7afd222592947ab"}, "0.4": {"digest": "5608995bc30951678620b509058a1f2e24a23de62b3cf99bda396ba458e26967"}}}, "crowdsecurity/caddy-logs": {"content": "filter: \"evt.Parsed.program startsWith 'caddy' && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, 'caddy') in ['', nil]\"\nonsuccess: next_stage\nname: crowdsecurity/caddy-logs\ndescription: \"Parse caddy logs\"\nstatics:\n  - meta: log_type\n    value: http_access-log\n  - target: evt.StrTime\n    expression: |\n      Sprintf(\"%v\", evt.Unmarshaled.caddy.ts) matches '^[0-9e\\\\.\\\\+]+$' ? int(evt.Unmarshaled.caddy.ts) : evt.Unmarshaled.caddy.ts\n  - meta: service\n    value: http\n  ##Caddy now sets client_ip to the value of X-Forwarded-For if users sets trusted proxies\n  - parsed: remote_ip\n    expression: evt.Unmarshaled.caddy.request.client_ip\n  - parsed: http_version\n    expression: \"evt.Unmarshaled.caddy.request.proto != nil ? Split(evt.Unmarshaled.caddy.request.proto, '/')[1] : nil\"\n  - parsed: remote_addr\n    expression: \"evt.Unmarshaled.caddy.request.remote_addr != nil ? Split(evt.Unmarshaled.caddy.request.remote_addr, ':')[0] : nil\"\n  - meta: source_ip\n    expression: evt.Parsed.remote_ip\n  - meta: http_status\n    expression: int(evt.Unmarshaled.caddy.status)\n  - meta: http_path\n    expression: evt.Unmarshaled.caddy.request.uri\n  - parsed: request #Add for http-logs enricher\n    expression: evt.Unmarshaled.caddy.request.uri\n  - parsed: verb\n    expression: evt.Unmarshaled.caddy.request.method\n  - meta: http_verb\n    expression: evt.Unmarshaled.caddy.request.method\n  - parsed: http_user_agent\n    expression: \"get(evt.Unmarshaled.caddy.request.headers, 'User-Agent') != nil ? evt.Unmarshaled.caddy.request.headers['User-Agent'][0] : nil\"\n  - meta: http_user_agent\n    expression: evt.Parsed.http_user_agent\n  - meta: target_fqdn\n    expression: evt.Unmarshaled.caddy.request.host\n  - meta: sub_type\n    expression: \"evt.Meta.http_status == '401' && get(evt.Unmarshaled.caddy.resp_headers, 'Www-Authenticate') != nil && any(get(evt.Unmarshaled.caddy.resp_headers, 'Www-Authenticate'), { # startsWith 'Basic' }) ? 'auth_fail' : nil\"\n\n", "description": "Parse caddy logs", "path": "parsers/s01-parse/crowdsecurity/caddy-logs.yaml", "stage": "s01-parse", "version": "0.8", "versions": {"0.1": {"digest": "30bf81915d8254ab7611c156ddbe0cf389838d471f973403ae1b07fffa5b6d5a"}, "0.2": {"digest": "482a3d592e742b54f80c4473259ff8e0d5c46a657f086814d6a13e985a550376"}, "0.3": {"digest": "22abc6def6fb9c36fcc6bb021002fe0b471116eab16e86c56625cfeef668eb7d"}, "0.4": {"digest": "5f70ca245d84d2b72b5d30517ef85de6bc241b3537c4ac0fcf86a176c2539a75"}, "0.5": {"digest": "19673bb9a1ad806c7d615d24c37649f8c0679acb07df9ac304ba23d44eaf0f53"}, "0.6": {"digest": "856f9882c2aa89d701dce456e97bfb4c5230b7fc83cefc54a8279d7cdac5b8fe"}, "0.7": {"digest": "6f4f7ca36d2d65b540bdc57e47edd44365c39a82d04291015136356f99d29f85"}, "0.8": {"digest": "4c0627a84747f31d64a1d6b55796950371e64c9c90233fb7cc4bde7e536ea653"}}}, "crowdsecurity/configserver-lfd-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'lfd'\"\nname: crowdsecurity/configserver-lfd-logs\ndescription: \"Parse ConfigServer LFD logs\"\ngrok:\n  pattern: \"Failed SSH login from %{IP:source_ip} \\\\(%{NOTSPACE:country_code}/%{GREEDYDATA:country_name}/%{NOTSPACE:source_rdns}\\\\): %{GREEDYDATA:reason}\"\n  apply_on: message\n  statics:\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: reason\n      expression: \"evt.Parsed.reason\"", "description": "Parse ConfigServer LFD logs", "path": "parsers/s01-parse/crowdsecurity/configserver-lfd-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "d066bf65a18de919170ddc124550c4617246053031355c66150262e1be2d968f"}, "0.2": {"digest": "ca9f9686ccddadf26f162c0236dc1623c837ea12be2e2dced2c5adf1f4b74a15"}}}, "crowdsecurity/cowrie-logs": {"content": "onsuccess: next_stage\nname: cowrie-logs\ndescription: \"Parse cowrie honeypots logs\"\nfilter: \"evt.Parsed.program == 'cowrie'\"\ngrok:\n  name: \"COWRIE_NEW_CO\"\n  apply_on: message\nstatics:\n    - meta: service\n      value: telnet\n    - meta: log_type\n      value: telnet_new_session\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: dest_ip\n      expression: \"evt.Parsed.dest_ip\"\n    - meta: dest_port\n      expression: \"evt.Parsed.dest_port\"\n    - parsed: \"telnet_session\"\n      expression: \"evt.Parsed.telnet_session\"", "description": "Parse cowrie honeypots logs", "path": "parsers/s01-parse/crowdsecurity/cowrie-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "4ebcf38bef1106ba94ccf6aa575958695de12fa1278b25dddb76cfdce93b553b"}}}, "crowdsecurity/cpanel-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'cpanel'\"\nname: crowdsecurity/cpanel-logs\ndescription: \"Parse Cpanel logs\"\npattern_syntax:\n  NO_DOUBLE_QUOTE: '[^\"]+'\n  CPANEL_HEADER: \\[%{DATA:date} \\+[0-9]+\\] info \\[(cpaneld|whostmgrd)\\] %{IP:remote_addr} - %{NOTSPACE:username} \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\"\nnodes:\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN cpaneld: brute force attempt \\(user %{DATA}\\) has locked out IP %{IP}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_attempt\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN cpaneld: brute force attempt \\(user %{DATA:target_user}\\) has locked out IP %{IP}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN cpaneld: invalid cpanel user %{DATA:target_user}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN cpaneld: %{DATA:target_user} login is not permitted to cpaneld'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN whostmgrd: login attempt to whm by a non-reseller/root'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN whostmgrd: user password incorrect'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: # see https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-log-files/\n      pattern: '%{IP:remote_addr} - %{NOTSPACE:username} \\[%{DATE}:%{TIME} %{ISO8601_TIMEZONE}\\] \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{INT:status} %{INT:request_body_length} \"%{NOTSPACE:http_referer}\" \"%{NO_DOUBLE_QUOTE:http_user_agent}\" \"%{NO_DOUBLE_QUOTE:auth_method}\" \"%{NO_DOUBLE_QUOTE:x_forwarded_for}\" %{NUMBER:server_port}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: username\n    expression: \"evt.Parsed.username\"", "description": "Parse Cpanel logs", "path": "parsers/s01-parse/crowdsecurity/cpanel-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "1ff320cb8be4b2ed7e02f2614277d32fcfe8ee60058f6480bb3ab4ff53125ae0"}, "0.2": {"digest": "38155a2c95c77f26ae07f1718f01eb0fbf946b7dde10f50d375d6b82095807cb"}, "0.3": {"digest": "66ff0528cc940645a2a1e07894b048d52c9eb02341f6e2abe8756e70ae36f870"}, "0.4": {"digest": "3ce770d729d896d39598fa0f2d560edf900a05dbcd4f9a460e35a987f8eca8cf"}}}, "crowdsecurity/cri-logs": {"content": "filter: \"evt.Line.Labels.type == 'containerd'\"\nonsuccess: next_stage\nname: crowdsecurity/cri-logs\ndescription: CRI logging format parser\nnodes:\n  - grok:\n      pattern: \"^%{TIMESTAMP_ISO8601:cri_timestamp} %{WORD:stream} %{WORD:logtag} %{GREEDYDATA:message}\"\n      apply_on: Line.Raw\nstatics:\n  - parsed: \"logsource\"\n    value: \"cri\"\n  - target: evt.StrTime\n    expression: evt.Parsed.cri_timestamp\n  - parsed: program\n    expression: evt.Line.Labels.program\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module", "description": "CRI logging format parser", "path": "parsers/s00-raw/crowdsecurity/cri-logs.yaml", "stage": "s00-raw", "version": "0.1", "versions": {"0.1": {"digest": "3818208420042396bc2ed0d75dee43d6651c5979b351642128d11ce8360f7347"}}}, "crowdsecurity/dateparse-enrich": {"content": "filter: \"evt.StrTime != ''\"\nname: crowdsecurity/dateparse-enrich\n#debug: true\n#it's a hack lol\nstatics:\n  - method: ParseDate\n    expression: evt.StrTime\n  - target: MarshaledTime\n    expression: evt.Enriched.MarshaledTime\n  - meta: timestamp\n    expression: evt.Enriched.MarshaledTime", "path": "parsers/s02-enrich/crowdsecurity/dateparse-enrich.yaml", "stage": "s02-enrich", "version": "0.2", "versions": {"0.1": {"digest": "16b79f7ef39d0c5e71180cff559b0e2ef98983f2009b5f26d778509e897f94d4"}, "0.2": {"digest": "3f51a6c389bbf1c38f49d8824b6bffd9a265d0fa78a98af71628256019847951"}}}, "crowdsecurity/docker-logs": {"content": "#If it's docker, we are going to extract log line from it\nfilter: \"evt.Line.Labels.type == 'docker'\"\nonsuccess: next_stage\nname: crowdsecurity/docker-logs\ndescription: docker json logs parser\nstatics:\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Line.Raw, \"time\")\n  - parsed: message\n    expression: JsonExtractUnescape(evt.Line.Raw, \"log\")\n  - parsed: program\n    expression: evt.Line.Labels.program", "description": "docker json logs parser", "path": "parsers/s00-raw/crowdsecurity/docker-logs.yaml", "stage": "s00-raw", "version": "0.1", "versions": {"0.1": {"digest": "b4f5459826ae22b000239839f51c82b0358625f71416f9ef2540719eb791a746"}}}, "crowdsecurity/dovecot-logs": {"content": "#contribution by @ltsich\nonsuccess: next_stage\ndebug: false\nfilter: \"evt.Parsed.program == 'dovecot'\"\nname: crowdsecurity/dovecot-logs\ndescription: \"Parse dovecot logs\"\nnodes:\n  - grok:\n      pattern: \"%{WORD:protocol}-login: %{DATA:dovecot_login_message}: user=<%{DATA:dovecot_user}>.*, rip=%{IP:dovecot_remote_ip}, lip=%{IP:dovecot_local_ip}\"\n      apply_on: message\n  - grok:\n      pattern: \"auth-worker\\\\(%{INT}\\\\): %{WORD:dovecot_user_backend}\\\\(%{DATA:dovecot_user},%{IP:dovecot_remote_ip},?%{DATA}\\\\): (%{DATA}: )?%{DATA:dovecot_login_message}$\"\n      apply_on: message\n  - grok:\n      pattern: \"auth-worker\\\\(%{INT}\\\\): (Info: )?conn unix:auth-worker \\\\(pid=%{INT},uid=%{INT}\\\\): auth-worker<%{INT}>: %{WORD:dovecot_user_backend}\\\\(%{DATA:dovecot_user},%{IP:dovecot_remote_ip},?%{DATA}\\\\): (%{DATA}: )?%{DATA:dovecot_login_message}$\"\n      apply_on: message\n  - grok:\n      pattern: \"auth: passwd-file\\\\(%{DATA:dovecot_user},%{IP:dovecot_remote_ip}\\\\): (%{DATA}: )?%{DATA:dovecot_login_message}$\"\n      apply_on: message\nstatics:\n    - meta: log_type\n      value: dovecot_logs\n    - meta: source_ip\n      expression: \"evt.Parsed.dovecot_remote_ip\"\n    - meta: dovecot_login_result\n      expression: \"any(['Authentication failure', 'Password mismatch', 'password mismatch', 'auth failed', 'unknown user'], {evt.Parsed.dovecot_login_message contains #}) ? 'auth_failed' : ''\"\n", "description": "Parse dovecot logs", "path": "parsers/s01-parse/crowdsecurity/dovecot-logs.yaml", "stage": "s01-parse", "version": "0.8", "versions": {"0.1": {"digest": "3d30684b5d1ceea08ea743a2fa1697178d878bd87eb55e465432c000da162b42"}, "0.2": {"digest": "e1fdf543acd0fb44d6db33368c5250d4667a5c2283c8310fd0fd6f87a820276a"}, "0.3": {"digest": "58047a5c1f160cf95b7156eeaf9f17428f8bb8a070776f6ea6531c4110e2aa6e"}, "0.4": {"digest": "2fdc9cb6499f83dcda7897cb05bfbe7639938980986b32b5f37adc4b2f7594c9"}, "0.5": {"digest": "8a814d554c02f3e2ab28ee0dadd019f6bfe2830f44cb22e2206c9314cae4aa81"}, "0.6": {"digest": "26e433e5003785f182395e76d43a5b9b0fc40c7db7ae7f52c33cdf8a3b543ac9"}, "0.7": {"digest": "c9920defec4d26589457f01517eae8a3f6ba5fd5104ed3c17badbe5cf145dc64"}, "0.8": {"digest": "638a4596262469ddaff8d608921513f2e84cb5e822f67e902e0097812ff28ada"}}}, "crowdsecurity/dropbear-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'dropbear'\"\nname: crowdsecurity/dropbear-logs\ndescription: \"Parse dropbear logs\"\nnodes:\n  - grok: \n      pattern: \"Bad PAM password attempt for '%{DATA:user}' from %{IP:source_ip}:%{INT:port}\"\n      apply_on: message\n  - grok: \n      pattern: \"Login attempt for nonexistent user from %{IP:source_ip}:%{INT:port}\"\n      apply_on: message\nstatics:\n  - meta: service\n    value: dropbear\n  - meta: target_user\n    expression: evt.Parsed.user\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: log_type\n    value: ssh_failed-auth\n", "description": "Parse dropbear logs", "path": "parsers/s01-parse/crowdsecurity/dropbear-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "316bce3c9bfd35900b9a4d668189fa733a2a91d65f3725337c085ac18af51d38"}, "0.2": {"digest": "1bc1ef9778e3d75213ab3475e51107516b6b176783533f3855a9d37940828015"}}}, "crowdsecurity/endlessh-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'endlessh'\"\nname: crowdsecurity/endlessh-logs\ndescription: \"Parse Endlessh logs\"\npattern_syntax:\n  ENDLESSH_GO_DATE: \"%{MONTHNUM2}%{DAY2} %{TIME}\"\n  ENDLESSH_GO_LINE: \"I%{ENDLESSH_GO_DATE:timestamp}.*\\\\] ACCEPT host=%{IP:source_ip} \"\n  ENDLESSH_ACCEPT_V4: \"%{TIMESTAMP_ISO8601:timestamp}? ACCEPT host=(::ffff:)?%{IPV4:source_ip} \"\n  ENDLESSH_ACCEPT_V6: \"%{TIMESTAMP_ISO8601:timestamp}? ACCEPT host=%{IPV6:source_ip} \"\nnodes:\n  - grok:\n      name: \"ENDLESSH_GO_LINE\"\n      apply_on: Line.Raw\n      statics:\n        - meta: log_type\n          value: endlessh_accept\n        - target: evt.StrTimeFormat\n          value: \"0102 15:04:05\"\n  - grok:\n      name: \"ENDLESSH_ACCEPT_V4\"\n      apply_on: Line.Raw\n      statics:\n        - meta: log_type\n          value: endlessh_accept\n  - grok:\n      name: \"ENDLESSH_ACCEPT_V6\"\n      apply_on: Line.Raw\n      statics:\n        - meta: log_type\n          value: endlessh_accept\n\nstatics:\n  - meta: service\n    value: endlessh\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n", "description": "Parse Endlessh logs", "path": "parsers/s01-parse/crowdsecurity/endlessh-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "dc1affad319badddf95ad1a16bf633b6fd70ed02db0e490dc0540eef47576f2a"}, "0.2": {"digest": "ca022caa2de3a13101bea25006686a4d92ffb0e7bd558e44d215f481526632f1"}, "0.3": {"digest": "ebb816832a32b98dca8e15f402c30c1010cf5ad1ebc2b1f910f74f40fd115902"}, "0.4": {"digest": "c6ddcc2a112b82ad359243a7d8152c1caae47ddf3722b42af6be3b44f5fcb4e4"}, "0.5": {"digest": "620c6dc58cb72a142a957f3d138ba68228281c031e27fd0a1aab2f8e2f6f093b"}}}, "crowdsecurity/exchange-imap-logs": {"content": "filter: \"evt.Parsed.program == 'exchange-imap'\"\nonsuccess: next_stage\n#debug: true\nname: crowdsecurity/exchange-imap-logs\ndescription: \"Parse exchange IMAP logs\"\n#dateTime,sessionId,seqNumber,sIp,cIp,user,duration,rqsize,rpsize,command,parameters,context,puid\n#2022-06-16T09:41:21.094Z,000000000000004B,2,192.168.9.241:993,192.168.9.212:49016,foobar,34,31,31,authenticate,PLAIN,\"R=\"\"2 NO AUTHENTICATE failed.\"\";Msg=\"\"AuthFailed:LogonDenied,User: foobar\"\";ErrMsg=AuthFailed:LogonDenied\",\ngrok:\n  pattern: \"%{TIMESTAMP_ISO8601:date},%{DATA:session_id},%{INT:sequence_number},%{IPORHOST:server_ip}:%{INT:server_port},%{IPORHOST:client_ip}:%{INT:client_port},%{DATA:username},%{INT:duration},%{INT:rqsize},%{INT:rpsize},%{WORD:command},%{DATA:parameters},%{DATA}AuthFailed:LogonDenied\\\",%{DATA:puid}?\"\n  apply_on: message\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.date\n  - meta: source_ip\n    expression: evt.Parsed.client_ip\n  - meta: service\n    value: exchange\n  - meta: log_type\n    value: imap\n  - meta: sub_type\n    value: auth_fail", "description": "Parse exchange IMAP logs", "path": "parsers/s01-parse/crowdsecurity/exchange-imap-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "13a7780e3f01839342580cb6845342ad612f06b34b35f540f0e31c7509999da2"}}}, "crowdsecurity/exchange-pop-logs": {"content": "filter: \"evt.Parsed.program == 'exchange-pop'\"\nonsuccess: next_stage\n#debug: true\nname: crowdsecurity/exchange-pop-logs\ndescription: \"Parse exchange POP logs\"\n#dateTime,sessionId,seqNumber,sIp,cIp,user,duration,rqsize,rpsize,command,parameters,context,puid\n#2022-06-20T00:03:48.531Z,0000000000001E86,1,192.168.9.241:995,192.168.9.212:33526,testuser,171,21,69,auth, PLAIN,\"R=\"\"-ERR Authentication failure: unknown user name or bad password.\"\";Msg=\"\"AuthFailed:LogonDenied,User: testuser\"\";ErrMsg=AuthFailed:LogonDenied\",\ngrok:\n  pattern: \"%{TIMESTAMP_ISO8601:date},%{DATA:session_id},%{INT:sequence_number},%{IPORHOST:server_ip}:%{INT:server_port},%{IPORHOST:client_ip}:%{INT:client_port},%{DATA:username},%{INT:duration},%{INT:rqsize},%{INT:rpsize},%{WORD:command},%{DATA:parameters},%{DATA}AuthFailed:LogonDenied\\\",%{DATA:puid}?\"\n  apply_on: message\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.date\n  - meta: source_ip\n    expression: evt.Parsed.client_ip\n  - meta: service\n    value: exchange\n  - meta: log_type\n    value: pop\n  - meta: sub_type\n    value: auth_fail", "description": "Parse exchange POP logs", "path": "parsers/s01-parse/crowdsecurity/exchange-pop-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "a63be634585ef106f64781029c01f4fc8bfc77bb277a70775c73c181a467894f"}}}, "crowdsecurity/exchange-smtp-logs": {"content": "filter: \"evt.Parsed.program == 'exchange-smtp'\"\nonsuccess: next_stage\n#debug: true\nname: crowdsecurity/exchange-smtp-logs\ndescription: \"Parse exchange SMTP logs\"\n#date-time,connector-id,session-id,sequence-number,local-endpoint,remote-endpoint,event,data,context\n#2022-04-28T13:24:50.200Z,EXCHANGE-1\\Default Frontend EXCHANGE-1,08DA28A9AF671267,15,192.168.9.241:25,192.168.9.212:28657,>,535 5.7.3 Authentication unsuccessful,\ngrok:\n  pattern: \"%{TIMESTAMP_ISO8601:date},%{DATA:connector_id},%{DATA:session_id},%{INT:sequence_number},%{IPORHOST:server_ip}:%{INT:server_port},%{IPORHOST:client_ip}:%{INT:client_port},%{DATA:event},%{INT:smtp_code} [^ ]+ %{DATA:smtp_message},\"\n  apply_on: message\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.date\n  - meta: source_ip\n    expression: evt.Parsed.client_ip\n  - meta: smtp_message\n    expression: evt.Parsed.smtp_message\n  - meta: service\n    value: exchange\n  - meta: log_type\n    value: smtp\n  - meta: sub_type\n    value: auth_fail", "description": "Parse exchange SMTP logs", "path": "parsers/s01-parse/crowdsecurity/exchange-smtp-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "158fe6b19f9cc5b900de750c43522a86e68691156e489e1922b7c89e6f9300fe"}, "0.2": {"digest": "a9aff504ce013489311d4c85e6fe4f7594326e6351a7c024c93cd15950f66c09"}}}, "crowdsecurity/exim-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'exim'\"\nname: crowdsecurity/exim-logs\ndescription: \"Parse exim logs\"\npattern_syntax:\n  NO_DOUBLE_QUOTE: '[^\"]+'\n  NO_END_BRACKET: '[^\\]]+'\n  NO_END_PAR: '[^\\)]+'\n  EXIM_AUTH: '(?:dovecot_)?(?:login|plain)'\n  EXIM_SOURCE: '(?:%{HOSTNAME:source_dns} )?(?:\\(%{NO_END_PAR:source_helo}\\) )?\\[%{IP:source_ip}\\]'\n  EXIM_OPT_DATE: '(:?%{EXIM_DATE:date} )?'\n  EXIM_SOURCE_TLS: 'H=%{EXIM_SOURCE}(?::%{POSINT:source_port})? (:?X=%{NOTSPACE:tls_cipher} CV=(:?yes|no) )?'\nnodes:\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_AUTH:exim_auth} authenticator failed for %{EXIM_SOURCE}:(?:%{POSINT:source_port}:)? 535 Incorrect authentication data \\(set_id=%{NO_END_PAR:target_user}\\)'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: exim_failed_auth\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: \"JunkMail rejected - %{NOTSPACE} \\[%{NO_END_BRACKET}\\]:%{INT} is in an RBL: %{NO_DOUBLE_QUOTE:rbl_url}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: rbl_url\n          expression: evt.Parsed.rbl_url\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: Email blocked by %{HOSTNAME:rbl_url}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: rbl_url\n          expression: evt.Parsed.rbl_url\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: No Such User Here'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: exim_failed_auth\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}temporarily rejected connection in \"%{NO_DOUBLE_QUOTE:acl}\" ACL: \"Host is ratelimited \\(%{NO_END_PAR:rate_limit}\\)'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}sender verify fail for <%{EMAILADDRESS:source_user}>: The mail server does not recognize %{NOTSPACE} as a valid sender.'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: Sender verify failed'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: SMTP AUTH is required for message submission on port %{POSINT:target_port}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: source_user\n          expression: evt.Parsed.source_user\n        - meta: target_port\n          expression: evt.Parsed.target_port\nstatics:\n  - meta: service\n    value: exim\n  - target: evt.StrTime\n    expression: evt.Parsed.date\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: source_dns\n    expression: evt.Parsed.source_dns\n  - meta: source_helo\n    expression: evt.Parsed.source_helo\n  - meta: username\n    expression: evt.Parsed.target_user\n", "description": "Parse exim logs", "path": "parsers/s01-parse/crowdsecurity/exim-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "507fd358283a08ff01d7fd2a19c5aec6e9be18e37008bcd470d4af8d71b94db2"}, "0.2": {"digest": "a953bad60f49d02a3bb0b3928d26f5184414eb8f7026fd62cec7b52081ce9cd2"}, "0.3": {"digest": "0a7b71758bb626381f1f540871b1d1f4e8d2af3c88d8466ed85aed94c9e912c6"}}}, "crowdsecurity/fastly-logs": {"content": "filter: \"evt.Line.Labels.external_format == 'fastly'\"\nonsuccess: next_stage\n#debug: true\nname: crowdsecurity/fastly-logs\ndescription: fastly logs parser\npattern_syntax:\n  DOUBLE_NUM: \"[0-9]{2}\"\ngrok:\n  pattern: \"%{GREEDYDATA:fastly_timestamp}\\\\+%{DOUBLE_NUM:tz_part1}%{DOUBLE_NUM:tz_part2}\"\n  expression: JsonExtract(evt.Parsed.message, \"timestamp\")\nstatics:\n  - meta: service\n    value: http\n  - meta: log_type\n    value: http_access-log\n  - target: evt.StrTime\n    expression: evt.Parsed.fastly_timestamp + \".00+\" + evt.Parsed.tz_part1 + \":\" + evt.Parsed.tz_part2\n  - meta: source_ip\n    expression: JsonExtract(evt.Parsed.message, \"client_ip\")\n  - target: evt.Parsed.request\n    expression: JsonExtract(evt.Parsed.message, \"url\")\n  - meta: http_path\n    expression: JsonExtract(evt.Parsed.message, \"url\")\n  - parsed: verb\n    expression: JsonExtract(evt.Parsed.message, \"request_method\")\n  - meta: verb\n    expression: JsonExtract(evt.Parsed.message, \"request_method\")\n  - parsed: http_referer\n    expression: JsonExtract(evt.Parsed.message, \"request_referer\")\n  - parsed: http_user_agent\n    expression: JsonExtract(evt.Parsed.message, \"request_user_agent\")\n  - meta: http_user_agent\n    expression: JsonExtract(evt.Parsed.message, \"request_user_agent\")\n  - meta: http_status\n    expression: JsonExtract(evt.Parsed.message, \"response_status\")\n  - parsed: body_bytes_sent\n    expression: JsonExtract(evt.Parsed.message, \"response_body_size\")", "description": "fastly logs parser", "path": "parsers/s01-parse/crowdsecurity/fastly-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "8d1cbf3514b3e7f0ff31ab725befdfdd8d2393392450f407937b80456b168b5a"}, "0.2": {"digest": "b344fa353c085e6651526716184ac7b4299f62ed7fd39163884b1bf865a80230"}, "0.3": {"digest": "b8dcd888169ab2b9efed507a4d977b3bc7925f4ab834a6765899f0636733f5e5"}, "0.4": {"digest": "6e34459bf59e89b72e72598605b8c39ef91ac9fcf2b655d02ec56dfc60059ab0"}, "0.5": {"digest": "7bddb9e5d4eac138276f8e8af31b460f5fd10c0d62977746a78d8d74edda0de7"}, "0.6": {"digest": "b27ea9a9c982e9f907574456973364fc5b91ea85cebbfbf6ab43f74a51d5064d"}}}, "crowdsecurity/fortinet-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'fortinet' && ParseKV(evt.Parsed.message, evt.Unmarshaled, 'fortinet') in [nil, '']\"\nname: crowdsecurity/fortinet-logs\ndescription: \"Parse fortinet logs\"\nstatics:\n  - meta: service\n    value: fortinet\n  - meta: sub_type\n    expression: \"evt.Unmarshaled.fortinet.subtype\"\n  - target: evt.StrTime\n    expression: evt.Unmarshaled.fortinet.date + ' ' + evt.Unmarshaled.fortinet.time\n  - meta: source_ip\n    expression: \"evt.Unmarshaled.fortinet.remip\"\n  - meta: action\n    expression: \"evt.Unmarshaled.fortinet.action\"\n  - meta: tunnel_type\n    expression: \"evt.Unmarshaled.fortinet.tunneltype\"\n  - meta: reason\n    expression: \"evt.Unmarshaled.fortinet.reason\"\n  - meta: msg\n    expression: \"evt.Unmarshaled.fortinet.msg\"\n  - meta: target_user\n    expression: \"evt.Unmarshaled.fortinet.user\"", "description": "Parse fortinet logs", "path": "parsers/s01-parse/crowdsecurity/fortinet-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "10915774f7b2f95706d966fddf128c76971bba7328c798957f2e6aa51200dd0d"}}}, "crowdsecurity/freeswitch": {"content": "filter: \"evt.Parsed.program startsWith 'freeswitch'\"\nonsuccess: next_stage\n# debug: true\nname: crowdsecurity/freeswitch\ndescription: \"Parse freeswitch logs\"\npattern_syntax:\n  TIMESTAMP: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}'\nnodes:\n- grok:\n    pattern: '%{TIMESTAMP:timestamp}.*\\[WARNING\\] sofia_reg.c:\\d+ %{GREEDYDATA:parsedmessage}'\n    apply_on: message\n  nodes:\n  - grok:\n      pattern: \"Can't find user \\\\[.*@%{IPORHOST}\\\\] from %{IPORHOST:remote_ip}\"\n      apply_on: parsedmessage\n    onsuccess: next_stage\n    statics:\n      - meta: sub_type\n        value: user_enumeration\n  - grok:\n      pattern: \"IP %{IPORHOST:remote_ip} Rejected by register acl\"\n      apply_on: parsedmessage\n    onsuccess: next_stage\n    statics:\n      - meta: sub_type\n        value: acl_reject\n  - grok:\n      pattern: \"SIP auth failure \\\\((REGISTER|INVITE)\\\\) on sofia profile '.*' for \\\\[.*\\\\] from ip %{IPORHOST:remote_ip}\"\n      apply_on: parsedmessage\n    onsuccess: next_stage\n    statics:\n      - meta: sub_type\n        value: auth_failure\nstatics:\n  - meta: service\n    value: freeswitch\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - meta: source_ip\n    expression: evt.Parsed.remote_ip", "description": "Parse freeswitch logs", "path": "parsers/s01-parse/crowdsecurity/freeswitch.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "49dd62c738ceda31de61fbf5c4ed38e348a0c33a78bcc6090a4362964570f237"}}}, "crowdsecurity/geoip-enrich": {"content": "filter: |\n  let ipv6Check = IsIPV6(evt.Meta.source_ip);\n  \"source_ip\" in evt.Meta &&\n  (\n    not ipv6Check &&\n    not (IpInRange(evt.Meta.source_ip, \"127.0.0.0/8\") || IpInRange(evt.Meta.source_ip, \"192.168.0.0/16\") || IpInRange(evt.Meta.source_ip, \"172.16.0.0/12\") || IpInRange(evt.Meta.source_ip, \"10.0.0.0/8\"))\n  ) ||\n  (\n    ipv6Check &&\n    not (IpInRange(evt.Meta.source_ip, \"::1/128\") || IpInRange(evt.Meta.source_ip, \"fd00::/8\") || IpInRange(evt.Meta.source_ip, \"fc00::/7\"))\n  )\n\nname: crowdsecurity/geoip-enrich\ndescription: \"Populate event with geoloc info : as, country, coords, source range.\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/mmdb_update/GeoLite2-City.mmdb\n    dest_file: GeoLite2-City.mmdb\n  - source_url: https://hub-data.crowdsec.net/mmdb_update/GeoLite2-ASN.mmdb\n    dest_file: GeoLite2-ASN.mmdb\nstatics:\n  - method: GeoIpCity\n    expression: evt.Meta.source_ip\n  - meta: IsoCode\n    expression: evt.Enriched.IsoCode\n  - meta: IsInEU\n    expression: evt.Enriched.IsInEU\n  - meta: GeoCoords\n    expression: evt.Enriched.GeoCoords\n  - method: GeoIpASN\n    expression: evt.Meta.source_ip\n  - meta: ASNNumber\n    expression: evt.Enriched.ASNNumber\n  - meta: ASNOrg\n    expression: evt.Enriched.ASNOrg\n  - method: IpToRange\n    expression: evt.Meta.source_ip\n  - meta: SourceRange\n    expression: evt.Enriched.SourceRange\n", "description": "Populate event with geoloc info : as, country, coords, source range.", "path": "parsers/s02-enrich/crowdsecurity/geoip-enrich.yaml", "stage": "s02-enrich", "version": "0.5", "versions": {"0.1": {"digest": "c0718adfc71ad462ad90485ad5c490e5de0e54d8af425bff552994e114443ab6"}, "0.2": {"digest": "ab327e6044a32de7d2f3780cbc8e0c4af0c11716f353023d2dc7b986571bb765"}, "0.3": {"digest": "91e2f0d42c0fd57198485ce0d9caa4d53c7a99756e202cb4221b8151ec8aef1a"}, "0.4": {"digest": "09ccb22bbb74ca4982954f233f53e6cd005e09f27e252804e3a0b3da0389bf86"}, "0.5": {"digest": "56ec28d85c75e55af349b8165f2d494534e2f4144f27a985ece316e8ac5303ae"}}}, "crowdsecurity/haproxy-logs": {"content": "filter: \"evt.Parsed.program startsWith 'haproxy'\"\nonsuccess: next_stage\nname: crowdsecurity/haproxy-logs\ndescription: \"Parse haproxy http logs\"\ngrok:\n  pattern: '%{IP:client_ip}:%{INT:client_port} \\[%{HAPROXYDATE:accept_date}\\] %{NOTSPACE:frontend_name} %{NOTSPACE:backend_name}/%{NOTSPACE:server_name} %{INT:time_request}/%{INT:time_queue}/%{INT:time_backend_connect}/%{INT:time_backend_response}/%{NOTSPACE:time_duration} %{INT:http_status_code} %{NOTSPACE:bytes_read} %{DATA:captured_request_cookie} %{DATA:captured_response_cookie} %{NOTSPACE:termination_state} %{INT:actconn}/%{INT:feconn}/%{INT:beconn}/%{INT:srvconn}/%{NOTSPACE:retries} %{INT:srv_queue}/%{INT:backend_queue} (\\{%{HAPROXYCAPTUREDREQUESTHEADERS}\\})?( )?(\\{%{HAPROXYCAPTUREDRESPONSEHEADERS}\\})?( )?\"(<BADREQ>|(%{WORD:http_verb} (%{URIPROTO:http_proto}://)?(?:%{USER:http_user}(?::[^@]*)?@)?(?:%{URIHOST:http_host})?(?:%{URIPATHPARAM:http_request})?( HTTP/%{NUMBER:http_version})?))?\"'\n  apply_on: message\nstatics:\n  - meta: log_type\n    value: http_access-log\n    #HAPROXYDATE format is unknown to dateparse, let convert it to a format we know to parse\n  - target: evt.StrTime\n    expression: evt.Parsed.haproxy_monthday + '/' + evt.Parsed.haproxy_month   + '/' + evt.Parsed.haproxy_year  + ':' +   evt.Parsed.haproxy_hour + ':' + evt.Parsed.haproxy_minute + ':' +  evt.Parsed.haproxy_second[0:2] + ' -0000'\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: evt.Parsed.client_ip\n  - meta: http_path\n    expression: evt.Parsed.http_request\n  - meta: http_status\n    expression: evt.Parsed.http_status_code\n  - meta: http_verb\n    expression: evt.Parsed.http_verb\n  - parsed: request\n    expression: evt.Parsed.http_request\n  - parsed: verb\n    expression: evt.Parsed.http_verb\n", "description": "Parse haproxy http logs", "path": "parsers/s01-parse/crowdsecurity/haproxy-logs.yaml", "stage": "s01-parse", "version": "0.7", "versions": {"0.1": {"digest": "a2bca50192c0623d8d553882fbac0f6fa1d6dc824804aa0a5ca7559ed65321f4"}, "0.2": {"digest": "2257440ad5cba6a7c48c7e57a0d30a97b38656927fa18a0f7289d05042035cb4"}, "0.3": {"digest": "e40b4e552cf417be4bd57f3cb452af057a8872dc16a35a51eb3bb38726bf6dd6"}, "0.4": {"digest": "029545297f7d2beab8f98ad471ef15fd6165e86e645aface54cb9d8b522ab08e"}, "0.5": {"digest": "6f69723dc68203b323f67e4d35490a08564806dcd9a37f50d42cf5f8e04e6143"}, "0.6": {"digest": "57a1868b20758955034ef5005f136535403991f0959a44d5ccbdeb87dab901e2"}, "0.7": {"digest": "8bcca8501879ff7ef1d76c40896d5c68201283b79475aba45fe733c31bafa901"}}}, "crowdsecurity/home-assistant-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/home-assistant-logs\ndescription: \"Parse Home Assistant logs\"\nfilter: \"evt.Parsed.program == 'home-assistant' or evt.Parsed.program endsWith 'homeassistant'\"\npattern_syntax:\n  TIMESTAMP: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}'\nnodes:\n  - grok:\n      pattern: \"%{TIMESTAMP:time} WARNING \\\\(%{DATA:threadName}\\\\) \\\\[homeassistant.components.http.ban\\\\] Login attempt or request with invalid authentication from %{DATA:source_rdns} \\\\(%{IPORHOST:source_ip}\\\\). \\\\(%{GREEDYDATA:http_user_agent}\\\\)\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: home-assistant_failed_auth\n  - grok:\n      pattern: \"%{TIMESTAMP:time} WARNING \\\\(%{DATA:threadName}\\\\) \\\\[homeassistant.components.http.ban\\\\] Login attempt or request with invalid authentication from %{DATA:source_rdns} \\\\(%{IPORHOST:source_ip}\\\\). Requested URL: '%{GREEDYDATA:url}'. \\\\(%{GREEDYDATA:http_user_agent}\\\\)\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: home-assistant_failed_auth\nstatics:\n  - target: StrTime\n    expression: \"evt.Parsed.time\"\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: source_rdns\n    expression: \"evt.Parsed.source_rdns\"\n", "description": "Parse Home Assistant logs", "path": "parsers/s01-parse/crowdsecurity/home-assistant-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "4963cadd8ae936d9104861b383d215a94aed622b1db481a3fe79ea9e7db359bf"}, "0.2": {"digest": "aee629922e77d2bc2f2c1cd5ec3b646dcafe6c6856c8195b4340584c29d23ef2"}, "0.3": {"digest": "7382fc2e6129877aa66f5728d8c93c1007d85e1976d7412140581c97a368d940"}, "0.4": {"digest": "71208b25e33cef30e88cdf0c701b92460c37d8c140be2e769856a8a6292669c5"}, "0.5": {"digest": "8d6c5ea97042f540faac45456240bc277257e1fdb331cc7cc7d9590804ffcb94"}}}, "crowdsecurity/http-logs": {"content": "filter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\ndescription: \"Parse more Specifically HTTP logs, such as HTTP Code, HTTP path, HTTP args and if its a static ressource\"\nname: crowdsecurity/http-logs\npattern_syntax:\n  DIR: \"^.*/\"\n  FILE: \"[^/].*?\"\n  EXT: \"\\\\.[^.]*$|$\"\nnodes:\n  - statics:\n     - parsed: \"impact_completion\"\n       # the value of a field can as well be determined as the result of an expression\n       expression: \"evt.Meta.http_status in ['404', '403', '502'] ? 'false' : 'true'\"\n     - target: evt.Parsed.static_ressource\n       value: 'false'\n  # let's split the path?query if possible\n  - grok:\n      pattern: \"^%{GREEDYDATA:request}\\\\?%{GREEDYDATA:http_args}$\"\n      apply_on: request\n  # this is another node, with its own pattern_syntax\n  - #debug: true\n    grok:\n      pattern: \"%{DIR:file_dir}(%{FILE:file_frag}%{EXT:file_ext})?\"\n      apply_on: request\n      statics:\n        - meta: http_path\n          expression: \"evt.Parsed.http_path\"\n          # meta af\n        - meta: http_args_len\n          expression: \"len(evt.Parsed.http_args)\"\n        - parsed: file_name\n          expression: evt.Parsed.file_frag + evt.Parsed.file_ext\n        - parsed: static_ressource\n          expression: \"Upper(evt.Parsed.file_ext) in ['.JPG', '.CSS', '.JS', '.JPEG', '.PNG', '.SVG', '.MAP', '.ICO', '.OTF', '.GIF', '.MP3', '.MP4', '.WOFF', '.WOFF2', '.TTF', '.OTF', '.EOT', '.WEBP', '.WAV', '.GZ', '.BROTLI', '.BVR', '.TS', '.BMP', '.AVIF', '.MJS'] ? 'true' : 'false'\"\n", "description": "Parse more Specifically HTTP logs, such as HTTP Code, HTTP path, HTTP args and if its a static ressource", "path": "parsers/s02-enrich/crowdsecurity/http-logs.yaml", "stage": "s02-enrich", "version": "1.3", "versions": {"0.1": {"digest": "d11c01b85927959d1619735c6ac09f260008211edcbf496db0d01b0bd93c5be2"}, "0.2": {"digest": "1274d4a8afd04f96fa0adb03f661ba4a7771cd0be84cf33d1b405881d07c5f0e"}, "0.3": {"digest": "26d3a09d652bd0024ceb1b51a864183367d7391fa33c87db5274c1e47c072999"}, "0.4": {"digest": "ba77a9a5e6b979b9e8d327946aea0a42eed1f035766b80aab2c2a43fb7cf3c13"}, "0.5": {"digest": "132938d05f1af484c29088b588aaa86a329a2e677842e17c255295fb47532990"}, "0.6": {"digest": "57d5b2535d46a2fa6a738917d9e2e64924f5e0090d3c75f2a7c44ad8db36f49c"}, "0.7": {"digest": "c934455276a4ebea1d40f3a80fb960a2f309a06a523b7750c67c374f577f53cf"}, "0.8": {"digest": "7016a32564d1eb6499d8cc9de1591886c6313acb356e513b67da45f9a7386267"}, "0.9": {"digest": "79589c27fe75a013f3ebc4c9f6940c3cd0ee376abcd1f863bfa38e1ca237fc10"}, "1.0": {"digest": "b3e83ce9bfe4cf145fd8d2d03cf68ac696c353e36c825e98f1fa031afaafbae3"}, "1.1": {"digest": "0a1788e43609b451d1a97b009107a1fe242fa21a2926922a6080636b2a2e56d6"}, "1.2": {"digest": "d0a95d6cf41e1ae10d0dd604b6bca9c72ab9e4709950b1816166acd630a18a9e"}, "1.3": {"digest": "ee8348d8d8dc888e186544625accb00c242c44ed50d43823e352abe60103a3d9"}}}, "crowdsecurity/iis-logs": {"content": "filter: \"evt.Parsed.program == 'iis'\"\nonsuccess: next_stage\nname: crowdsecurity/iis-logs\ndescription: \"Parse IIS access logs\"\nnodes:\n  #W3C logs can come from the event log\n  - filter: \"evt.Meta.datasource_type == 'wineventlog' and evt.Parsed.EventID == '6200'\"\n    statics:\n        - meta: source_ip\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='c-ip']\") \n        - meta: http_status\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='sc-status']\")\n        - parsed: http_path\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='cs-uri-stem']\")\n        - meta: http_path\n          expression: evt.Parsed.http_path\n        - target: evt.Parsed.http_args\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='cs-uri-query']\")\n        - parsed: verb\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='cs-method']\")\n        - meta: http_verb\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='cs-method']\")\n        - meta: http_user_agent\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='csUser-Agent']\")\n        - meta: target_fqdn\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='s-sitename']\") #not a FQDN, but close enough ?\n        - target: evt.StrTime\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='date']\") + \" \" + XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='time']\")\n        - target: evt.Parsed.request\n          expression: evt.Meta.http_path + '?' + evt.Parsed.http_args\n  - filter: \"evt.Parsed.datasource_type != 'wineventlog'\"\n    grok:\n      pattern: \"%{TIMESTAMP_ISO8601:date} %{IP:server_ip} %{WORD:http_method} %{DATA:http_path} %{DATA:http_args} %{INT} %{DATA:remote_user} %{IP:client_ip} %{DATA:user_agent} %{DATA:referer} %{INT:status} %{INT:substatus} %{INT:win32_status} %{INT:duration}\"\n      apply_on: message\n    statics:\n      - target: evt.StrTime\n        expression: evt.Parsed.date\n      - meta: source_ip\n        expression: evt.Parsed.client_ip\n      - meta: http_status\n        expression: evt.Parsed.status\n      - meta: http_path\n        expression: evt.Parsed.http_path\n      - meta: http_user_agent\n        expression: evt.Parsed.user_agent\n      - meta: http_verb\n        expression: evt.Parsed.method\n      - parsed: verb\n        expression: evt.Parsed.method\n      - target: evt.Parsed.request\n        expression: evt.Meta.http_path + '?' + evt.Parsed.http_args\n\nstatics:\n  - meta: service\n    value: http\n  - meta: log_type\n    value: http_access-log", "description": "Parse IIS access logs", "path": "parsers/s01-parse/crowdsecurity/iis-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "b7a80af9ef0d2dc28939cde8eb773c578c6526b0d09737ca3b5be1821b1d83b6"}, "0.2": {"digest": "1bf7cff86c0f408a93e661eb8c5ef2959c294a737ffcb800d36c3b03c8358c78"}, "0.3": {"digest": "3f573bae5c2a602dfc51e753bfcde0e51f3d76ebdba9a795c1126b66f2045087"}, "0.4": {"digest": "766ad2b89ad05737339cb9364572f2a48ba629b2f13791e7ee5491f8f7601ff7"}}}, "crowdsecurity/iptables-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'kernel' and evt.Parsed.message contains 'IN=' and not (evt.Parsed.message contains 'ACCEPT')\"\nname: crowdsecurity/iptables-logs\ndescription: \"Parse iptables drop logs\"\nstatics:\n  - parsed: unused #this is never used setting to random var\n    expression: ParseKV(evt.Parsed.message, evt.Unmarshaled, \"iptables\")\n  - meta: service\n    expression: Lower(evt.Unmarshaled.iptables.PROTO)\n  - meta: log_type\n    expression: 'evt.Meta.service in [\"tcp\", \"udp\"] && evt.Unmarshaled.iptables.OUT == \"\" ? \"iptables_drop\" : \"\"'\n  - meta: icmp_type\n    expression: evt.Unmarshaled.iptables.TYPE\n  - meta: icmp_code\n    expression: evt.Unmarshaled.iptables.CODE\n  - meta: source_ip\n    expression: \"evt.Unmarshaled.iptables.SRC\"\n## For backporting reason all previous variables will be reparsed out to the parsed object\n  - parsed: dst_port\n    expression: evt.Unmarshaled.iptables.DPT\n  - parsed: int_eth\n    expression: evt.Unmarshaled.iptables.IN\n  - parsed: src_ip\n    expression: evt.Unmarshaled.iptables.SRC\n  - parsed: dst_ip\n    expression: evt.Unmarshaled.iptables.DST\n  - parsed: length\n    expression: evt.Unmarshaled.iptables.LEN\n  - parsed: proto\n    expression: evt.Unmarshaled.iptables.PROTO\n  - parsed: src_port\n    expression: evt.Unmarshaled.iptables.SPT\n", "description": "Parse iptables drop logs", "path": "parsers/s01-parse/crowdsecurity/iptables-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "00076ea5d8fa862aeb6bb48890d84d9e2763bfc332a635eab884c0a3069fcccd"}, "0.2": {"digest": "5b9e9e5bc1fc9a6ab923a7e08f0c5e4e16e5702f09b5142245694f52c45348f5"}, "0.3": {"digest": "32c82e2b47e825f63e3536bd38bd153019139c8b7f57b8b005aa6d86f88c62f7"}, "0.4": {"digest": "da4ae251f648770b336f709fbae8bcbaae86963cb3d4ff2a6f7545f098c4f65d"}, "0.5": {"digest": "398c9029f54160a021e2a65ce649ed4c9673549321f9b2b72aca9cc548a7706f"}}}, "crowdsecurity/jellyfin-whitelist": {"content": "name: crowdsecurity/jellyfin-whitelist\ndescription: \"Whitelist events from jellyfin\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"Jellyfin whitelist\"\n  expression:\n   - evt.Meta.http_status == '403' && evt.Meta.http_verb == 'POST' && evt.Meta.http_path contains \"/Sessions/Playing/Progress\" # When playing videos\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '(?i)^/items/.+?/images/(thumb|primary)' # when browsing on Roku or Swiftfin Clients\n", "description": "Whitelist events from jellyfin", "path": "parsers/s02-enrich/crowdsecurity/jellyfin-whitelist.yaml", "stage": "s02-enrich", "version": "0.2", "versions": {"0.1": {"digest": "aa1cf7cfac48914a41ca95fea4d1aa3b885b27d5359b2ecd39c9a22d21d65c47"}, "0.2": {"digest": "a403cc45906ec71a8c287a642218605fc45a44c0a1afe3d00c96a9aa728409b7"}}}, "crowdsecurity/k8s-audit": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'k8s-audit'\"\nname: crowdsecurity/k8s-audit\ndescription: \"Parse Kubernetes audit logs\"\n#Unfortunately, k8s has slightly different JSON when using a webhook or a file (first letter of the keys is capitalized when using the webhook).\n#Explicitly handle the webhook datasource, and assume file-like format for everything else (it could be coming from the syslog datasource for example)\nnodes:\n  - filter: evt.Meta.datasource_type == \"k8s-audit\"\n    statics:\n    - parsed: k8s_parsed\n      expression: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"k8s_audit\")\n    - meta: user\n      expression: evt.Unmarshaled.k8s_audit.User.username\n    - meta: source_ip\n      expression: evt.Unmarshaled.k8s_audit.SourceIPs[0]\n    - meta: namespace\n      expression: evt.Unmarshaled.k8s_audit.ObjectRef?.Namespace\n    - meta: resource_name\n      expression: evt.Unmarshaled.k8s_audit.ObjectRef?.Name\n    - meta: kind\n      expression: evt.Unmarshaled.k8s_audit.RequestObject?.kind\n    - meta: log_type\n      value: k8s-audit\n    - target: evt.StrTime\n      expression: evt.Unmarshaled.k8s_audit.RequestReceivedTimestamp\n  - filter: evt.Meta.datasource_type != \"k8s-audit\"\n    statics:\n    - parsed: k8s_parsed\n      expression: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"k8s_audit\")\n    - meta: user\n      expression: evt.Unmarshaled.k8s_audit.user.username\n    - meta: source_ip\n      expression: evt.Unmarshaled.k8s_audit.sourceIPs[0]\n    - meta: namespace\n      expression: evt.Unmarshaled.k8s_audit.objectRef?.namespace\n    - meta: resource_name\n      expression: evt.Unmarshaled.k8s_audit.objectRef?.name\n    - meta: kind\n      expression: evt.Unmarshaled.k8s_audit.requestObject?.kind\n    - meta: log_type\n      value: k8s-audit\n    - target: evt.StrTime\n      expression: evt.Unmarshaled.k8s_audit.requestReceivedTimestamp\n", "description": "Parse Kubernetes audit logs", "path": "parsers/s01-parse/crowdsecurity/k8s-audit.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "f6eacd85ee1d51aadda5394edda6a4b0a8672418ee64440926cfab554140ef26"}, "0.2": {"digest": "e76674c085b19f6be7c1c90e15451d3252a38edc0ae554e47446986699031e84"}, "0.3": {"digest": "c5b9c5e3e29019ca67a8e7323b2dea49e77edee4a9c2c8af5c4ca91d2a59395c"}, "0.4": {"digest": "f8e939f05bb591a0770d909440f65bcc1a05e58e96036f06b0fce535aac3af50"}}}, "crowdsecurity/kasm-logs": {"content": "filter: \"evt.Parsed.program startsWith 'kasm'\"\nonsuccess: next_stage\n# debug: true\nname: crowdsecurity/kasm-logs\ndescription: \"Parse kasm logs\"\nnodes:\n  - grok:\n      pattern: '%{IPORHOST:remote_ip}(,%{GREEDYDATA:proxies})?'\n      expression: JsonExtract(evt.Line.Raw, \"request_ip\")\nstatics:\n  - meta: service\n    value: kasm\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Line.Raw, \"timestamp\")\n  - meta: metric_name\n    expression: JsonExtract(evt.Line.Raw, \"metric_name\")\n  - meta: source_ip\n    expression: evt.Parsed.remote_ip\n  - meta: http_user_agent\n    expression: JsonExtract(evt.Line.Raw, \"user_agent\")\n  - meta: http_path\n    expression: JsonExtract(evt.Line.Raw, \"path_info\")", "description": "Parse kasm logs", "path": "parsers/s01-parse/crowdsecurity/kasm-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "cda64d5195d7e0837c64600d2494a5a60f8d8d8967899b730ee32f737a79d9bb"}}}, "crowdsecurity/laurel-logs": {"content": "onsuccess: next_stage\n#debug: true\nname: crowdsecurity/laurel-logs\ndescription: \"Parse laurel json logs\"\n## 1.5.2 returns \"\" , 1.5.3 returns nil\nfilter: evt.Parsed.program == 'laurel'\npattern_syntax:\n  FLOAT: '[0-9\\.]+'\nnodes:\n  - filter: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"laurel\") in [\"\", nil]\n    grok:\n      pattern: '%{FLOAT:timestamp}:%{INT:event_inc_id}'\n      expression: evt.Unmarshaled.laurel.ID\n    nodes:\n      - filter: evt.Unmarshaled.laurel.SYSCALL != nil\n        statics:\n          - meta: service\n            value: laurel\n          - meta: log_type\n            expression: evt.Unmarshaled.laurel.SYSCALL.SYSCALL\n          - target: evt.StrTime\n            expression: evt.Parsed.timestamp\n          - meta: exe\n            expression: evt.Unmarshaled.laurel.SYSCALL.exe\n          - meta: uid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.uid)\n          - meta: auditd_eventid\n            expression: evt.Parsed.event_inc_id\n          - meta: parent_progname\n            expression: evt.Unmarshaled.laurel.SYSCALL.PPID.exe\n          - meta: ppid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.ppid)\n          - meta: auid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.auid)\n          - meta: euid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.euid)\n          - meta: tty\n            expression: evt.Unmarshaled.laurel.SYSCALL.tty\n          - meta: subj\n            expression: evt.Unmarshaled.laurel.SYSCALL.subj\n          - meta: pid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.pid)\n          - meta: comm\n            expression: evt.Unmarshaled.laurel.SYSCALL.comm\n          - meta: sig\n            expression: evt.Unmarshaled.laurel.SYSCALL.sig\n          - meta: res\n            expression: evt.Unmarshaled.laurel.SYSCALL.res\n          - meta: str_UID\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.UID)\n          - meta: str_GID\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.GID)\n      - filter: evt.Unmarshaled.laurel.ANOM_ABEND != nil\n        statics:\n          - meta: service\n            value: laurel\n          - meta: log_type\n            value: anom_abend\n          - meta: exe\n            expression: evt.Unmarshaled.laurel.ANOM_ABEND[0].exe\n          - meta: uid\n            expression: int(evt.Unmarshaled.laurel.ANOM_ABEND[0].uid)\n          - meta: auditd_eventid\n            expression: evt.Parsed.event_inc_id\n          - meta: pid\n            expression: int(evt.Unmarshaled.laurel.ANOM_ABEND[0].pid)\n          - meta: auid\n            expression: int(evt.Unmarshaled.laurel.ANOM_ABEND[0].auid)\n          - meta: sig\n            expression: Sprintf(\"%v\", int(evt.Unmarshaled.laurel.ANOM_ABEND[0].sig))\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse laurel json logs", "path": "parsers/s01-parse/crowdsecurity/laurel-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "95eab37bd97b342940a3ca7217ee89c6b24b744ddf59e40346a28b43480db60f"}, "0.2": {"digest": "3f8eca354cab4b0aa1b4ab35fbb44c110d6f170f05119dff5d03bfcee8daf124"}}}, "crowdsecurity/litespeed-logs": {"content": "filter: \"evt.Parsed.program == 'litespeed'\"\nonsuccess: next_stage\nname: crowdsecurity/litespeed-logs\ndescription: \"Parse litespeed access and error logs\"\nnodes:\n  - grok:\n      #access log\n      pattern: '%{IPORHOST:remote_addr} - (%{NGUSER:remote_user})? \\[%{HTTPDATE:time_local}\\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      #user not found or bad password for HTTP auth\n      pattern: \"%{TIMESTAMP_ISO8601:time} \\\\[%{DATA:log_level}\\\\] \\\\[%{NONNEGINT:pid}\\\\] \\\\[%{IPORHOST:remote_addr}:%{DATA:misc}#%{DATA:vhost}\\\\] User '%{NGUSER:username}' failed to authenticate\\\\.\"\n      apply_on: message\n      statics:\n        - meta: sub_type\n          value: \"auth_fail\"\n        - meta: username\n          expression: evt.Parsed.username\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n  - grok:\n      #admin UI auth fail\n      pattern: \"%{TIMESTAMP_ISO8601:time} \\\\[%{DATA:log_level}\\\\] \\\\[%{NONNEGINT:pid}\\\\] \\\\[%{IPORHOST:remote_addr}:%{DATA:misc}#%{DATA:vhost}\\\\] \\\\[%{WORD}\\\\] \\\\[%{DATA}\\\\] Failed Login Attempt - username:%{DATA:username} ip:%{IP:client_ip} url:%{DATA:url}\"\n      apply_on: message\n      statics:\n        - meta: sub_type\n          value: \"litespeed_admin_auth_fail\"\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n        - meta: username\n          expression: evt.Parsed.username\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: target_fqdn\n    expression: \"evt.Parsed.target_fqdn\"\n", "description": "Parse litespeed access and error logs", "path": "parsers/s01-parse/crowdsecurity/litespeed-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "868cf099d57ea7a1994961b8d65e5abce01e797517bb97959c7e68e52dcb0b6f"}}}, "crowdsecurity/magento-extension-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'magento-extension'\"\nname: crowdsecurity/magento-extension-logs\ndescription: \"Parse CrowdSec Magento extension logs\"\npattern_syntax:\n  HEADER: '\\[%{DATA:timestamp}\\] crowdsec-events\\.[^:]+:  %{GREEDYDATA:line} \\[\\]'\nnodes:\n  - grok:\n      name: \"HEADER\"\n      apply_on: message\n      statics:\n        - target: StrTime\n          expression: evt.Parsed.timestamp\nstatics:\n    - meta: service\n      value: magento\n    - meta: log_type\n      expression: JsonExtract(evt.Parsed.line, \"type\")\n    - meta: source_ip\n      expression: JsonExtract(evt.Parsed.line, \"ip\")\n    - meta: x_forwarded_for\n      expression: JsonExtract(evt.Parsed.line, \"x-forwarded-for-ip\")\n    - meta: bouncer_agent\n      expression: JsonExtract(evt.Parsed.line, \"bouncer_agent\")\n    - meta: customer_id\n      expression: JsonExtract(evt.Parsed.line, \"customer_id\")\n    - meta: payment_method\n      expression: JsonExtract(evt.Parsed.line, \"payment_method\")\n    - meta: order_id\n      expression: JsonExtract(evt.Parsed.line, \"order_id\")\n    - meta: product_id\n      expression: JsonExtract(evt.Parsed.line, \"product_id\")\n    - meta: quote_id\n      expression: JsonExtract(evt.Parsed.line, \"quote_id\")", "description": "Parse CrowdSec Magento extension logs", "path": "parsers/s01-parse/crowdsecurity/magento-extension-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "14462ab2a582ecf9be26402de41b9a253e997b93a39c1aa1cfb22abf3740f808"}}}, "crowdsecurity/mariadb-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/mariadb-logs\ndescription: \"Parse MariaDB logs\"\nfilter: \"evt.Parsed.program startsWith 'mariadb'\"\npattern_syntax:\n  LONG_DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\n  SHORT_DATE_YMD: \"%{YEAR:year}%{MONTHNUM2:month}%{MONTHDAY:day}\"\n  PASSWORD_SYNTAX: \" ?%{TIME:time} (%{NUMBER:thread_id} )?\\\\[Warning\\\\] Access denied for user '%{DATA:user}'@'%{IP:source_ip}' \\\\(using password: %{WORD:using_password}\\\\)\"\nnodes:\n  - grok:\n      pattern: \"%{LONG_DATE_YMD:date} %{PASSWORD_SYNTAX}\"\n      apply_on: message\n    onsuccess: next_stage\n  - grok:\n      pattern: \"%{SHORT_DATE_YMD:date} %{PASSWORD_SYNTAX}\"\n      apply_on: message\n      statics:\n        - target: evt.StrTimeFormat\n          value: \"060102 15:04:05\"\n    onsuccess: next_stage\nstatics:\n  - target: evt.StrTime\n    expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n  - meta: log_type\n    value: \"mariadb_failed_auth\"\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: user\n    expression: \"evt.Parsed.user\"\n", "description": "Parse MariaDB logs", "path": "parsers/s01-parse/crowdsecurity/mariadb-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "98468759d771f3db2dfdf795ac2794c9b56c01d6d46e98a1a81913309bedc74f"}, "0.2": {"digest": "f41ce905ce3bd2034f375af20547930c913260792a82e8426aa8ab3b146cdba0"}, "0.3": {"digest": "de1d309812318018d96a22970c1d3a62e60f4c5807cd845496a09aa72fd18919"}, "0.4": {"digest": "cb1a53a0c8e563401a4c89db5217e73178c6760100c37146b748489823b7778c"}}}, "crowdsecurity/modsecurity": {"content": "onsuccess: next_stage\nfilter: evt.Parsed.program == 'modsecurity'\nname: crowdsecurity/modsecurity\n#debug: true\ndescription: A parser for modsecurity WAF\npattern_syntax:\n  APACHEERRORPREFIX2: \"\\\\[%{APACHEERRORTIME:timestamp}\\\\] \\\\[%{NOTSPACE:apacheseverity}\\\\] (\\\\[pid %{INT}(:tid %{INT})?\\\\] )?\\\\[(client|remote) %{IPORHOST:sourcehost}(:%{INT:source_port})?\\\\] (\\\\[client %{IPORHOST}\\\\])?\"\n  NGINXERRORPREFIX: \"%{NGINXERRTIME:time} \\\\[%{LOGLEVEL:loglevel}\\\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\\\*%{NONNEGINT:cid} )?(\\\\[client %{IPORHOST}\\\\] )?\"\n  NGINXERRORSUFFIX: \"client: %{IPORHOST:remote_addr}, server: %{DATA:target_fqdn}, request: \\\"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\\\"(, host: \\\"%{IPORHOST}(:%{INT})?\\\")?\"\n  MODSECNGINXPREFIX: \"%{NGINXERRORPREFIX}ModSecurity: (%{NOTSPACE:modsecseverity}\\\\. )?%{GREEDYDATA:modsecmessage}\"\n  MODSECPREFIX2: \"%{APACHEERRORPREFIX2} ModSecurity: (%{NOTSPACE:modsecseverity}\\\\. )?%{GREEDYDATA:modsecmessage}\"\n  MODSECRULEFILE2: \"\\\\[file \\\"%{DATA:rulefile}\\\"\\\\]\"\n  MODSECRULELINE2: \"\\\\[line \\\"%{DATA:ruleline}\\\"\\\\]\"\n  MODSECMATCHOFFSET2: \"\\\\[offset \\\"%{DATA:matchoffset}\\\"\\\\]\"\n  MODSECRULEID2: \"\\\\[id \\\"%{DATA:ruleid}\\\"\\\\]\"\n  MODSECRULEREV2: \"\\\\[rev \\\"%{DATA:rulerev}\\\"\\\\]\"\n  MODSECRULEMSG2: \"\\\\[msg \\\"%{DATA:rulemessage}\\\"\\\\]\"\n  MODSECRULEDATA2: \"\\\\[data \\\"%{DATA:ruledata}\\\"\\\\]\"\n  MODSECRULESEVERITY2: \"\\\\[severity \\\"%{DATA:ruleseverity}\\\"\\\\]\"\n  MODSECRULEMATURITY: \"\\\\[maturity \\\"%{DATA:maturity}\\\"\\\\]\"\n  MODSECRULEACCURACY: \"\\\\[accuracy \\\"%{DATA:accuracy}\\\"\\\\]\"\n  MODSECRULEVERS2: \"\\\\[ver \\\"%{DATA:version}\\\"\\\\]\"\n  MODSECRULETAGS2: \"(?:\\\\[tag \\\"%{DATA:ruletag0}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag1}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag2}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag3}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag4}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag5}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag6}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag7}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag8}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag9}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA}\\\"\\\\] )*\"\n  MODSECHOSTNAME2: \"\\\\[hostname ['\\\"]%{DATA:targethost}[\\\"']\\\\]\"\n  MODSECURI2: \"\\\\[uri [\\\"']%{DATA:targeturi}[\\\"']\\\\]\"\n  MODSECUID2: \"\\\\[unique_id \\\"%{DATA:uniqueid}\\\"\\\\]\"\n  MODSECREF2: \"\\\\[ref \\\"%{DATA:ref}\\\"\\\\]\"\n  MODSECAPACHEERROR2: \"%{MODSECPREFIX2} %{MODSECRULEFILE2} %{MODSECRULELINE2} (?:%{MODSECMATCHOFFSET2} )?(?:%{MODSECRULEID2} )?(?:%{MODSECRULEREV2} )?(?:%{MODSECRULEMSG2} )?(?:%{MODSECRULEDATA2} )?(?:%{MODSECRULESEVERITY2} )?(?:%{MODSECRULEVERS2} )?%{MODSECRULETAGS2}%{MODSECHOSTNAME2} %{MODSECURI2} %{MODSECUID2}\"\n  MODSECNGINXERROR: \"%{MODSECNGINXPREFIX} %{MODSECRULEFILE2} %{MODSECRULELINE2} (?:%{MODSECMATCHOFFSET2} )?(?:%{MODSECRULEID2} )?(?:%{MODSECRULEREV2} )?(?:%{MODSECRULEMSG2} )?(?:%{MODSECRULEDATA2} )?(?:%{MODSECRULESEVERITY2} )?(?:%{MODSECRULEVERS2} )?(?:%{MODSECRULEMATURITY} )?(?:%{MODSECRULEACCURACY} )?%{MODSECRULETAGS2}%{MODSECHOSTNAME2} %{MODSECURI2} %{MODSECUID2} %{MODSECREF2}, %{NGINXERRORSUFFIX}\"\n\nnodes:\n  - grok:\n      name: MODSECAPACHEERROR2\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: modsecurity\n        - meta: source_ip\n          expression: evt.Parsed.sourcehost\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: rule_id\n          expression: evt.Parsed.ruleid\n        - meta: modsec_message\n          expression: evt.Parsed.rulemessage\n        - meta: modsec_ruledata\n          expression: evt.Parsed.ruledata\n  - grok:\n      name: MODSECNGINXERROR\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: modsecurity\n        - meta: source_ip\n          expression: evt.Parsed.remote_addr\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n        - meta: rule_id\n          expression: evt.Parsed.ruleid\n        - meta: modsec_message\n          expression: evt.Parsed.rulemessage\n        - meta: modsec_ruledata\n          expression: evt.Parsed.ruledata\n\n", "description": "A parser for modsecurity WAF", "path": "parsers/s01-parse/crowdsecurity/modsecurity.yaml", "stage": "s01-parse", "version": "1.1", "versions": {"0.1": {"digest": "8db1b74ef6681ebe8e9fcc09ed271830a330f3aa5dd3e273a98b3906c334f715"}, "0.2": {"digest": "522f242c438219ae659e775aa123c252d9dcebf8bf808d644eb8a0069ed87919"}, "0.3": {"digest": "f173c890dc7abadbeedf7e99d11ae8834e0dfc90e21684b5ea71f267a5a506f5"}, "0.4": {"digest": "cd4f670cbb0b41d6e19d61170cfb60868832bf19e8393235d857dd356f33df2a"}, "0.5": {"digest": "bc41dae1bc38731159c2c141ed9a0e4f99d6c8ec525555c6915a5ee376716da2"}, "0.6": {"digest": "e598abbbe73a831393605f33b513cbf92b1f568a37f1388a3aa9fa7065d1514e"}, "0.7": {"digest": "beee35fd2bb445549f0ef2f1be21dee30019aaaf6522a86e9bc114df6ecae73f"}, "0.8": {"digest": "2f897a99b1d318627537f760a09194d62cb7d3cf6f2673b48815b2bd28a4279e"}, "0.9": {"digest": "051d3c5c4b723913221f8e864f8ae21e491d79c139f3f8776e1591b5cba48582"}, "1.0": {"digest": "4f670402660442a3d762dddeabc497af0e597fdb3fd3a1dce366cf7260df941e"}, "1.1": {"digest": "b1a41b5364b29c0310f5897974e392805c4bba493def611bfd126e1975353af1"}}}, "crowdsecurity/mssql-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/mssql-logs\ndescription: \"Parse mssql logs\"\nfilter: \"evt.Parsed.Channel == 'Application' && (evt.Parsed.Source == 'MSSQLSERVER' || evt.Parsed.Source startsWith 'MSSQL$') && evt.Parsed.EventID == '18456'\"\nnodes:\n  - grok:\n      pattern: \"Reason: Password did not match that for the login provided\\\\.\"\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[2]\")\n    nodes:\n      - grok:\n          pattern: \"\\\\[CLIENT: %{IP:source_ip}\\\\]\"\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[3]\")\n          statics:\n            - meta: source_ip\n              expression: evt.Parsed.source_ip\n    statics:\n      - meta: subtype\n        value: bad_password\n  - grok:\n      pattern: \"Reason: Could not find a login matching the name provided\\\\.\"\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[2]\")\n    nodes:\n      - grok:\n          pattern: \"\\\\[CLIENT: %{IP:source_ip}\\\\]\"\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[3]\")\n          statics:\n            - meta: source_ip\n              expression: evt.Parsed.source_ip\n    statics:\n      - meta: subtype\n        value: bad_user\nstatics:\n  - meta: log_type\n    value: mssql_failed_auth\n  - meta: user\n    expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[1]\")\n---\nonsuccess: next_stage\nname: crowdsecurity/mssql-text-logs\ndescription: \"Parse mssql logs\"\nfilter: \"evt.Parsed.program == 'mssql'\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: \"%{DATE_YMD:date} %{TIME:time} Logon.*Login failed for user '%{NOTDQUOTE:user}'. Reason: %{GREEDYDATA:reason_message}. \\\\[CLIENT: %{IPORHOST:source_ip}\\\\]\"\n      apply_on: message\n    onsuccess: next_stage\n    nodes:\n      - filter: \"evt.Parsed.reason_message == 'Password did not match that for the login provided'\"\n        onsuccess: next_stage\n        statics:\n          - meta: subtype\n            value: bad_password\n      - filter: \"evt.Parsed.reason_message == 'Could not find a login matching the name provided'\"\n        onsuccess: next_stage\n        statics:\n          - meta: subtype\n            value: bad_user\nstatics:\n    - meta: service\n      value: mssql\n    - meta: log_type\n      value: mssql_failed_auth\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"", "description": "Parse mssql logs", "path": "parsers/s01-parse/crowdsecurity/mssql-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "9c99578104a9158ada41bb8dd920575a83d494e6f6e2d166eb5773fb4d7023b1"}, "0.2": {"digest": "2c39d0c3f1cf4124d5e3cc113c733b2ef220522d01706b5434382240de10b147"}, "0.3": {"digest": "b9dc0a3b53d5e1ad6eeae3e1beb04d01afe62111e80d5871b77caee2e7172cfd"}}}, "crowdsecurity/mysql-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/mysql-logs\ndescription: \"Parse MySQL logs\"\nfilter: \"evt.Parsed.program == 'mysql'\"\npattern_syntax:\n  MYSQL_ACCESS_DENIED: \"Access denied for user '%{DATA:user}'@'%{IP:source_ip}' \\\\(using password: %{WORD:using_password}\\\\)\" \nnodes:\n  - grok:\n      pattern: \"%{TIMESTAMP_ISO8601:time} %{NUMBER} \\\\[Note\\\\]( \\\\[%{DATA:err_code}\\\\] \\\\[%{DATA:subsystem}\\\\])? %{MYSQL_ACCESS_DENIED}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{TIMESTAMP_ISO8601:time}.*%{NUMBER} Connect.*%{MYSQL_ACCESS_DENIED}\"\n      apply_on: message\nstatics:\n  - meta: log_type\n    value: mysql_failed_auth\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    expression: evt.Parsed.time\n  - meta: user\n    expression: \"evt.Parsed.user\"\n", "description": "Parse MySQL logs", "path": "parsers/s01-parse/crowdsecurity/mysql-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "9ad9acb6f2c62c6d38c8b662a22af412f6bb0d73f14197b5136cc2c777a3865b"}, "0.2": {"digest": "4d2fb3da27c9e65b95fe74f962b0ed1f246f2312ca48b8e9fc95e073488a0809"}, "0.3": {"digest": "e87dcc2182097881e9b90183917fa6e482e5dbe5a03420aab7c0d62b039cb0dd"}, "0.4": {"digest": "f079cdfce412548dba1989be5b3491bfcd425790b91c4331c932d930169f8111"}}}, "crowdsecurity/naxsi-logs": {"content": "#let's try to post-process nginx error log to have naxsi pattern\nfilter: \"evt.Meta.log_type == 'http_error-log' && evt.Parsed.program == 'nginx'\"\ndescription: \"Enrich logs if its from NAXSI\"\nname: crowdsecurity/naxsi-logs\ngrok:\n  name: \"NAXSI_EXLOG\"\n  apply_on: message\nstatics:\n  - target: evt.Meta.log_type\n    value: waf_naxsi-log\n  - meta: source_ip\n    expression: \"evt.Parsed.naxsi_src_ip\"\n  - meta: http_path\n    expression: \"evt.Parsed.http_path\"\n  - meta: dest_ip\n    expression: \"evt.Parsed.target_ip\"", "description": "Enrich logs if its from NAXSI", "path": "parsers/s02-enrich/crowdsecurity/naxsi-logs.yaml", "stage": "s02-enrich", "version": "0.1", "versions": {"0.1": {"digest": "c8b9f9ffdc82619cfc9ef10be9ba18513f702688d86d5c48a5cffb525499a8f0"}}}, "crowdsecurity/nextcloud-logs": {"content": "---\nonsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'NEXTCLOUD'\"\nname: crowdsecurity/nextcloud-logs\ndescription: \"Parse nextcloud logs\"\npattern_syntax:\n  NEXTCLOUD_USER: '[a-zA-Z0-9\\.\\@\\-\\+_%]+'\nnodes:\n  - grok:\n      pattern: 'Login failed: %{NEXTCLOUD_USER:target_user} \\(Remote IP: %{IP:source_ip}\\)'\n      expression: JsonExtract(evt.Parsed.message, \"message\")\n    statics:\n      - meta: target_user\n        expression: \"evt.Parsed.target_user\"\n      - meta: log_type\n        value: nextcloud_failed_auth\n  - grok:\n      pattern: 'Bruteforce attempt from \\\\?\"%{IP:source_ip}\\\\?\" detected for action \\\\?\"%{DATA:action}\\\\?\"'\n      expression: JsonExtract(evt.Parsed.message, \"message\")\n    statics:\n      - meta: action\n        expression: \"evt.Parsed.action\"\n      - meta: log_type\n        value: nextcloud_bruteforce_attempt\n\n#{\"reqId\":\"dCA39mNG3NHLwbibVCFp\",\"level\":1,\"time\":\"2023-02-14T17:28:33+00:00\",\"remoteAddr\":\"172.18.0.200\",\"user\":\"--\",\"app\":\"core\",\"method\":\"GET\",\"url\":\"/\",\"message\":\"Trusted domain error. \\\"172.18.0.200\\\" tried to access using \\\"kloot.ronsmans.eu\\\" as host.\",\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/109.0\",\"version\":\"25.0.3.2\",\"data\":{\"app\":\"core\"}}\n\n  - grok:\n      pattern: 'Trusted domain error. \\\\\"%{IP:source_ip}\\\\\".*'\n      expression: JsonExtract(evt.Parsed.message, \"message\")\n    statics:\n      - meta: log_type\n        value: nextcloud_domain_error\n\nstatics:\n  - meta: service\n    value: nextcloud\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Parsed.message, \"time\")\n", "description": "Parse nextcloud logs", "path": "parsers/s01-parse/crowdsecurity/nextcloud-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "072ff18cde784aedbe88ded5742860fcdf5000c3b56f10ca4d5fc2ec0b8166d7"}, "0.2": {"digest": "a83ed98682243d1e6fd1b07e763746f7dd05a2bffb18f6cbad646ec863b622de"}, "0.3": {"digest": "21f42e86e1dbe439df7748ad883fcb34ab57096fb0ef4175e76eee0ef503bccd"}}}, "crowdsecurity/nextcloud-whitelist": {"content": "name: crowdsecurity/nextcloud-whitelist\ndescription: \"Whitelist events from nextcloud\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"Nextcloud Whitelist\"\n  expression:\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Parsed.file_ext == '.vcf' && evt.Parsed.http_args contains \"photo\" #Contacts app .vcf missing photo\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/files_versions/preview' && evt.Parsed.http_args contains 'version' #Backup app missing file version\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/photos/api/v1/preview' && evt.Parsed.http_args contains 'x' && evt.Parsed.http_args contains 'y' #Photo app loads all previews as small panes, but can 404\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Parsed.request contains '/core/preview' && evt.Parsed.http_args contains 'x=' && evt.Parsed.http_args contains 'y=' && evt.Parsed.http_args contains 'fileId=' #File preview often 404s while searching\n   - evt.Meta.http_status in ['404', '200'] && evt.Meta.http_verb in ['PROPFIND', 'GET'] && evt.Meta.http_path matches '^/remote.php/(web)?dav/' #Uploading new files via WebDAV always produces a 404\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/mail/api/avatars/url/' #When loading mail contacts the avatars may get 404\n   - evt.Meta.http_status == '200' && evt.Parsed.static_ressource == 'false' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/photos/api/v1/preview' && evt.Parsed.http_args contains '&x=' && evt.Parsed.http_args contains '&y=' && evt.Parsed.http_args contains 'etag=' #When loading multiple images inside Nextcloud Photos, HTTP Crawl non statics is triggered since the images look like dynamic assets.\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Parsed.request == '/ocs/v2.php/apps/text/workspace' && evt.Parsed.http_args contains 'path=%2F' #When opening folders in Nextcloud Files that don't contain a readme.md 404 error is thrown\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/files_trashbin/preview' && evt.Parsed.http_args contains 'fileId=' # 404 error thrown when preview is missing for files in trash bin\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '\\\\/apps\\\\/files\\\\/api\\\\/v1\\\\/thumbnail\\\\/(\\\\d+)/(\\\\d+)'\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/bookmarks/bookmark' && (evt.Meta.http_path endsWith 'favicon' || evt.Meta.http_path endsWith 'image') #When loading NC bookmarks: some entries might have no favicon or no image\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/bookmarks/folder' && evt.Meta.http_path endsWith 'publictoken' #When loading NC bookmarks: private folders have no publictoken\n", "description": "Whitelist events from nextcloud", "path": "parsers/s02-enrich/crowdsecurity/nextcloud-whitelist.yaml", "stage": "s02-enrich", "version": "1.1", "versions": {"0.1": {"digest": "7685c823a398a711b76afea742ebeb2637ac55c829eafba841b63504b1e2228e"}, "0.2": {"digest": "15ef491d0966d5796364e53ee9d1755888696feaff16522b2a1b06536b47ea78"}, "0.3": {"digest": "a8c2afddb978e2dd08559c11dfd1a8d220b3667047adc3c4140ee6643b7ae8fa"}, "0.4": {"digest": "82fdff4937ffd65362b26dc5956bbe366185241f8c42a72c5c760dfc0dcaae87"}, "0.5": {"digest": "b5e9ba6ad48c09317260c89ec36c3501e520a7655fb8d476ffb861fb656099c2"}, "0.6": {"digest": "ef87b424f23e583ab71adc0d8ff5ede0778e8ad45884b17b261babbf5e9619e3"}, "0.7": {"digest": "51a59c210b4b63883c62328a08ac1577257cd4910bd7a44b92285a80596c4a5e"}, "0.8": {"digest": "92408f18443f074036c7eb1d3b948b452f8e29e9ba2b2fca2e118cb98437f4e0"}, "0.9": {"digest": "abb7cfd6a77a94a9c7347065ccbb3964408e51d4d58b3092f009abb65c2cb579"}, "1.0": {"digest": "a1e5cb85bb64594220a390b82db288534feb73b99cce25cb13776fcd63a1e75c"}, "1.1": {"digest": "cb057942be9f210cdd433dd81f930fb8c6fbf661f80311261d56c8193d122de8"}}}, "crowdsecurity/nginx-logs": {"content": "filter: \"evt.Parsed.program startsWith 'nginx'\"\nonsuccess: next_stage\nname: crowdsecurity/nginx-logs\ndescription: \"Parse nginx access and error logs\"\npattern_syntax:\n  NGCUSTOMUSER: '[a-zA-Z0-9\\.\\@\\-\\+_%]+'\n  NGCUSTOMURIPATH: \"(?:/[A-Za-z0-9$.+!*'\\\\(\\\\)\\\\{\\\\},~:;=@\\\\#%&_\\\\-]*)+\"\n  NGCUSTOMURIPATHPARAM: '%{NGCUSTOMURIPATH}(?:%{URIPARAM})?'\nnodes:\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn}(:%{INT:port})? )?%{IPORHOST:remote_addr} - %{NGCUSTOMUSER:remote_user}? \\[%{HTTPDATE:time_local}\\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"( %{NUMBER:request_length} %{NUMBER:request_time} \\[%{DATA:proxy_upstream_name}\\] \\[%{DATA:proxy_alternative_upstream_name}\\])?'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      # and this one the error log\n      pattern: '(%{IPORHOST:target_fqdn} )?%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?%{GREEDYDATA:message}, client: %{IPORHOST:remote_addr}, server: %{DATA:target_fqdn}, request: \"%{WORD:verb} ([^/]+)?%{NGCUSTOMURIPATHPARAM:request}( HTTP/%{NUMBER:http_version})?\", host: \"%{IPORHOST}(:%{NONNEGINT})?\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_error-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n    pattern_syntax:\n      NO_DOUBLE_QUOTE: '[^\"]+'\n    onsuccess: next_stage\n    nodes:\n      - filter: \"evt.Parsed.message contains 'was not found in'\"\n        pattern_syntax:\n          USER_NOT_FOUND: 'user \"%{NO_DOUBLE_QUOTE:username}\" was not found in \"%{NO_DOUBLE_QUOTE}\"'\n        grok:\n          pattern: '%{USER_NOT_FOUND}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'password mismatch'\"\n        pattern_syntax:\n          PASSWORD_MISMATCH: 'user \"%{NO_DOUBLE_QUOTE:username}\": password mismatch'\n        grok:\n          pattern: '%{PASSWORD_MISMATCH}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'limiting requests, excess'\"\n        statics:\n          - meta: sub_type\n            value: \"req_limit_exceeded\"\n  ## Parse malformed requests\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn} )?%{IPORHOST:remote_addr} - (%{NGUSER:remote_user})? \\[%{HTTPDATE:time_local}\\] \"%{DATA:request}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"( %{NUMBER:request_length} %{NUMBER:request_time} \\[%{DATA:proxy_upstream_name}\\] \\[%{DATA:proxy_alternative_upstream_name}\\])?'\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: http_access-log\n      - target: evt.StrTime\n        expression: evt.Parsed.time_local\n    # these ones apply for both grok patterns\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: target_fqdn\n    expression: \"evt.Parsed.target_fqdn\"\n", "description": "Parse nginx access and error logs", "path": "parsers/s01-parse/crowdsecurity/nginx-logs.yaml", "stage": "s01-parse", "version": "1.7", "versions": {"0.1": {"digest": "60ba29ab5a5a49214664344b57403fab932e70bb1493203e83dc7df4f66b2059"}, "0.2": {"digest": "eae9b00d93c9e86f4b909bf0b0ce7dee821834702bc99c29213ebeca86054367"}, "0.3": {"digest": "7e6aeff6e07708806ffdc92b81b290cb41da8ddf95c2a1933f59f6b36ba62ace"}, "0.4": {"digest": "c1a14a662419b6edc17078467cea654082f02925961341e29fead330d11174ff"}, "0.5": {"digest": "81aee3a0a3eb3f603d846ba17b7efbae49d1169a13a49099a4e16b929cc20747"}, "0.6": {"digest": "1c1ac2988fce3691f5b571886921ba4d92563ba739756b9d112c58370e55a830"}, "0.7": {"digest": "2e209cb2f4277ccc854254a3dc627bc3d96e9f29ccb4756129d9b0c32964515e"}, "0.8": {"digest": "ea536d0d2c336ffc1720bb6d7678839f0488c1fca96614327396afd2f92ae9fc"}, "0.9": {"digest": "b30a1fb8efb8148f9444587a8bfb9558fd6c28f898644fd140f7995ffa302c68"}, "1.0": {"digest": "3e1f4e967e6088b83b8191c357cd5dc8ab5842200ffd47de7b5e8ddd8f2b28f7"}, "1.1": {"digest": "2d3bc9c768099ff55fc8948879bf3f57c35d37f834916a490b72094d5dc8812d"}, "1.2": {"digest": "e2cf65e3272cf7c269ffcb2282f6e6f9169a8acec98a97acae96d90f3f8b30dd"}, "1.3": {"digest": "b76ec30d100908555f3d2085f12338b6366a6286cbf00dc5ae590cc7d8f7373f"}, "1.4": {"digest": "ffd447fc906aa86bc3fa4c352d0d0829074c999d9f5257c6a20728c58a237e3a"}, "1.5": {"digest": "1948e74edab6e6fa23f70675e2883b726d4e0394314dafaad2b9819762b92b34"}, "1.6": {"digest": "538990ce5b01974ddd29c948de56322b92de56f6d9e70fc7f45415ce8af3858d"}, "1.7": {"digest": "f6818d92a779ff63fc4bae96e646da09820e97f93758f5620ae9dd14c8f1e5e5"}}}, "crowdsecurity/nginx-proxy-manager-logs": {"content": "#\nfilter: \"evt.Parsed.program startsWith 'nginx-proxy-manager'\"\nonsuccess: next_stage\nname: crowdsecurity/nginx-proxy-manager-logs\ndescription: \"Parse Nginx Proxy Manager access and error logs\"\nnodes:\n  # For Proxy hosts logs\n  - grok:\n      pattern: '\\[%{HTTPDATE:time_local}\\]( %{NUM_OR_DASH:upstream_cache_status} %{NUM_OR_DASH:upstream_status})? %{NUMBER:status} - %{WORD:verb} %{WORD:scheme} %{IPORHOST:target_fqdn} \\\"%{NOTDQUOTE:request}\\\" \\[Client %{IPORHOST:remote_addr}\\] \\[Length %{NUMBER:body_bytes_sent}\\] \\[Gzip %{DATA:gzip_ratio}\\]( \\[Sent-to %{IPORHOST:target_server}\\])? \\\"%{NOTDQUOTE:http_user_agent}\\\" \\\"%{NOTDQUOTE:http_referer}\\\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n    pattern_syntax:\n      NUM_OR_DASH: '-|\\d*'\n  # For Default host logs\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn} )?%{IPORHOST:remote_addr} - (%{NGUSER:remote_user})? \\[%{HTTPDATE:time_local}\\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"( %{NUMBER:request_length} %{NUMBER:request_time} \\[%{DATA:proxy_upstream_name}\\] \\[%{DATA:proxy_alternative_upstream_name}\\])?'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  # and this one the error log\n  - grok:\n        pattern: '(%{IPORHOST:target_fqdn} )?%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?%{GREEDYDATA:message}, client: %{IPORHOST:remote_addr}, server: %{IPORHOST:target_fqdn}, request: \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\", host: \"%{IPORHOST}\"'\n        apply_on: message\n        statics:\n          - meta: log_type\n            value: http_error-log\n          - target: evt.StrTime\n            expression: evt.Parsed.time\n    pattern_syntax:\n      NO_DOUBLE_QUOTE: '[^\"]+'\n    onsuccess: next_stage\n    nodes:\n      - filter: \"evt.Parsed.message contains 'was not found in'\"\n        pattern_syntax:\n          USER_NOT_FOUND: 'user \"%{NO_DOUBLE_QUOTE:username}\" was not found in \"%{NO_DOUBLE_QUOTE}\"'\n        grok:\n          pattern: '%{USER_NOT_FOUND}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'password mismatch'\"\n        pattern_syntax:\n          PASSWORD_MISMATCH: 'user \"%{NO_DOUBLE_QUOTE:username}\": password mismatch'\n        grok:\n          pattern: '%{PASSWORD_MISMATCH}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n# these ones apply for both grok patterns\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: target_fqdn\n    expression: \"evt.Parsed.target_fqdn\"\n", "description": "Parse Nginx Proxy Manager access and error logs", "path": "parsers/s01-parse/crowdsecurity/nginx-proxy-manager-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "d3537478fca875fdaccc3d5591ec3ce3f6fbeb5283737aca3b12d322bd8abfd7"}, "0.2": {"digest": "b3c98501a460913b0d09aaf410e5651e999eba720516bb4822e69f0adea19685"}}}, "crowdsecurity/odoo-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/odoo-logs\ndescription: \"Parse Odoo logs\"\nfilter: \"evt.Parsed.program == 'odoo'\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp} %{INT:PID} INFO %{DATA:db_name} odoo.addons.base.models.res_users: Login failed for db:%{DATA} login:%{DATA:user} from %{IP:source_ip}'\n      apply_on: message\nstatics:\n  - meta: log_type\n    value: odoo_failed_auth\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: user\n    expression: \"evt.Parsed.user\"\n  - meta: db\n    expression: \"evt.Parsed.db_name\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse Odoo logs", "path": "parsers/s01-parse/crowdsecurity/odoo-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "a41a81ec54fd61070c0d15f954a4a6f00c63e33546f12d79c6abaf745c36fb4e"}}}, "crowdsecurity/opnsense-gui-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'audit'\"\nname: crowdsecurity/opnsense-gui-logs\ndescription: \"Parse OPNSense web auth logs\"\n#/index.php: Web GUI authentication error for 'toto' from 1.2.3.4\ngrok: \n  pattern: \"/index.php: Web GUI authentication error for '%{USERNAME:username}' from %{IPORHOST:source_ip}\"\n  apply_on: message\nstatics:\n  - meta: service\n    value: opnsense-gui\n  - meta: username\n    expression: \"evt.Parsed.username\"\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: log_type\n    value: opnsense-gui-failed-auth\n", "description": "Parse OPNSense web auth logs", "path": "parsers/s01-parse/crowdsecurity/opnsense-gui-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "1a93083832b2ef50845cbf1fd056ab1b680e6f524d17892bc8f6cb72cfe87935"}}}, "crowdsecurity/palo-alto-threat-log": {"content": "onsuccess: next_stage\nname: crowdsecurity/palo-alto-threat-log\ndescription: \"Parse palo-alto-threat-log logs\"\nfilter: \"evt.Parsed.program == 'palo-alto-threat'\"\npattern_syntax:\n  PAN_TIMESTAMP: \"%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{HOUR}:%{MINUTE}:%{INT}\"\nnodes:\n  - grok:\n      pattern: '(%{TIMESTAMP_ISO8601:syslog_timestamp} )?%{SYSLOGHOST:syslog_hostname} %{DATA:pan_reserved},%{DATA},%{WORD:serial_number},%{WORD:log_type},%{WORD:log_subtype},%{DATA:pan_unknown},%{PAN_TIMESTAMP:generation_timestamp},%{IP:src_ip},%{IP:dst_ip},%{IP:nat_src_ip},%{IP:nat_dst_ip},%{DATA:rule},%{DATA:src_user},%{DATA:dst_user},%{DATA:app},%{DATA:vsys},%{DATA:src_zone},%{DATA:dst_zone},%{DATA:ingress_int},%{DATA:egress_int},%{DATA:log_fwd_profile},%{DATA},%{DATA:session_id},%{DATA:repeat_count},%{DATA:src_port},%{DATA:dst_port},%{DATA:nat_src_port},%{DATA:nat_dst_port},%{DATA:pan_log_flags},%{DATA:ip_proto},%{DATA:action},(\"%{DATA:url_or_filename}\")?,%{DATA:threat_id},%{DATA:url_category_or_wildfire_verdict},%{DATA:severity},%{DATA:direction},%{DATA:log_seq_num},%{DATA:fwd_to_panorama},%{DATA:src_country},%{DATA:dst_country},%{DATA:http_content_type},%{DATA:pcap_id},%{DATA:file_hash},%{DATA:wildfire_server},%{GREEDYDATA:unparsed_data}'\n      apply_on: message\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.syslog_timestamp\n  - meta: log_type\n    value: palo_alto\n  - meta: source_ip\n    expression: evt.Parsed.src_ip\n  - meta: severity\n    expression: evt.Parsed.severity\n  - meta: threat_id\n    expression: evt.Parsed.threat_id\n  - meta: destination_location\n    expression: evt.Parsed.dst_country\n  - meta: source_location\n    expression: evt.Parsed.src_country\n  - meta: rule_name\n    expression: evt.Parsed.rule\n  - meta: application\n    expression: evt.Parsed.app\n  - meta: threat_type\n    expression: evt.Parsed.threat_id\n", "description": "Parse palo-alto-threat-log logs", "path": "parsers/s01-parse/crowdsecurity/palo-alto-threat-log.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "7a9d62f00f202417325dcfac25efc34e5caaa78b469486977967ced0d0ec6cb1"}, "0.2": {"digest": "8e2ef39c33263f3b2bdca6e6936a61de1a84a4bc7ad741626b31b9f19d2304b7"}, "0.3": {"digest": "a2f3c15040301cdbbf75233c123d089be2380401de5f335b08275929a2f45974"}}}, "crowdsecurity/pam-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'sudo'\"\nname: crowdsecurity/pam-logs\ndescription: \"Parse pam logs\"\nnodes:\n  - grok: \n      pattern: 'pam_tally2\\(sudo:auth\\): user %{NOTSPACE:username} \\(%{NUMBER:uid}\\) tally \\d, deny \\d'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pam_user_lock\n  - grok:\n      pattern: 'pam_unix\\(sudo:auth\\): authentication failure; logname=%{NOTSPACE:logname} uid=%{NUMBER:uid} euid=%{NUMBER:euid} tty=%{NOTSPACE:tty} ruser=%{NOTSPACE:ruser} rhost=%{GREEDYDATA:rhost}  user=%{NOTSPACE:username}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pam_failed_auth\nstatics:\n  - meta: service\n    value: pam\n  - meta: username\n    expression: \"evt.Parsed.username\"\n", "description": "Parse pam logs", "path": "parsers/s01-parse/crowdsecurity/pam-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "8648ee68511e7f48834a7e4a2c850f55de13ebcf05cb97b147265290ec089384"}, "0.2": {"digest": "7fc970165bfb774accdf27c4932473bd2633cc680d213ed49656e4f462fdd495"}}}, "crowdsecurity/pfsense-gui-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'php-fpm'\"\nname: crowdsecurity/pfsense-gui-logs\ndescription: \"Parse pfSense web auth logs\"\ngrok: \n  pattern: \"/index.php: webConfigurator authentication error for user '%{USERNAME:username}' from: %{IPORHOST:source_ip}\"\n  apply_on: message\nstatics:\n  - meta: service\n    value: pfsense-gui\n  - meta: username\n    expression: \"evt.Parsed.username\"\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: log_type\n    value: pfsense-gui-failed-auth\n", "description": "Parse pfSense web auth logs", "path": "parsers/s01-parse/crowdsecurity/pfsense-gui-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "0e759d86c5244f6593c6ba58f18d59ad1fac1fe9cc2f127053f229d4851f57f4"}}}, "crowdsecurity/pgsql-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/pgsql-logs\ndescription: \"Parse PgSQL logs\"\nfilter: \"evt.Parsed.program == 'postgres'\"\nnodes:\n  - grok:\n    #pgsql 12\n      pattern: '%{DATESTAMP:timestamp} %{WORD:zone} \\[%{INT:PID}\\] %{IP:source_ip} %{USERNAME:pgsql_user}@%{GREEDYDATA:pgsql_dbname} FATAL:  %{WORD:auth_method} authentication failed for user \"%{USERNAME:pgsql_target_user}\"'\n      apply_on: message\n  - grok:\n    #aws aurora\n    #%{DATESTAMP:timestamp} %{WORD:zone}:%{IP:source_ip}\\(%{INT:source_port}\\):%{USERNAME:pgsql_user}@%{GREEDYDATA:pgsql_dbname}:\\[%{INT:pid}\\]:FATAL: password authentication failed for user \"%{USERNAME:pgsql_target_user}\"\n      pattern: '%{DATESTAMP:timestamp} %{WORD:zone}:%{IP:source_ip}\\(%{INT:source_port}\\):%{USERNAME:pgsql_user}@%{GREEDYDATA:pgsql_dbname}:\\[%{INT:pid}\\]:FATAL:  %{WORD:auth_method} authentication failed for user \"%{USERNAME:pgsql_target_user}\"'\n      apply_on: message\nstatics:\n  - meta: log_type\n    value: pgsql_failed_auth\n  - meta: auth_method\n    expression: \"evt.Parsed.auth_method\"\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: user\n    expression: \"evt.Parsed.pgsql_target_user\"\n  - meta: db\n    expression: \"evt.Parsed.pgsql_dbname\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse PgSQL logs", "path": "parsers/s01-parse/crowdsecurity/pgsql-logs.yaml", "stage": "s01-parse", "version": "0.7", "versions": {"0.1": {"digest": "180dbffa0ae9a0b7fa192d5328dfc69c8b1a0489a81604c6642a47be3fd1394d"}, "0.2": {"digest": "bf228d679c51e8b47d06ee58185591b97c5be3acb4fcb0e38d36707f6452bd5d"}, "0.3": {"digest": "693c053d3ff524e84e2aea4d4e29d0fc2b8151804d4672f7cbdf77d8ac48eccc"}, "0.4": {"digest": "107048061794ca54bf99a080d78642a1345cc9d5554bc54bad353aec3fa313d0"}, "0.5": {"digest": "70c79e6c9c679779cd61bad22760bc0ac421b6a735278d659dec3b39c85f15f2"}, "0.6": {"digest": "9492516f5fce0c7a6b620efab95dc8679486bb2c5f4175012514ec09eabbf7f1"}, "0.7": {"digest": "70c79e6c9c679779cd61bad22760bc0ac421b6a735278d659dec3b39c85f15f2"}}}, "crowdsecurity/pkexec-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'pkexec'\"\nname: crowdsecurity/pkexec-logs\ndescription: \"Parse pkexec logs specifically for CVE-2021-4034\"\npattern_syntax:\n  PWNKIT_XPL: '%{DATA:user}: The value for the SHELL variable was not found the /etc/shells file'\ngrok:\n  name: \"PWNKIT_XPL\"\n  apply_on: message\nstatics:\n  - meta: log_type\n    value: CVE-2021-4034-xpl\n  - meta: target_user\n    expression: \"evt.Parsed.user\"\n", "description": "Parse pkexec logs specifically for CVE-2021-4034", "path": "parsers/s01-parse/crowdsecurity/pkexec-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "3b8e30530f69f776d327b5710653a496245949ca6dde84d16357f433b7303a25"}}}, "crowdsecurity/plex-allowlist": {"content": "name: crowdsecurity/plex-allowlist\ndescription: \"Allowlist events from Plex\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"Plex Allowlist\"\n  expression:\n   - evt.Meta.http_status in ['200', '404'] && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/video/:/transcode/'\n   - evt.Meta.http_status == '200' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/photo/:/transcode/'\n   - evt.Meta.http_status in ['200', '400'] && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/:/timeline'\n   - evt.Meta.http_status == '200' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '^/library/metadata/\\\\d+'\n   - evt.Meta.http_status == '200' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path == '/status/sessions'\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/playQueues/'\n   - evt.Meta.http_status == '403' && evt.Meta.http_verb == 'POST' && evt.Parsed.request == '/log' && evt.Parsed.http_args contains 'X-Plex-Product=Plex%20Cast&X-Plex-Version='\n   - evt.Meta.http_status == '200' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/music/:/transcode/universal/session/'\n", "description": "Allowlist events from Plex", "path": "parsers/s02-enrich/crowdsecurity/plex-allowlist.yaml", "stage": "s02-enrich", "version": "0.2", "versions": {"0.1": {"digest": "38c6b298e8358e7d15145f9d34e1720596850342c705aa57e4764ccdf551bca4"}, "0.2": {"digest": "ba4339d92d29c1764f7f77e4dd24f08bda7c477b1448299cb73a9d1ef848931d"}}}, "crowdsecurity/postfix-logs": {"content": "# Copyright (c) 2014, 2015, Rudy Gevaert\n# Copyright (c) 2020 Crowdsec\n\n# Permission is hereby granted, free of charge, to any person obtaining\n# a copy of this software and associated documentation files (the\n# \"Software\"), to deal in the Software without restriction, including\n# without limitation the rights to use, copy, modify, merge, publish,\n# distribute, sublicense, and/or sell copies of the Software, and to\n# permit persons to whom the Software is furnished to do so, subject to\n# the following conditions:\n\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n# Some of the groks used here are from https://github.com/rgevaert/grok-patterns/blob/master/grok.d/postfix_patterns\nonsuccess: next_stage\nfilter: \"evt.Parsed.program endsWith '/smtpd'\"\nname: crowdsecurity/postfix-logs\npattern_syntax:\n  POSTFIX_HOSTNAME: '(%{HOSTNAME}|unknown)'\n  POSTFIX_COMMAND: '(AUTH|STARTTLS|CONNECT|EHLO|HELO|RCPT)'\n  POSTFIX_ACTION: 'discard|dunno|filter|hold|ignore|info|prepend|redirect|replace|reject|warn'\n  RELAY: '(?:%{HOSTNAME:remote_host}(?:\\[%{IP:remote_addr}\\](?::[0-9]+(.[0-9]+)?)?)?)'\n  SMTP_BASIC_STATUS_CODE: '[0-9]{3}' #250\n  SMTP_ENHANCED_STATUS_CODE: '[0-9.]+' #2.0.0\n  SMTP_RETURN_CODES: '%{SMTP_BASIC_STATUS_CODE:smtp_basic_status_code}( %{SMTP_ENHANCED_STATUS_CODE:smtp_enhanced_status_code})?' #250 2.0.0\ndescription: \"Parse postfix logs\"\nnodes:\n  - grok:\n      apply_on: message\n      pattern: 'lost connection after %{DATA:smtp_response} from %{RELAY}'\n      statics:\n        - meta: log_type_enh\n          value: spam-attempt\n  - grok:\n      apply_on: message\n      pattern: 'warning: %{POSTFIX_HOSTNAME:remote_host}\\[%{IP:remote_addr}\\]: SASL ((?i)LOGIN|PLAIN|(?:CRAM|DIGEST)-MD5) authentication failed:%{GREEDYDATA:message_failure}'\n      statics:\n        - meta: log_type_enh\n          value: spam-attempt\n  - grok:\n      apply_on: message\n      pattern: 'warning: non-SMTP command from unknown\\[%{IP:remote_addr}\\]: %{GREEDYDATA:command}'\n      statics:\n        - meta: log_type_enh\n          value: non-smtp-command\n  - grok:\n      apply_on: message\n      pattern: 'NOQUEUE: %{POSTFIX_ACTION:action}: %{DATA:command} from %{RELAY}: %{SMTP_RETURN_CODES:smtp_return_codes} %{GREEDYDATA:reason}'\n      statics:\n        - meta: action\n          expression: \"evt.Parsed.action\"\n    nodes:\n      ## We check if the reason is not a service unavailable if so we parser more information\n      - filter: \"evt.Parsed.reason != 'Service unavailable'\"\n        grok:\n          apply_on: reason\n          pattern: \"<%{DATA:helo}>: %{GREEDYDATA:reason}; %{GREEDYDATA:kvItems}\"\n        statics:\n          - parsed: unused\n            expression: ParseKV(evt.Parsed.kvItems, evt.Unmarshaled, \"postfix\")\n          - meta: reason\n            expression: \"evt.Parsed.reason\"\nstatics:\n    - meta: service\n      value: postfix\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_addr\"\n    - meta: source_hostname\n      expression: \"evt.Parsed.remote_host\"\n    - meta: log_type\n      value: postfix\n\n", "description": "Parse postfix logs", "path": "parsers/s01-parse/crowdsecurity/postfix-logs.yaml", "stage": "s01-parse", "version": "0.8", "versions": {"0.1": {"digest": "da6b8ecae70e951905697c92fc0c198c2148041bf96e33658d485818c37d7414"}, "0.2": {"digest": "7338524c5cd363792ee2b8edd488ee6e855b925e073ad659ae2c1b9fb1f4afdf"}, "0.3": {"digest": "22d3fd0f7d3ca3ea1899df909c5748ed8781b58d243e8d54217ce268874072e1"}, "0.4": {"digest": "1b30aa19109f2f95ac96afa38e83d5abea3ace8b310773cf936e7191241a01df"}, "0.5": {"digest": "dc61094384986837e4096f8490a4ba692624a4515540f17c8cf030afed470fb7"}, "0.6": {"digest": "3bfd0f21a91cdee11ef4c03ae617fcd5b43967dcfc5f13592be637a4c8bf2b1f"}, "0.7": {"digest": "69418bc0ba6fb999af9c2e0a4e23848836ec664a646adaa14cf64763364a8846"}, "0.8": {"digest": "aef338766b7b740ae4421f325e7d64ad608b3e79069c2fb3956336181d6aaabb"}}}, "crowdsecurity/postscreen-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program in ['postfix/postscreen', 'haproxy/postscreen']\"\nname: crowdsecurity/postscreen-logs\npattern_syntax:\n  POSTSCREEN_PREGREET: 'PREGREET'\n  POSTSCREEN_PREGREET_TIME_ATTEMPT: '\\d+(.\\d+)?'\ndescription: \"Parse postscreen logs\"\nnodes:\n  - grok:\n      apply_on: message\n      pattern: '%{POSTSCREEN_PREGREET:pregreet} %{INT:count} after %{POSTSCREEN_PREGREET_TIME_ATTEMPT:time_attempt} from \\[%{IP:remote_addr}\\]:%{INT:port}: %{GREEDYDATA:message_attempt}'\nstatics:\n    - meta: service\n      value: postscreen\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_addr\"\n    - meta: pregreet\n      expression: \"evt.Parsed.pregreet\"\n\n\n", "description": "Parse postscreen logs", "path": "parsers/s01-parse/crowdsecurity/postscreen-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "5ee035d47824573e19f9a1d378d8882cf3efa72f6443e2243f915d6b38b4b957"}, "0.2": {"digest": "4a738f39e310daafeabf599f9bdbee013178aae5a1ca9da4f4985ae1626a0e21"}, "0.3": {"digest": "9ce070163edf33d430b5332f196a75fb39871507cd97a5942177af163ad58e98"}}}, "crowdsecurity/proftpd-logs": {"content": "onsuccess: next_stage\nname: proftpd-logs\ndescription: \"Parse proftpd logs\"\nfilter: \"evt.Parsed.program == 'proftpd'\"\n#we should use the same pattern for \"normal\" and plesk logs, but due to an issue in grokky handling (), we cannot :(\npattern_syntax:\n  PROFTPD_AUTH_FAIL: '%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:hostname} proftpd\\[%{DATA}\\] %{IPORHOST:hostname} \\(%{IPORHOST}\\[%{IP:source_ip}\\]\\): USER %{USERNAME:username} \\(Login failed\\): Incorrect password'\n  PROFTPD_BAD_USER: '%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:hostname} proftpd\\[%{DATA}\\] %{IPORHOST:hostname} \\(%{IPORHOST}\\[%{IP:source_ip}\\]\\): USER %{USERNAME:username}( \\(Login failed\\))?: (n|N)o such user found( from %{IPORHOST} \\[%{IPORHOST}\\] to %{IPORHOST}:%{DATA:port})?'\n  PROFTPD_AUTH_FAIL_PLESK: '%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:hostname} proftpd\\[%{DATA}\\]: %{IPORHOST:hostname} \\(%{IPORHOST}\\[%{IP:source_ip}\\]\\) - USER %{USERNAME:username} \\(Login failed\\): Incorrect password'\n  PROFTPD_BAD_USER_PLESK: '%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:hostname} proftpd\\[%{DATA}\\]: %{IPORHOST:hostname} \\(%{IPORHOST}\\[%{IP:source_ip}\\]\\) - USER %{USERNAME:username}( \\(Login failed\\))?: (n|N)o such user found( from %{IPORHOST} \\[%{IPORHOST}\\] to %{IPORHOST}:%{DATA:port})?'\nnodes:\n  - grok:\n      pattern: \"%{PROFTPD_AUTH_FAIL}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{PROFTPD_BAD_USER}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{PROFTPD_AUTH_FAIL_PLESK}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{PROFTPD_BAD_USER_PLESK}\"\n      apply_on: message\nstatics:\n    - meta: log_type\n      value: ftp_failed_auth\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: target_user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp ", "description": "Parse proftpd logs", "path": "parsers/s01-parse/crowdsecurity/proftpd-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "f00e26a5fd74f57bab31f930d23cca9c2ede7cc480cb34c7a6aef5a87baf0ca0"}, "0.2": {"digest": "9921d4752e7337533472031d1495f9c4e4f870a558ea48f303e95e96a31f7f13"}, "0.3": {"digest": "7121c527184caecbc3ca675ba5bc1c7e2029b6f4c625dcbff6c294a22c3d3274"}}}, "crowdsecurity/sabnzbd-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'sabnzbd'\"\nname: crowdsecurity/sabnzbd-logs\ndescription: \"Parse sabnzbd authentication failures\"\npattern_syntax:\n  SABNZBD_TIMESTAMP: '%{SYSLOGTIMESTAMP:timestamp}'\n  SABNZBD_SUFFIX: '( \\(X-Forwarded-For: %{IP:first_forwarded}.*\\))? \\[%{GREEDYDATA:user_agent}\\]'\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}::%{DATA:log_level}::\\[%{DATA}:%{INT:pid}\\] %{GREEDYDATA:sabnzbd_message}'\n      apply_on: message\n    nodes:\n      - grok:\n          pattern: 'Unsuccessful login attempt from %{IP:first_ip}%{SABNZBD_SUFFIX}'\n          apply_on: sabnzbd_message\n          statics:\n            - meta: log_type\n              value: sabnzbd_failed_auth\n      - grok:\n          pattern: 'Fehlerhafter Login Versuch von %{IP:first_ip}%{SABNZBD_SUFFIX}'\n          apply_on: sabnzbd_message\n          statics:\n            - meta: log_type\n              value: sabnzbd_failed_auth\n      - grok:\n          pattern: 'Echec de la tentative de connexion de %{IP:first_ip}%{SABNZBD_SUFFIX}'\n          apply_on: sabnzbd_message\n          statics:\n            - meta: log_type\n              value: sabnzbd_failed_auth\n      - grok:\n          pattern: 'Mislukte login poging van %{IP:first_ip}%{SABNZBD_SUFFIX}'\n          apply_on: sabnzbd_message\n          statics:\n            - meta: log_type\n              value: sabnzbd_failed_auth\n\nstatics:\n  - meta: service\n    value: sabnzbd\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - meta: source_ip\n    expression: \"evt.Parsed.first_forwarded != '' ? evt.Parsed.first_forwarded : evt.Parsed.first_ip\"\n", "description": "Parse sabnzbd authentication failures", "path": "parsers/s01-parse/crowdsecurity/sabnzbd-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "2771370828fb3f3abf7de04715e49465e9bcbf58c2d5698ac162bdfbd6172328"}}}, "crowdsecurity/segfault-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'kernel' and evt.Parsed.message contains 'segfault'\"\nname: crowdsecurity/segfault-logs\nnodes:\n- grok:\n    pattern: '(\\[%{DATA}\\] )?%{DATA:binary}\\[%{INT:pid}\\]: segfault at %{DATA:addr} ip %{DATA:rip} sp %{DATA:sp} error %{INT:err_num} in %{DATA:library}\\[%{DATA:library_offset}\\]( %{DATA})?'\n    apply_on: message\ndescription: \"Parses segfault kernel side\"\nstatics:\n  - meta: log_type\n    value: kernel\n  - meta: sub_log_type\n    value: segfault\n  - meta: library\n    expression: evt.Parsed.library\n  - meta: errnum\n    expression: evt.Parsed.errnum\n  - meta: binary\n    expression: evt.Parsed.binary\n", "description": "Parses segfault kernel side", "path": "parsers/s01-parse/crowdsecurity/segfault-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "9079d38e296e0b574a5cb2fe1fee614c08114912daefa569b2dc0648d8d8e8b8"}, "0.2": {"digest": "4473cedee88009d1a660c9695e9a128f3c2692020ea3cb1dd74b85422074ae31"}, "0.3": {"digest": "4ac2695dcfbbd1bfa1402b95a642b2868ab61900714e7a17c2fb5f0235a3777b"}, "0.4": {"digest": "b5c3c870a15370b249b443fb75c68f4efe894c92a86c4eaca39ee3ce993fd972"}}}, "crowdsecurity/smb-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/smb-logs\nfilter: evt.Parsed.program == 'smb'\ndescription: \"Parse SMB logs\"\npattern_syntax:\n  SMB_BAD_PASSWORD: \"Auth:%{GREEDYDATA} user \\\\[%{DATA:smb_domain}\\\\]\\\\\\\\\\\\[%{DATA:user}\\\\]%{GREEDYDATA} status \\\\[NT_STATUS_WRONG_PASSWORD\\\\]%{GREEDYDATA} remote host \\\\[ipv4:%{IP:ip_source}\"\nnodes:\n - grok:\n    name: \"SMB_AUTH_FAIL\"\n    apply_on: message\n    statics:\n      - meta: subtype\n        value: smb_bad_user\n - grok:\n    name: \"SMB_BAD_PASSWORD\"\n    apply_on: message\n    statics:\n      - meta: subtype\n        value: smb_bad_password\nstatics:\n  - meta: log_type\n    value: smb_failed_auth\n  - meta: source_ip\n    expression: \"evt.Parsed.ip_source\"\n  - meta: user\n    expression: \"evt.Parsed.user\"", "description": "Parse SMB logs", "path": "parsers/s01-parse/crowdsecurity/smb-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "a68bdf79455bda0a84ffaa109752b682266ea0e050d04c260a965a0dbac0fb27"}, "0.2": {"digest": "d2b661f9ef78d245d6fb08ad02689b244ffa2edf9d89c7f4b9bfddc9a04d0a7b"}}}, "crowdsecurity/sshd-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program in ['sshd-session', 'sshd']\"\nname: crowdsecurity/sshd-logs\ndescription: \"Parse openSSH logs\"\npattern_syntax:\n  # The IP grok pattern that ships with crowdsec is buggy and does not capture the last digit of an IP if it is the last thing it matches, and the last octet starts with a 2\n  # https://github.com/crowdsecurity/crowdsec/issues/938\n  IPv4_WORKAROUND: (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\n  IP_WORKAROUND: (?:%{IPV6}|%{IPv4_WORKAROUND})\n  SSHD_AUTH_FAIL: 'pam_%{DATA:pam_type}\\(sshd:auth\\): authentication failure; logname= uid=%{NUMBER:uid}? euid=%{NUMBER:euid}? tty=ssh ruser= rhost=%{IP_WORKAROUND:sshd_client_ip}( %{SPACE}user=%{USERNAME:sshd_invalid_user})?'\n  SSHD_MAGIC_VALUE_FAILED: 'Magic value check failed \\(\\d+\\) on obfuscated handshake from %{IP_WORKAROUND:sshd_client_ip} port \\d+'\n  SSHD_INVALID_USER: 'Invalid user\\s*%{USERNAME:sshd_invalid_user}? from %{IP_WORKAROUND:sshd_client_ip}( port \\d+)?'\n  SSHD_INVALID_BANNER: 'banner exchange: Connection from %{IP_WORKAROUND:sshd_client_ip} port \\d+: invalid format'\n  SSHD_PREAUTH_AUTHENTICATING_USER: 'Connection (closed|reset) by (authenticating|invalid) user %{USERNAME:sshd_invalid_user} %{IP_WORKAROUND:sshd_client_ip} port \\d+ \\[preauth\\]'\n  #following: https://github.com/crowdsecurity/crowdsec/issues/1201 - some scanners behave differently and trigger this one\n  SSHD_PREAUTH_AUTHENTICATING_USER_ALT: 'Disconnected from (authenticating|invalid) user %{USERNAME:sshd_invalid_user} %{IP_WORKAROUND:sshd_client_ip} port \\d+ \\[preauth\\]'\n  SSHD_BAD_KEY_NEGOTIATION: 'Unable to negotiate with %{IP_WORKAROUND:sshd_client_ip} port \\d+: no matching (host key type|key exchange method|MAC) found.'\n  # in case they are blocked by /etc/ssh/sshd_config AllowUsers xx yy\n  SSHD_NOT_ALLOWED_USER: 'User %{USERNAME:sshd_invalid_user}? from %{IP_WORKAROUND:sshd_client_ip}( port \\d+)? not allowed because not listed in AllowUsers'\n  SSHD_AUTH_TIMEOUT: 'Timeout before authentication for %{IP_WORKAROUND:sshd_client_ip}( port \\d+)?'\n  SSHD_DISPATCH_FATAL: 'ssh_dispatch_run_fatal: Connection from %{IP_WORKAROUND:sshd_client_ip}( port \\d+)?: message authentication code incorrect \\[preauth\\]'\nnodes:\n  - grok:\n      name: \"SSHD_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_PREAUTH_AUTHENTICATING_USER_ALT\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_PREAUTH_AUTHENTICATING_USER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_DISC_PREAUTH\"\n      apply_on: message\n  - grok:\n      name: \"SSHD_BAD_VERSION\"\n      apply_on: message\n  - grok:\n      name: \"SSHD_INVALID_USER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_NOT_ALLOWED_USER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_INVALID_BANNER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: extra_log_type\n          value: ssh_bad_banner\n  - grok:\n      name: \"SSHD_USER_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_AUTH_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_MAGIC_VALUE_FAILED\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_BAD_KEY_NEGOTIATION\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_bad_keyexchange\n  - grok:\n      name: \"SSHD_AUTH_TIMEOUT\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_auth_timeout\n  - grok:\n      name: \"SSHD_DISPATCH_FATAL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_dispatch_fatal\nstatics:\n  - meta: service\n    value: ssh\n  - meta: source_ip\n    expression: \"evt.Parsed.sshd_client_ip\"\n", "description": "Parse openSSH logs", "path": "parsers/s01-parse/crowdsecurity/sshd-logs.yaml", "stage": "s01-parse", "version": "2.8", "versions": {"0.1": {"digest": "ecd40cb8cd95e2bad398824ab67b479362cdbf0e1598b8833e2f537ae3ce2f93"}, "0.2": {"digest": "6251a150d0d0dfe5b3942fd700c4e7b631393a2a4f1d949137ddba0b75d2dc6d"}, "0.3": {"digest": "b57b59915825de330b1c0ecf19961fbc033f7784e4670a09f739d84839e2bc81"}, "0.4": {"digest": "a8a89934a9524f43b9b51d1e62fd67af1834f9c7dfa1c36bc2bfdf9158d5966e"}, "0.5": {"digest": "18525728a1985eeac9107bc0fc2583622bf597dd256230689f3e788e992e0410"}, "0.6": {"digest": "5294aa1660260d1bd11520e80dc6f578208679e36456c10f143b3eb28d209fd4"}, "0.7": {"digest": "ad96d89f89e69fe3b9a0c70b7d643d4965cb893f719722d09957c38e89c31a8d"}, "0.8": {"digest": "de14c443378bf69c5c44533bb5d19f32c8b099c7365ac35c35f4c873c22103a3"}, "0.9": {"digest": "b728744d1244fe26d5445ea1e0460014538ea1cba0c8bd6b6ebcaf46d3b9b765"}, "1.0": {"digest": "5603517aa38c9a1deacc993e34ab4adc4047133e51a804ba7cfa782bd973e821"}, "1.1": {"digest": "bbf71af714985e63a01fa70b0d9485e74dfedf77100750523fabce59e8b6b5eb"}, "1.2": {"digest": "63cca80e6f4a02bde8ecb2877c3361c78410643dd66e1059e4ddf7f400fdf916"}, "1.3": {"digest": "36fa6247f3739ed4127e4fdae8a60c314e892a5106cb1b37181ad4fc1e054751"}, "1.4": {"digest": "2bed97f303d5df2bf1852864d5265281cd1d73db39a2679b9e94bb6e5542e348"}, "1.5": {"digest": "dd39640ed9ac34409d45261d343c88adbd5a4ee3c8f81c1a7dac77a23539e41e"}, "1.6": {"digest": "31dadf77665bee1d89ea9d407bd58ad6911753c8a642794277cffd6adf46bbf7"}, "1.7": {"digest": "162dd1da5beb8e52d093dc6b3a417ac2c80004b5b4576bbed9b590896fca3f15"}, "1.8": {"digest": "95d30ef78866c26d2c6235fcd302eb50a67a84fcea031742aed4a5afd4d2b942"}, "1.9": {"digest": "251f05b5398ce5958e6686c392804112b90ffb2b9d5f717052639471983e20d3"}, "2.0": {"digest": "85cc308adad1051bca9575f4adbda27a0f176bf3d3ffc8893e3657ad2a38bfd2"}, "2.1": {"digest": "5e7744b19993458adcca52ad039e8b0f64073c1c2f8bc6320f445c21daa79007"}, "2.2": {"digest": "509cfb3fecfc6922de0d09eb54c8c63b773678d7ff543ef0e3590ea5a8b3dc2e"}, "2.3": {"digest": "a58765b08b7df52bfd07f3efba65f2b54b984181e0edacabc7cffc20c90de733"}, "2.4": {"digest": "82586e712780e06bd6851b41264d82765f708344ffc4a82d0aac11eab34ce353"}, "2.5": {"digest": "72d2401186e070aeba716301c36c08b0f1c26b60b9cd76f4eb59fadfd04589ee"}, "2.6": {"digest": "30c49a38d17a5ace21f41cbe175164722d1bc89ca374b1520d432d94a208a725"}, "2.7": {"digest": "7d541c12f97b090c5f7259b1d2c57fc6205aeea16fc7103d5bbf317f8023f27d"}, "2.8": {"digest": "8f2ba8205583b13ef3715d679accc17a503500a6cae3fd4ea4d847da22b3abdf"}}}, "crowdsecurity/sshd-success-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'sshd'\"\nname: crowdsecurity/sshd-success-logs\ndescription: \"Parse successful ssh logins\"\npattern_syntax:\n  IPv4_WORKAROUND: (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\n  IP_WORKAROUND: (?:%{IPV6}|%{IPv4_WORKAROUND})\nnodes:\n  - grok:\n      pattern: \"Accepted (publickey|password) for %{USERNAME:sshd_auth_user} from %{IP_WORKAROUND:sshd_client_ip} port %{NUMBER:sshd_client_port} ssh2%{GREEDYDATA:sshd_trail}\"\n      apply_on: message\nstatics:\n    - meta: service\n      value: ssh\n    - meta: source_ip\n      expression: \"evt.Parsed.sshd_client_ip\"\n    - meta: user\n      expression: \"evt.Parsed.sshd_auth_user\"\n    - meta: log_type\n      value: auth_success\n", "description": "Parse successful ssh logins", "path": "parsers/s01-parse/crowdsecurity/sshd-success-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "978219d419633422469bdeb10500a58f05260d34039243d47306db038910f141"}}}, "crowdsecurity/stirling-pdf-logs": {"content": "onsuccess: next_stage\ndebug: false\nfilter: \"evt.Parsed.program == 'stirling-pdf'\"\nname: crowdsecurity/stirling-pdf-logs\ndescription: \"Parse Stirling PDF logs\"\nnodes:\n  - grok:\n      pattern: \"%{TIMESTAMP_ISO8601:timestamp} %{WORD:log_level} .*CustomAuthenticationFailureHandler \\\\[.*\\\\] Failed login attempt from IP: \\\\[?%{IP:source_ip}\\\\]?\"\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: failed_authentication\nstatics:\n  - meta: service\n    value: stirling-pdf\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse Stirling PDF logs", "path": "parsers/s01-parse/crowdsecurity/stirling-pdf-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "1e37cb2637e0405936ec544a3958d052c13028d5980a5f404cce1b03d8fcc47f"}}}, "crowdsecurity/supabase-docker-pgsql": {"content": "onsuccess: next_stage\nname: crowdsecurity/supabase-docker-pgsql\ndescription: \"Parse PgSQL logs\"\nfilter: \"evt.Parsed.program == 'postgres'\"\nnodes:\n  - grok:\n    #supabase docker compose postgres password auth fail\n      pattern: '%{IPORHOST:source_ip} %{TIMESTAMP_ISO8601:timestamp} %{WORD:zone} \\[%{INT:PID}\\] %{USERNAME:pgsql_user}@%{GREEDYDATA:pgsql_dbname} FATAL:  %{WORD:auth_method} authentication failed for user \"%{USERNAME:pgsql_target_user}\"'\n      apply_on: message\n\nstatics:\n  - meta: log_type\n    value: pgsql_failed_auth\n  - meta: auth_method\n    expression: \"evt.Parsed.auth_method\"\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: user\n    expression: \"evt.Parsed.pgsql_target_user\"\n  - meta: db\n    expression: \"evt.Parsed.pgsql_dbname\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse PgSQL logs", "path": "parsers/s01-parse/crowdsecurity/supabase-docker-pgsql.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "52ae47f8f6899c97700f7cc1049cd34077bd6e3ecfcd2c0667f8107ef7432892"}}}, "crowdsecurity/suricata-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'suricata-fastlogs'\"\nname: crowdsecurity/suricata-fastlogs\ndescription: \"Parse suricata fast.log\"\npattern_syntax:\n  SURICATA_MARKER: '\\[\\*\\*\\]'\n  SURICATA_DATE: '%{DATE_US:date}-%{TIME:time}'\n  SURICATA_RULE_ID: '\\[%{NUMBER:suricata_rule_severity}:%{NUMBER:rule_id}:%{NUMBER:suricata_alert_signature_rev}\\]'\ngrok: \n  pattern: '%{SURICATA_DATE}  %{SURICATA_MARKER} %{SURICATA_RULE_ID} %{DATA:suricata_alert_signature} %{SURICATA_MARKER} \\[Classification: %{DATA:suricata_classification}\\] \\[Priority: %{NUMBER:suricata_priority}\\] \\{%{DATA:proto}\\} %{IP:source_ip}:%{NUMBER:source_port} \\-> %{IP:dest_ip}:%{NUMBER:dest_port}'\n  apply_on: message\nstatics:\n  - meta: service\n    value: suricata\n  - meta: log_type\n    value: suricata_alert\n  - meta: sub_log_type\n    value: suricata_alert_fast_log\n      #we build back RFC3339 format\n  - target: evt.Parsed.suricata_timestamp\n    expression: evt.Parsed.date + ' ' + evt.Parsed.time\n  - target: evt.StrTime\n    expression: evt.Parsed.date + ' ' + evt.Parsed.time\n  - meta: suricata_alert_signature_id\n    expression: evt.Parsed.rule_id\n  - meta: suricata_rule_severity\n    expression: evt.Parsed.suricata_rule_severity\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n---\nonsuccess: next_stage\nfilter: |\n  evt.Parsed.program == \"suricata-evelogs\" && JsonExtract(evt.Parsed.message, \"event_type\") == \"alert\"\nname: crowdsecurity/suricata-evelogs\ndescription: \"Parse suricata eve.json logs\"\npattern_syntax:\n  SURICATA_EVE_TS: '%{TIMESTAMP_ISO8601:time}'\nnodes:\n  - grok:\n      pattern: '%{SURICATA_EVE_TS:time}(\\-|\\+)%{INT}'\n      expression: JsonExtract(evt.Parsed.message, \"timestamp\")\nstatics:\n  - meta: service\n    value: suricata\n  - meta: log_type\n    value: suricata_alert\n  - meta: sub_log_type\n    value: suricata_alert_eve_json\n  - target: evt.StrTime\n    expression: evt.Parsed.time + 'Z'\n  - target: evt.Meta.suricata_flow_id\n    expression: JsonExtract(evt.Parsed.message, \"flow_id\")\n  - target: evt.Meta.source_ip\n    expression: JsonExtract(evt.Parsed.message, \"src_ip\")\n  - target: evt.Parsed.dest_ip\n    expression: JsonExtract(evt.Parsed.message, \"dest_ip\")\n  - target: evt.Parsed.dest_port\n    expression: JsonExtract(evt.Parsed.message, \"dest_port\")\n  - target: evt.Parsed.proto\n    expression: JsonExtract(evt.Parsed.message, \"proto\")\n  - target: evt.Meta.suricata_alert_signature_id\n    expression: JsonExtract(evt.Parsed.message, \"alert.signature_id\")\n  - target: evt.Parsed.suricata_alert_signature_rev\n    expression: JsonExtract(evt.Parsed.message, \"alert.rev\")\n  - target: evt.Parsed.suricata_alert_signature\n    expression: JsonExtract(evt.Parsed.message, \"alert.signature\")\n  - target: evt.Meta.suricata_rule_severity\n    expression: JsonExtract(evt.Parsed.message, \"alert.severity\")\n\n\n", "description": "Parse suricata fast.log", "path": "parsers/s01-parse/crowdsecurity/suricata-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "8d2c360a278360d24fd5882646c89cea866ba21db80f1b02732b53f57469ee73"}, "0.2": {"digest": "6b768c66d6d2fb86d7707bac122e819300fbf8a635f466af8f9eda373741b38d"}, "0.3": {"digest": "8ef8604a888c2242252759267ea353f3b0f00a5bf927ad0d740a177fd6e3b4ce"}, "0.4": {"digest": "245dc731e0b563f998c2b5815a70330a3648158c0dfd8f2de26d945518cfee44"}, "0.5": {"digest": "c52782b7b3b37eec48359f37420555be73334dc5fc535cbf55b96e8a7d175506"}, "0.6": {"digest": "b3a55203e30b26f2cc1765278545389d79551838bc28643cf21a3150fc2efed6"}}}, "crowdsecurity/synology-dsm-logs": {"content": "# Synology DSM auth.log\n#debug: true\nfilter: \"evt.Parsed.program matches 'synoscgi_SYNO.API.Auth_[1-9]([0-9])?_login'\"\nname: crowdsecurity/synology-dsm-logs\ndescription: \"Parse Synology DSM web auth logs\"\nonsuccess: next_stage\nformat: 2.0\npattern_syntax:\n  TIMESTAMP: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY}T%{HOUR}:%{MINUTE}:%{SECOND}+%{ISO8601_TIMEZONE}'\n# The IP grok pattern that ships with crowdsec is buggy and does not capture the last digit of an IP if it is the last thing it matches, and the last octet starts with a 2\n# https://github.com/crowdsecurity/crowdsec/issues/938\n  IPv4_WORKAROUND: '(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n  IP_WORKAROUND: '(?:%{IPV6}|%{IPv4_WORKAROUND})'\n  AUTH_LOG_FAIL: 'pam_unix\\(webui:auth\\): authentication failure; logname= uid=0 euid=0 tty= ruser= rhost=%{IP_WORKAROUND:src_ip}'\ngrok:\n  pattern: \"%{AUTH_LOG_FAIL}\"\n  apply_on: message\n  statics:\n    - meta: log_type\n      value: synology-dsm_failed_auth\nstatics:\n  - meta: log_type\n    value: synology-dsm_failed_auth\n  - meta: service\n    value: synology-dsm\n  - meta: source_ip\n    expression: \"evt.Parsed.src_ip\"\n", "description": "Parse Synology DSM web auth logs", "path": "parsers/s01-parse/crowdsecurity/synology-dsm-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "d3ef07ad8fc314f8617c2e4dc852da0c887e6c9a9cd68dc8bafbd5e66673400b"}, "0.2": {"digest": "8815fe3b21d0001fb2d42843e1d239e7cc6a763153162236c3c4155aef26a190"}, "0.3": {"digest": "a50a8b51fe5e43d62e7ccdf88306790e94f824b5474a78ad2c5ce4ae8c1b0d1d"}}}, "crowdsecurity/syslog-logs": {"content": "#If it's syslog, we are going to extract progname from it\nfilter: \"evt.Line.Labels.type == 'syslog'\"\nonsuccess: next_stage\npattern_syntax:\n  RAW_SYSLOG_PREFIX: '^<%{NUMBER:stuff1}>%{NUMBER:stuff2} %{SYSLOGBASE2} %{DATA:program} %{NUMBER:pid}'\n  RAW_SYSLOG_META: '\\[meta sequenceId=\"%{NOTDQUOTE:seq_id}\"\\]'\nname: crowdsecurity/syslog-logs\nnodes:\n  - grok:\n      #this is a named regular expression. grok patterns can be kept into separate files for readability\n      pattern: \"^%{SYSLOGLINE}\" \n      #This is the field of the `Event` to which the regexp should be applied\n      apply_on: Line.Raw\n  - grok:\n      #a second pattern for unparsed syslog lines, as saw in opnsense\n      pattern: '%{RAW_SYSLOG_PREFIX} - %{RAW_SYSLOG_META} %{GREEDYDATA:message}'\n      apply_on: Line.Raw\n#if the node was successfull, statics will be applied.\nstatics:\n  - meta: machine\n    expression: evt.Parsed.logsource\n  - parsed: \"logsource\"\n    value: \"syslog\"\n# syslog date can be in two different fields (one of hte assignment will fail)\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp8601\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n---\n#if it's not syslog, the type is the progname\nfilter: \"evt.Line.Labels.type != 'syslog'\"\nonsuccess: next_stage\nname: crowdsecurity/non-syslog\n#debug: true\nstatics:\n  - parsed: message\n    expression: evt.Line.Raw\n  - parsed: program\n    expression: evt.Line.Labels.type\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n\n", "path": "parsers/s00-raw/crowdsecurity/syslog-logs.yaml", "stage": "s00-raw", "version": "0.8", "versions": {"0.1": {"digest": "44e8cfbf528dcd70c6cc329df1b963f6861668796c706cc79050b0907a85540e"}, "0.2": {"digest": "a80dffe6371664eea6ad42af1d386a9447e25a5917f1f489959fcb34ce37f363"}, "0.3": {"digest": "3a284fc04e777a9e8d7606f2fcc09e092ec2ae45103d249d30ebb6eda8fea65a"}, "0.4": {"digest": "74898d3d78b329435253d376376290d57422919618b411e7b1c3c249ac6efecd"}, "0.5": {"digest": "08fa391d35558900669e1b0d0f6b8373d32053d8138355785b6b07e830675ff7"}, "0.6": {"digest": "9f4da801bd0c193d4e24b56c465e081a7df8c17cd8b4340b1d4950c8220196f2"}, "0.7": {"digest": "8d15b6ab76aea4f785a05f31ba84a92e96c1cd3a2644e7a63d98feebd16e1995"}, "0.8": {"digest": "d637382a9f927a4d8101cfc8d42b39cd83d1327e074cc5c48c0a8827fedec6d5"}}}, "crowdsecurity/sysmon-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.Channel == 'Microsoft-Windows-Sysmon/Operational'\"\nname: crowdsecurity/sysmon\ndescription: \"Parse sysmon events\"\nnodes:\n  - filter: evt.Parsed.EventID == '1'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: FileVersion\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='FileVersion']\")\n      - parsed: Description\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Description']\")\n      - parsed: Company\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Company']\")\n      - parsed: OriginalFileName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='OriginalFileName']\")\n      - parsed: CommandLine\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CommandLine']\")\n      - parsed: CurrentDirectory\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CurrentDirectory']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: LogonGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='LogonGuid']\")\n      - parsed: LogonId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='LogonId']\")\n      - parsed: TerminalSessionId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TerminalSessionId']\")\n      - parsed: IntegrityLevel\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='IntegrityLevel']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: ParentProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentProcessGuid']\")\n      - parsed: ParentProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentProcessId']\")\n      - parsed: ParentImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentImage']\")\n      - parsed: ParentCommandLine\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentCommandLine']\")\n      - parsed: ParentUser\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentUser']\")\n      - meta: SysmonEventType\n        value: ProcessCreation\n  - filter: evt.Parsed.EventID == '2'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: TargetFilename\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetFilename']\")\n      - parsed: CreationUtcTime\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CreationUtcTime']\")\n      - parsed: CreationUtcTime\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CreationUtcTime']\")\n      - meta: SysmonEventType\n        value: CreationTimeChanged\n  - filter: evt.Parsed.EventID == '3'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: User\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Protocol\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Protocol']\")\n      - parsed: Initiated\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Initiated']\")\n      - parsed: SourceIsIpv6\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceIsIpv6']\")\n      - parsed: SourceIp\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceIp']\")\n      - parsed: SourceHostname\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceHostname']\")\n      - parsed: SourcePort\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourcePort']\")\n      - parsed: SourcePortName\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourcePortName']\")\n      - parsed: DestinationIsIpv6\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationIsIpv6']\")\n      - parsed: DestinationIp\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationIp']\")\n      - parsed: DestinationHostname\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationHostname']\")\n      - parsed: DestinationPort\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationPort']\")\n      - parsed: DestinationPortName\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationPortName']\")\n      - meta: SysmonEventType\n        value: NetworkConnection\n  - filter: evt.Parsed.EventID == '4'\n    statics:\n      - parsed: State\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='State']\")\n      - parsed: Version\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Version']\")\n      - parsed: SchemaVersion\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SchemaVersion']\")\n      - meta: SysmonEventType\n        value: SysmonServiceStateChanged\n  - filter: evt.Parsed.EventID == '5'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - meta: SysmonEventType\n        value: ProcessTerminated\n  - filter: evt.Parsed.EventID == '6'\n    statics:\n      - parsed: ImageLoaded\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ImageLoaded']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: Signed\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Signed']\")\n      - parsed: Signature\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Signature']\")\n      - parsed: SignatureStatus\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SignatureStatus']\")\n      - meta: SysmonEventType\n        value: DriverLoaded\n  - filter: evt.Parsed.EventID == '7'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ImageLoaded\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ImageLoaded']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: Signed\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Signed']\")\n      - parsed: Signature\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Signature']\")\n      - parsed: SignatureStatus\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SignatureStatus']\")\n      - meta: SysmonEventType\n        value: ImageLoaded\n  - filter: evt.Parsed.EventID == '8'\n    statics:\n      - parsed: SourceProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceProcessGuid']\")\n      - parsed: SourceProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceProcessId']\")\n      - parsed: SourceImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceImage']\")\n      - parsed: TargetProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetProcessGuid']\")\n      - parsed: TargetProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetProcessId']\")\n      - parsed: TargetImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetImage']\")\n      - parsed: NewThreadId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='NewThreadId']\")\n      - parsed: StartAddress\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='StartAddress']\")\n      - parsed: StartModule\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='StartModule']\")\n      - parsed: StartFunction\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='StartFunction']\")\n      - meta: SysmonEventType\n        value: CreateRemoteThread\n  - filter: evt.Parsed.EventID == '9'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: Device\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Device']\")\n      - meta: SysmonEventType\n        value: RawAccessRead\n  - filter: evt.Parsed.EventID == '10'\n    statics:\n      - parsed: SourceProcessGUID\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceProcessGUID']\")\n      - parsed: SourceProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceProcessId']\")\n      - parsed: SourceThreadId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceThreadId']\")\n      - parsed: SourceImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceImage']\")\n      - parsed: TargetProcessGUID\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetProcessGUID']\")\n      - parsed: TargetProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetProcessId']\")\n      - parsed: TargetImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetImage']\")\n      - parsed: GrantedAccess\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='GrantedAccess']\")\n      - parsed: CallTrace\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CallTrace']\")\n      - meta: SysmonEventType\n        value: ProcessAccess\n  - filter: evt.Parsed.EventID == '11'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetFilename\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetFilename']\")\n      - parsed: CreationUtcTime\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CreationUtcTime']\")\n      - meta: SysmonEventType\n        value: FileCreate\n  - filter: evt.Parsed.EventID == '12'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetObject\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetObject']\")\n      - meta: SysmonEventType\n        value: RegistryCreateOrDel\n  - filter: evt.Parsed.EventID == '13'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetObject\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetObject']\")\n      - parsed: Details\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Details']\")\n      - meta: SysmonEventType\n        value: RegistrySetValue\n  - filter: evt.Parsed.EventID == '14'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetObject\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetObject']\")\n      - parsed: NewName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='NewName']\")\n      - meta: SysmonEventType\n        value: RegistryRename\n  - filter: evt.Parsed.EventID == '15'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetFilename\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetFilename']\")\n      - parsed: CreationUtcTime\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CreationUtcTime']\")\n      - meta: SysmonEventType\n        value: FileCreateStreamHash\n  - filter: evt.Parsed.EventID == '16'\n    statics:\n      - parsed: ConfigurationFileHash\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ConfigurationFileHash']\")\n      - parsed: Configuration\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Configuration']\")\n      - meta: SysmonEventType\n        value: SysmonConfigChange\n  - filter: evt.Parsed.EventID == '17'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: PipeName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='PipeName']\")\n      - meta: SysmonEventType\n        value: PipeCreated\n  - filter: evt.Parsed.EventID == '18'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: PipeName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='PipeName']\")\n      - meta: SysmonEventType\n        value: PipeConnected\n  - filter: evt.Parsed.EventID == '19'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: Operation\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Operation']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: EventNamespace\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventNamespace']\")\n      - parsed: Name\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Name']\")\n      - parsed: Query\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Query']\")\n      - meta: SysmonEventType\n        value: WmiEventFilter\n  - filter: evt.Parsed.EventID == '20'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: Operation\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Operation']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Type\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Type']\")\n      - parsed: Name\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Name']\")\n      - parsed: Destination\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Destination']\")\n      - meta: SysmonEventType\n        value: WmiEventConsumer\n  - filter: evt.Parsed.EventID == '21'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: Operation\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Operation']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Consumer\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Consumer']\")\n      - parsed: Filter\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Filter']\")\n      - meta: SysmonEventType\n        value: WmiEventConsumerToFilter\n  - filter: evt.Parsed.EventID == '22'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: QueryName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='QueryName']\")\n      - parsed: QueryStatus\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='QueryStatus']\")\n      - parsed: QueryResults\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='QueryResults']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - meta: SysmonEventType\n        value: DNSEvent\n  - filter: evt.Parsed.EventID == '23'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetFilename\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetFilename']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: IsExecutable\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='IsExecutable']\")\n      - parsed: Archived\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Archived']\")\n      - meta: SysmonEventType\n        value: FileDelete\n  - filter: evt.Parsed.EventID == '24'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: Session\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Session']\")\n      - parsed: ClientInfo\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ClientInfo']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: IsExecutable\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='IsExecutable']\")\n      - parsed: Archived\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Archived']\")\n      - meta: SysmonEventType\n        value: ClipboardChange\n  - filter: evt.Parsed.EventID == '225'\n    statics:\n      - meta: SysmonEventType\n        value: SysmonInternalError\n\nstatics:\n  - meta: service\n    value: sysmon\n  - meta: RuleName\n    expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='RuleName']\")", "description": "Parse sysmon events", "path": "parsers/s01-parse/crowdsecurity/sysmon-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "6a349cea36ce2cb571d545767c4eab9279179ef7d26f01644e2b746ea68638f1"}}}, "crowdsecurity/tcpdump-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'tcpdump'\"\nname: crowdsecurity/tcpdump-logs\n#debug: true\ndescription: \"Parse tcpdump raw logs\"\ngrok:\n  name: \"TCPDUMP_OUTPUT\"\n  apply_on: message\nstatics:\n    - meta: service\n      value: tcp\n    - meta: log_type\n      value: tcp_syn\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: dest_ip\n      expression: \"evt.Parsed.dest_ip\"\n    - meta: dest_port\n      expression: \"evt.Parsed.dest_port\"\n    - parsed: \"new_connection\"\n      expression: \"evt.Parsed.tcpflags contains 'S' ? 'true' : 'false'\"", "description": "Parse tcpdump raw logs", "path": "parsers/s01-parse/crowdsecurity/tcpdump-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "e51892c14d137cc4f12d2203c851a953e743f262561c48ff6108bd4222fff254"}}}, "crowdsecurity/teamspeak3-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'ts3'\"\nname: crowdsecurity/teamspeak3-logs\n#debug: true\ndescription: \"Parse teamspeak3 server logs\"\npattern_syntax:\n  NOPIPE: '[a-zA-Z\\s]+'\n  TS3_AUTH_FAIL: '^%{TIMESTAMP_ISO8601:timestamp}\\|%{NOPIPE:level}\\|%{NOPIPE:service}\\|%{NOPIPE:empty}\\|query from %{INT:chan} \\[?%{IP:src_ip}\\]?:%{INT:src_port} attempted to login with account \"%{DATA:login}\" and failed!$'\n#2022-12-29 11:39:26.009756|INFO    |Query         |   |query from 11 127.0.0.1:48426 attempted to login with account \"toto\" and failed!\n#2023-01-13 00:44:27.543333|INFO    |Query         |   |query from 101 [fd00:feed:dead:beef:405f:26ff:fe06:d4b]:34232 attempted to login with account \"toto\" and failed!\n\ngrok:\n  name: TS3_AUTH_FAIL\n  apply_on: message\n  statics:\n    - meta: service\n      value: teamspeak3\n    - meta: log_type\n      value: ts3_fail_auth\n    - meta: source_ip\n      expression: \"evt.Parsed.src_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse teamspeak3 server logs", "path": "parsers/s01-parse/crowdsecurity/teamspeak3-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "ad06951c76f4f270e7c15325011735c715e476a3c1edb8aba086b05b0c86970f"}, "0.2": {"digest": "255a289431812be0e9ff76638dfea59e1c8c6512137db367ac40c51b43d32eb2"}}}, "crowdsecurity/teleport-logs": {"content": "name: crowdsecurity/teleport-logs\ndescription: \"Parse teleport logs\"\nfilter: \"evt.Parsed.program == 'teleport' && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, 'teleport') in ['', nil]\"\n#debug: true\nonsuccess: next_stage\nstatics:\n  - meta: service\n    value: teleport\n  - meta: sub_type\n    expression: evt.Unmarshaled.teleport.event\n  - meta: success\n    expression: \"evt.Unmarshaled.teleport.success ? 'true' : 'false'\"\n## Set for impossible travel scenario\n  - meta: log_type\n    expression: \"evt.Unmarshaled.teleport.success ? 'auth_success' : 'auth_failed'\"\n##Converting a bool with sprintf is very slow, so we use a ternary expression\n  - target: evt.StrTime\n    expression: evt.Unmarshaled.teleport.time\n  - meta: user\n    expression: evt.Unmarshaled.teleport.user\n  - meta: source_ip\n    expression: Split(evt.Unmarshaled.teleport[\"addr.remote\"], ':')[0]\n  - meta: http_user_agent\n    expression: evt.Unmarshaled.teleport[\"user_agent\"]", "description": "Parse teleport logs", "path": "parsers/s01-parse/crowdsecurity/teleport-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "3fbeaceed0ed03d0a23244c6c3cf3774aa69e9bbf3c77638e5cfb3532ddd67b2"}}}, "crowdsecurity/thehive-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/thehive-logs\ndescription: \"Parse Thehive logs\"\nfilter: \"evt.Parsed.program == 'thehive'\"\nnodes:\n  - grok:\n      pattern: '\\[info\\] o.t.s.AccessLogFilter \\[.*\\] %{IP:source_ip} POST /api/v1/login took %{INT}ms and returned 401 %{INT} bytes'\n      apply_on: message\nstatics:\n  - meta: log_type\n    value: thehive_failed_auth\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    value: toto", "description": "Parse Thehive logs", "path": "parsers/s01-parse/crowdsecurity/thehive-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "777997fbca7b59c7cd67a890e298ff8cbc648013a8e9db484ec1754318b3e389"}}}, "crowdsecurity/traefik-logs": {"content": "# co-authored with gmelodie (https://github.com/gmelodie)\nname: crowdsecurity/traefik-logs\ndescription: \"Parse Traefik access logs\"\nfilter: \"evt.Parsed.program startsWith 'traefik'\"\n#debug: true\nonsuccess: next_stage\npattern_syntax:\n  TRAEFIK_ROUTER: '(%{USER}@%{URIHOST}|\\-)'\n  TRAEFIK_SERVER_URL: '(%{URI}|\\-)'\n  NUMBER_MINUS: '[0-9-]+'\n  NGCUSTOMUSER: '[a-zA-Z0-9\\.\\@\\-\\+_%]+'\n  NGINXACCESS2: '%{IPORHOST:remote_addr} - %{NGCUSTOMUSER:remote_user} \\[%{HTTPDATE:time_local}\\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER_MINUS:status} %{NUMBER_MINUS:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"'\nnodes:\n  - grok: # CLF parser\n      pattern: '%{NGINXACCESS2} %{NUMBER:number_of_requests_received_since_traefik_started} \"%{TRAEFIK_ROUTER:traefik_router_name}\" \"%{TRAEFIK_SERVER_URL:traefik_server_url}\" %{NUMBER:request_duration_in_ms}ms'\n      apply_on: message\n# We must use evt.Parsed.message to make sure we respect s00 stage\n  - filter: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"traefik\") in [\"\", nil]\n    statics:\n      - parsed: remote_addr\n        expression: evt.Unmarshaled.traefik.ClientHost\n      - parsed: dest_addr\n        ## Split dest_addr to get IP only as this is original functionality\n        expression: Split(evt.Unmarshaled.traefik.ClientAddr, ':')[0]\n      - parsed: request_addr\n        expression: evt.Unmarshaled.traefik.RequestAddr\n      - parsed: service_addr\n        ## Split service_addr to get IP only as this is original functionality\n        expression: \"evt.Unmarshaled.traefik.ServiceAddr != nil ? Split(evt.Unmarshaled.traefik.ServiceAddr, ':')[0] : nil\"\n      - parsed: http_user_agent\n        expression: evt.Unmarshaled.traefik[\"request_User-Agent\"] ## We have to access via [] as the key contains a dash \n      - parsed: body_bytes_sent\n        ## We have to check if DownstreamContentSize is nil, as it will cause EXPR error if it is \n        expression: \"evt.Unmarshaled.traefik.DownstreamContentSize != nil ? int(evt.Unmarshaled.traefik.DownstreamContentSize) : nil\"\n      - parsed: request_duration_in_ms\n        expression: int(evt.Unmarshaled.traefik.Duration)\n      - parsed: traefik_router_name\n        expression: evt.Unmarshaled.traefik.RouterName\n      - parsed: time_local\n        expression: evt.Unmarshaled.traefik.time\n      - parsed: verb\n        expression: evt.Unmarshaled.traefik.RequestMethod\n      - parsed: request\n        expression: evt.Unmarshaled.traefik.RequestPath\n      - parsed: http_version\n        ## Split http_version to get version only as this is original functionality\n        expression: Split(evt.Unmarshaled.traefik.RequestProtocol, '/')[1]\n      - parsed: status\n        expression: int(evt.Unmarshaled.traefik.DownstreamStatus)\nstatics:\n  - meta: service\n    value: http\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: user\n    expression: \"evt.Parsed.remote_user\"\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: log_type\n    value: http_access-log\n  - target: evt.StrTime\n    expression: \"evt.Parsed.time_local\"\n  - meta: traefik_router_name\n    expression: \"evt.Parsed.traefik_router_name\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n", "description": "Parse Traefik access logs", "path": "parsers/s01-parse/crowdsecurity/traefik-logs.yaml", "stage": "s01-parse", "version": "0.9", "versions": {"0.1": {"digest": "3dcf2e166ad138a69d009bfd364e30dee50debc5ed882ed9d8bbf52f2509c600"}, "0.2": {"digest": "a461c760c7a669f5c7aab35587c65f0b08b145002ff77f4907e0b94d997b32c8"}, "0.3": {"digest": "e7691b4dddb010d87945c12753ce6e5c9da4d069694227000b0cc6cdf66f4810"}, "0.4": {"digest": "36eed0ae5e3fdf0a59538f0af2262311cadc81d7d5c9fba9051cf69c41cd3533"}, "0.5": {"digest": "5b2ad9def31d7314a701a8f3be0f7e80e15a036dc0d13ab2bd45cf04eb30a121"}, "0.6": {"digest": "e200a068b6781f26f9ce07e20e0e7d74ebb63c8977fa1f6a2618d1a05f71624e"}, "0.7": {"digest": "b2ff5d3441d12d72c50af05dd8208f2359b30bb8f96aa18760f35c46fb1859da"}, "0.8": {"digest": "573d81db95901f40f3150e651696dff2c236b6ad2b4fca81f6b550b415466439"}, "0.9": {"digest": "0b3eb296548ee739a7665ddbbc62e36163e1f347b7dc2595f1d955731d5c7336"}}}, "crowdsecurity/unifi-logs": {"content": "filter: \"evt.Line.Labels.type == 'unifi'\"\nonsuccess: next_stage\npattern_syntax:\n  SYSLOGBASE_UNIFI: '(?:%{SYSLOGTIMESTAMP:timestamp}|%{TIMESTAMP_ISO8601:timestamp8601}) (?:%{SYSLOGFACILITY} )?%{DATA:logsource}+(?: %{SYSLOGPROG}:|)'\n  SYSLOGLINE_UNIFI: '%{SYSLOGBASE_UNIFI} %{GREEDYDATA:message}'\nname: crowdsecurity/unifi-logs\nnodes:\n  - grok:\n      pattern: \"^%{SYSLOGLINE_UNIFI}\"\n      apply_on: Line.Raw\nstatics:\n  - meta: machine\n    expression: evt.Parsed.logsource\n  - parsed: \"logsource\"\n    value: \"syslog\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp8601\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module", "path": "parsers/s00-raw/crowdsecurity/unifi-logs.yaml", "stage": "s00-raw", "version": "0.1", "versions": {"0.1": {"digest": "fd8bfd95085177fec395efdddf00161bcf490a2d156aabcea5fc1c2cae6f3f17"}}}, "crowdsecurity/vsftpd-logs": {"content": "onsuccess: next_stage\nname: vsftpd-logs\ndescription: \"Parse VSFTPD logs\"\nfilter: \"evt.Parsed.program == 'vsftpd'\"\n#debug: true\npattern_syntax:\n  # Custom grok for some versions that add an extra space before single digit monthday\n  # Not perfect because extra ,spaces are not trimmed in resulting 'timestamp' capture\n  CUSTOM_HTTPDERROR_DATE: '%{DAY} %{MONTH} (?:\\s?)%{MONTHDAY} %{TIME} %{YEAR}'\n  FTP_AUTH_FAIL: '%{CUSTOM_HTTPDERROR_DATE:timestamp} \\[pid %{NUMBER}\\] \\[%{GREEDYDATA:user}\\] FAIL LOGIN: Client \"(::ffff:)?%{IP:source_ip}\"'\n  FTP_DENIED_USER: '%{CUSTOM_HTTPDERROR_DATE:timestamp} \\[pid %{NUMBER}\\] \\[%{GREEDYDATA:user}\\] FTP response: Client \"(::ffff:)?%{IP:source_ip}\", \"530 Permission denied.\"'\nnodes:\n  - grok:\n      pattern: \"%{FTP_AUTH_FAIL}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{FTP_DENIED_USER}\"\n      apply_on: message\nstatics:\n    - meta: program\n      value: vsftpd\n    - meta: log_type\n      value: ftp_failed_auth\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: user\n      expression: \"evt.Parsed.user\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - target: evt.StrTimeFormat\n      value: \"Mon Jan _2 15:04:05 2006\"\n", "description": "Parse VSFTPD logs", "path": "parsers/s01-parse/crowdsecurity/vsftpd-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "39d986c6005d2b96b8941a71ee81c4af35bd22b1094685a8b7f7fbc00e1b4f7f"}, "0.2": {"digest": "a06ecb5ef08f47fd4e0d70abfa1c78a8570488c8741d660614d97354c17cc4cc"}, "0.3": {"digest": "2d32b1f35244aeeaa36e66ae3f5538d2d1aa22a66cbe350b26a3845bf99de4c5"}}}, "crowdsecurity/whitelists": {"content": "name: crowdsecurity/whitelists\ndescription: \"Whitelist events from private ipv4 addresses\"\nwhitelist:\n  reason: \"private ipv4/ipv6 ip/ranges\"\n  ip: \n    - \"127.0.0.1\"\n    - \"::1\"\n  cidr:\n    - \"192.168.0.0/16\"\n    - \"10.0.0.0/8\"\n    - \"172.16.0.0/12\"\n  # expression:\n  #   - \"'foo.com' in evt.Meta.source_ip.reverse\" \n\n", "description": "Whitelist events from private ipv4 addresses", "path": "parsers/s02-enrich/crowdsecurity/whitelists.yaml", "stage": "s02-enrich", "version": "0.2", "versions": {"0.1": {"digest": "f51f41270a7ff9900d9c815beccc3ded36a1c377a6e21dd19f9d8209623789b1"}, "0.2": {"digest": "326da7ad71aee690bf71c5a392ac6dbd028f502e617a8b8ed7a5c5554ecaf72c"}}}, "crowdsecurity/windows-auth": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.Channel == 'Security' && evt.Parsed.EventID == '4625'\"\nname: crowdsecurity/windows-auth\ndescription: \"Parse windows authentication failure events (id 4625)\"\nstatics:\n    - meta: source_ip\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='IpAddress']\")\n    - meta: username\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetUserName']\")\n    - meta: log_type\n      value: windows_failed_auth", "description": "Parse windows authentication failure events (id 4625)", "path": "parsers/s01-parse/crowdsecurity/windows-auth.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "0.2": {"digest": "c0e604a0512e61cdd102c9ebc9267c3e546712f05b75a912695808a45e08dc51"}}}, "crowdsecurity/windows-firewall-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'windows-firewall' and evt.Parsed.message contains ' DROP TCP ' and evt.Parsed.message contains ' RECEIVE'\"\nname: crowdsecurity/windows-firewall-logs\ndescription: \"Parse windows firewall drop logs\"\ngrok:\n  pattern: \"%{TIMESTAMP_ISO8601:date} DROP TCP %{IP:src_ip} %{IP:dst_ip} %{INT:src_port} %{INT:dst_port} %{INT:size} %{WORD:flags} %{INT:tcpsyn} %{INT:tcpack} %{INT:window} - - - RECEIVE( %{INT:pid})?\" \n  apply_on: message\nstatics:\n    - meta: service\n      value: tcp\n    - meta: log_type\n      value: iptables_drop\n    - meta: source_ip\n      expression: \"evt.Parsed.src_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.date\n\n", "description": "Parse windows firewall drop logs", "path": "parsers/s01-parse/crowdsecurity/windows-firewall-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "a093e7fccc9ca714c70284b7f2898a1e2c785b565fbdc63778960c07306ecf7f"}, "0.2": {"digest": "44779151d40327fa5b2a882165dac19c71f47a75aa994dda0ff9190b7417ef5f"}, "0.3": {"digest": "006ab41688651b1151c017f6a9da16e6ae86e74d171c9a28dbbb092ca8a38b94"}}}, "crowdsecurity/windows-logs": {"content": "filter: \"evt.Line.Module == 'wineventlog'\"\nonsuccess: next_stage\nname: crowdsecurity/windows-eventlog\nstatics:\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n  - target: evt.StrTime\n    #We need XMLGetAttributeValue because etree does not support getting an attribute value (or at least, i didn't manage to make the correct query)\n    expression: XMLGetAttributeValue(evt.Line.Raw, \"/Event/System[1]/TimeCreated\", \"SystemTime\")\n  - parsed: Channel\n    expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/System[1]/Channel\")\n  - parsed: EventID\n    expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/System[1]/EventID\")\n  - parsed: Source\n    expression: XMLGetAttributeValue(evt.Line.Raw, \"/Event/System[1]/Provider\", \"Name\")\n  - parsed: Computer\n    expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/System[1]/Computer\")\n  - parsed: UserSID\n    expression: XMLGetAttributeValue(evt.Line.Raw, \"/Event/System[1]/Security\", \"UserID\")\n  - parsed: program\n    expression: evt.Line.Labels.type\n---\nfilter: \"evt.Line.Module != 'wineventlog'\"\nonsuccess: next_stage\nname: crowdsecurity/windows-non-eventlog\nstatics:\n  - parsed: message\n    expression: evt.Line.Raw\n  - parsed: program\n    expression: evt.Line.Labels.type\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n\n", "path": "parsers/s00-raw/crowdsecurity/windows-logs.yaml", "stage": "s00-raw", "version": "0.4", "versions": {"0.1": {"digest": "f51a9f48a321f6935c44515ee8ec312d7771a6ced5bf63d9ab8dede2a3b77e9d"}, "0.2": {"digest": "65d086df4579e371213259dffdf4ff22b27a107a4200327b0b86b5605fed4d43"}, "0.3": {"digest": "686608f2d4fb9813b41bd8a1d8683a0a2ee69ff453b6dfd2905e27e1d38634d2"}, "0.4": {"digest": "800aad4d3be5717d2c389a774462b54eb8ccd2f23755e328fb7d8865f426fa67"}}}, "crowdsecurity/wireguard-logs": {"content": "filter: \"evt.Parsed.program == 'kernel' and evt.Parsed.message contains 'wireguard:'\"\n#debug: true\nonsuccess: next_stage\nname: crowdsecurity/wireguard-logs\ndescription: \"Parses wireguard log via dyndbg\"\npattern_syntax:\n  WIREGUARD_INVALID_HANDSHAKE: 'wireguard: wg%{INT}: Packet has unallowed src IP \\(%{IP}\\) from peer %{INT} \\(%{IP:source_ip}:%{INT}\\)'\n  WIREGUARD_UNAUTHORIZED_PACKET: 'wireguard: wg%{INT}: Invalid handshake initiation from %{IP:source_ip}:%{INT}'\nnodes:\n - grok:\n     name: \"WIREGUARD_INVALID_HANDSHAKE\"\n     apply_on: message\n     statics:\n       - meta: log_type\n         value: wireguard_failed_auth\n       - meta: log_subtype\n         value: wireguard_invalid_handshake\n - grok:\n     name: \"WIREGUARD_UNAUTHORIZED_PACKET\"\n     apply_on: message\n     statics:\n       - meta: log_type\n         value: wireguard_failed_auth\n       - meta: log_subtype\n         value: wireguard_unauthorized_packet\n\nstatics:\n - meta: service\n   value: wireguard\n - meta: source_ip\n   expression: \"evt.Parsed.source_ip\"", "description": "Parses wireguard log via dyndbg", "path": "parsers/s01-parse/crowdsecurity/wireguard-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "fa206b8f4bed11951bf44f85790c87c9eebd410c1ab623347cbe6ebf64274229"}}}, "darkclip/charon-ipsec-logs": {"content": "name: darkclip/charon-ipsec-logs\n#debug: true\nfilter: \"evt.Parsed.program == 'charon'\"\ndescription: Parse Charon IPsec logs\nonsuccess: next_stage\npattern_syntax:\n  IPSEC_ID: '<%{DATA}\\|%{NUMBER}>'\nnodes:\n  - grok:\n      pattern: '^%{NUMBER:thread}\\[%{WORD:subsys}\\] %{IPSEC_ID:ipsec_id}.*verification.*failed.*'\n      apply_on: message\n    stash:\n      - name: charon_ipsec_logs\n        key: evt.Parsed.thread\n        value: evt.Parsed.ipsec_id\n        ttl: 5s\n        size: 10\n  - grok:\n      pattern: '^%{NUMBER:thread}\\[%{WORD:subsys}\\] %{IPSEC_ID:ipsec_id}.*authentication.*failed.*'\n      apply_on: message\n    stash:\n      - name: charon_ipsec_logs\n        key: evt.Parsed.thread\n        value: evt.Parsed.ipsec_id\n        ttl: 5s\n        size: 10\n  - grok:\n      pattern: '^%{NUMBER:thread}\\[%{WORD:subsys}\\] %{IPSEC_ID:ipsec_id} sending packet\\: from %{IP:target_ip}\\[%{NUMBER:target_port}\\] to %{IP:source_ip}\\[%{NUMBER:source_port}\\].*'\n      apply_on: message\n    nodes:\n      - filter: \"GetFromStash('charon_ipsec_logs', evt.Parsed.thread) != '' && GetFromStash('charon_ipsec_logs', evt.Parsed.thread) == evt.Parsed.ipsec_id\"\n        statics:\n          - meta: log_type\n            value: charon_ipsec_auth_fail\n          - meta: source_ip\n            expression: evt.Parsed.source_ip\n\nstatics:\n  - meta: service\n    value: charon_ipsec\n", "description": "Parse Charon IPsec logs", "path": "parsers/s01-parse/darkclip/charon-ipsec-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "78622315a1cd3b5c4c8650479388ca4846daa6341134a172735044486be8072a"}}}, "firewallservices/lemonldap-ng": {"content": "filter: \"evt.Parsed.program in ['LLNG','lemonldap-ng']\"\nname: firewall-services/lemonldap-ng-logs\ndescription: \"Parse Lemonldap::NG logs\"\nonsuccess: next_stage\n#debug: true\nnodes:\n  - grok:\n      pattern: (\\[warn\\]|Lemonldap::NG :) %{USERNAME:user} was not found in LDAP directory \\(%{IP:src_ip}\\)\n      apply_on: message\n  - grok:\n      pattern: (\\[warn\\]|Lemonldap::NG :) Bad password for %{USERNAME:user} \\(%{IP:src_ip}\\)\n      apply_on: message\nstatics:\n  - meta: service\n    value: llng\n  - meta: user\n    expression: \"evt.Parsed.user\"\n  - meta: log_type\n    value: llng_auth_fail\n  - meta: source_ip\n    expression: \"evt.Parsed.src_ip\"\n", "description": "Parse Lemonldap::NG logs", "path": "parsers/s01-parse/firewallservices/lemonldap-ng.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "c83b26a572bdb7ea16dcc004729dff7977aa5293466fba834bb7e2d740526ec1"}}}, "firewallservices/pf-logs": {"content": "# For more information see\n# https://github.com/opnsense/ports/blob/master/opnsense/filterlog/files/description.txt\n# and\n# https://docs.netgate.com/pfsense/en/latest/monitoring/logs/raw-filter-format.html\nfilter: \"evt.Parsed.program == 'filterlog' or evt.Parsed.message matches '^filterlog:'\"\nname: firewallservices/pf-logs\ndescription: \"Parse packet filter logs\"\nformat: 2.0\npattern_syntax:\n  # WORD including special characters\n  PF_WORD: '%{USERNAME}'\n  \n  # rulenr, subrulenr, anchorname, label | \"0\", interface, reason, action, dir\n  PF_BASE: '%{INT:rule},(%{INT:sub_rule})?,(%{WORD:anchorname})?,(%{WORD:tracker}| 0),%{PF_WORD:iface},%{WORD:reason},%{WORD:action},%{WORD:direction}'\n\n  # tos, ecn, ttl, id, offset, flags, protonum, protoname, length, src, dst\n  PF_IPV4_DATA: '%{BASE16NUM:ip4_tos},(%{INT:ip4_ecn})?,%{INT:ip4_ttl},%{INT:ip4_id},%{INT:ip4_offset},%{WORD:ip4_flags},%{INT:ip4_proto_id},%{WORD:ip4_proto}'\n  # class, flow, hoplimit, protoname, protonum\n  PF_IPV6_DATA: '%{BASE16NUM:ip6_class},%{BASE16NUM:ip6_flow_label},%{INT:ip6_hop_limit},%{WORD:ip6_proto},%{INT:ip6_proto_id}'\n  # ipversion, ..., length, src, dst\n  PF_IP: '%{INT:ip_ver},(%{PF_IPV4_DATA}|%{PF_IPV6_DATA}),%{INT:length},%{IP:src_ip},%{IP:dst_ip}'\n\n  # srcport, dstport, datalen\n  PF_UDP_DATA: '%{POSINT:src_port},%{POSINT:dst_port},%{INT:data_length}'\n  # srcport, dstport, datalen, flags, seq, ack, window, urg, options\n  PF_TCP_DATA: '%{WORD:tcp_flags},%{INT:sequence_number},(?:%{INT:ack_number})?,%{INT:tcp_window},(%{DATA:urg_data})?,%{GREEDYDATA:tcp_options}'\n  # both protocols start with the same three values\n  PF_PROTOCOL: '%{PF_UDP_DATA}(,%{PF_TCP_DATA})?'\ngrok:\n  pattern: \"%{PF_BASE},%{PF_IP},%{PF_PROTOCOL}\"\n  apply_on: message\nstatics:\n  - meta: log_type\n    value: pf\n---\nfilter: \"evt.Meta.log_type == 'pf' and evt.Parsed.action == 'block'\"\nname: firewallservices/pf-logs-drop\ndescription: \"Identify dropped packets\"\nonsuccess: next_stage\nstatics:\n  - meta: service\n    expression: \"evt.Parsed.ip4_proto != nil ? evt.Parsed.ip4_proto : evt.Parsed.ip6_proto\"\n  - meta: log_type\n    value: pf_drop\n  - meta: source_ip\n    expression: \"evt.Parsed.src_ip\"\n  - meta: rulenr\n    expression: \"evt.Parsed.rule\"\n  - meta: ruleid\n    expression: \"evt.Parsed.tracker\"\n  - meta: iface\n    expression: \"evt.Parsed.iface\"\n", "description": "Parse packet filter logs", "path": "parsers/s01-parse/firewallservices/pf-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "2c0bd0180b9e018fea93d65782840ddd6927c1992072734b68cd03b9877d6529"}, "0.2": {"digest": "51ce3d1dcda6976e95bffc259e7476b2d1e0dfeb3898c4575739622102780279"}, "0.3": {"digest": "2dda7e888f302ec6e51158ae64f2a0f7152a474f034b0728e735ad4ec05d5894"}, "0.4": {"digest": "13257da36d5003ab8f212c94fa8fc7f5249ef95341602a25d324a4a1416843e1"}, "0.5": {"digest": "934d874b2811c83374a3555cbeefcb7f60d43a64e30c990f2c26c2b368d9e044"}, "0.6": {"digest": "678c65229fd704a0cd9c63e4aa399977e31f28df79ccc7a561440836af98e232"}}}, "firewallservices/zimbra-logs": {"content": "filter: \"evt.Parsed.program startsWith 'zimbra'\"\nonsuccess: next_stage\n#debug: true\nname: firewallservices/zimbra-logs\ndescription: \"Parse zimbra authentication failures\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:time_local}:[0-9]+,.*%{WORD:proto}://%{HOSTNAME:server}:%{INT:port}/service/admin/soap/(AuthRequest)?\\] \\[.*oip=%{IP:src_ip}.*\\] SoapEngine - handler exception: authentication failed for \\[%{NGUSER:user}\\]'\n      apply_on: message\n    statics:\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:time_local}:[0-9]+,.*%{WORD:proto}://%{HOSTNAME:server}:%{INT:port}/service/admin/soap/(AuthRequest)?\\] \\[.*name=%{NGUSER:user}.*oip=%{IP:src_ip}.*\\] SoapEngine - handler exception'\n      apply_on: message\n    statics:\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:time_local}:[0-9]+,.*\\[.*oip=%{IP:src_ip}.*\\] imap - authentication failed for \\[%{NGUSER:user}\\]'\n      apply_on: message\n    statics:\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\nstatics:\n  - meta: service\n    value: zimbra\n  - meta: log_type\n    value: zimbra_auth_fail\n  - meta: source_ip\n    expression: \"evt.Parsed.src_ip\"\n  - meta: user\n    expression: \"evt.Parsed.user\"\n", "description": "Parse zimbra authentication failures", "path": "parsers/s01-parse/firewallservices/zimbra-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "f01fc443e18d03cc336c4a8a6cbf7afc47e0faba7b07129f58f802415fc8a394"}}}, "firix/authentik-logs": {"content": "name: firix/authentik-logs\ndescription: \"Parse Authentik logs\"\nfilter: \"Lower(evt.Parsed.program) == 'authentik'\"\nonsuccess: next_stage\nnodes:\n  - filter: \"JsonExtract(evt.Parsed.message, 'action') == 'login_failed'\"\n    statics:\n      - meta: log_type\n        value: authentik_failed_auth\n      - meta: username\n        expression: JsonExtract(evt.Parsed.message, \"context.username\")\n  - filter: \"JsonExtract(evt.Parsed.message, 'action') == 'invalid_identifier'\"\n    statics:\n      - meta: log_type\n        value: authentik_invalid_username\n      - meta: username\n        expression: JsonExtract(evt.Parsed.message, \"identifier\")\nstatics:\n  - meta: service\n    value: authentik\n  - meta: source_ip\n    expression: JsonExtract(evt.Parsed.message, \"client_ip\")\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Parsed.message, \"timestamp\") + \"Z\"\n", "description": "Parse Authentik logs", "path": "parsers/s01-parse/firix/authentik-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "b589807f2d6a21aa2dd07bf5a382f7c1d1ab18eb76108a714798258092d9e677"}}}, "fulljackz/proxmox-logs": {"content": "#debug: true\nname: fulljackz/proxmox-logs\ndescription: \"Parse proxmox logs for bruteforce attempts\"\nfilter: \"evt.Parsed.program == 'pvedaemon'\"\nonsuccess: next_stage\npattern_syntax:\n  PVE_AUTH_FAIL: 'authentication failure; rhost=%{IP:client_ip} user=%{USERNAME:source_user}@%{WORD:realm} msg='\nnodes:\n  - grok:\n      name: \"PVE_AUTH_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pve_failed-auth\n        - meta: source_user\n          expression: \"evt.Parsed.source_user\"\nstatics:\n    - meta: service\n      value: pvedaemon\n    - meta: source_ip\n      expression: \"evt.Parsed.client_ip\"\n", "description": "Parse proxmox logs for bruteforce attempts", "path": "parsers/s01-parse/fulljackz/proxmox-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "889e85448093d9acb0a65e625eeb3e889e2bc2d7a43c3877a7f047d63f7fab28"}, "0.2": {"digest": "51329df99cd69cf6cf0195157a8589adaf6928aa84bc852deeb868f30cca4932"}}}, "fulljackz/pureftpd-logs": {"content": "#debug: true\nname: fulljackz/pureftpd-logs\ndescription: \"Parse pureftpd logs for bruteforce attempts\"\nfilter: \"evt.Parsed.program == 'pure-ftpd'\"\nonsuccess: next_stage\npattern_syntax:\n  PFTPD_AUTH_FAIL: '\\(?@%{IP:client_ip}\\) \\[WARNING\\] Authentication failed for user \\[%{WORD:user}\\]'\nnodes:\n  - grok:\n      name: \"PFTPD_AUTH_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pftpd_failed-auth\n        - meta: source_user\n          expression: \"evt.Parsed.user\"\nstatics:\n    - meta: service\n      value: pureftpd\n    - meta: source_ip\n      expression: \"evt.Parsed.client_ip\"\n", "description": "Parse pureftpd logs for bruteforce attempts", "path": "parsers/s01-parse/fulljackz/pureftpd-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "db21a9c06ffb7dbcdd420b62b51e5c13333dcc48556faae3fb49c65058b16737"}}}, "gauth-fr/immich-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: gauth-fr/immich-logs\ndescription: \"Parse Immich logs\"\nfilter: \"evt.Parsed.program == 'immich'\"\npattern_syntax:\n  IMMICH_CUSTOMDATE_PM: \"%{MONTHNUM2}/%{MONTHDAY}/%{YEAR}, %{TIME} (AM|PM|am|pm)\"\n  IMMICH_CUSTOMDATE: \"%{MONTHNUM2}/%{MONTHDAY}/%{YEAR}, %{TIME}\"\nnodes:\n  - grok:\n      pattern: \".*%{IMMICH_CUSTOMDATE_PM:timestamp}.*Failed login attempt for user %{EMAILADDRESS:username} from ip address %{IP:source_ip}.*\"\n      #[Nest] 7  - 08/02/2023, 7:34:03 PM    WARN [AuthService] Failed login attempt for user fds@hdd.com from ip address 176.172.44.211\n\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: immich_failed_auth\n        - target: evt.StrTimeFormat\n          value: \"01/02/2006, 3:04:05 PM\"\n  - grok:\n      pattern: \".*%{IMMICH_CUSTOMDATE:timestamp}.*Failed login attempt for user %{EMAILADDRESS:username} from ip address %{IP:source_ip}.*\"\n      #[Nest] 7  - 08/02/2023, 7:34:03    WARN [AuthService] Failed login attempt for user fds@hdd.com from ip address 176.172.44.211\n\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: immich_failed_auth\n        - target: evt.StrTimeFormat\n          value: \"01/02/2006, 15:04:05\"\n\nstatics:\n    - meta: service\n      value: immich\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse Immich logs", "path": "parsers/s01-parse/gauth-fr/immich-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "5a9e8bfc8183eac0ae04713773e2fe932771a70eeebbd191b88d48abca944aad"}, "0.2": {"digest": "a8e655f18af1598eee89e0bc8a417f52c6c48139c8124b4e9bdee32357faa85d"}}}, "hitech95/nginx-mail-logs": {"content": "filter: \"evt.Parsed.program startsWith 'nginx'\"\nonsuccess: next_stage\nname: hitech95/nginx-mail-logs\ndescription: \"Parse Nginx Mail logs\"\npattern_syntax:\n  NO_DOUBLE_QUOTE: '[^\"]+'\nnodes:\n  - grok:\n      pattern: '%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?client %{IPORHOST:remote_addr}:%{POSINT:remote_port} connected to %{IPORHOST:dest_ip}:%{POSINT:dest_port}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: \"mail_new_session\"\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n  - grok:\n      pattern: '%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?%{GREEDYDATA:message}, client: %{IPORHOST:remote_addr}( using starttls,|,) server: %{IPORHOST:dest_ip}:%{POSINT:dest_port}(, login: \"%{NO_DOUBLE_QUOTE:username}\")?(, upstream: %{IPORHOST:proxy_ip}:%{POSINT:proxy_port})?'\n      apply_on: message\n    filter: \"evt.Parsed.message contains 'client '\"\n    statics:\n      - target: evt.StrTime\n        expression: evt.Parsed.time\n      - meta: username\n        expression: evt.Parsed.username\n      - meta: log_type\n        value: \"mail_auth\"\n    nodes:\n      - filter: \"evt.Parsed.message contains 'logged in'\"\n        statics:\n          - meta: sub_type\n            value: \"auth_success\"\n      - filter: \"evt.Parsed.message contains 'login failed'\"\n        pattern_syntax:\n          MAIL_HTTP_AUTH: 'client login failed: \"%{NO_DOUBLE_QUOTE:auth_result}\" while'\n        grok:\n          pattern: '%{MAIL_HTTP_AUTH}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: auth_result\n            expression: evt.Parsed.auth_result\n# these ones apply for both grok patterns\nstatics:\n  - meta: service\n    value: mail\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: dest_ip\n    expression: \"evt.Parsed.dest_ip\"\n  - meta: dest_port\n    expression: \"evt.Parsed.dest_port\"\n", "description": "Parse Nginx Mail logs", "path": "parsers/s01-parse/hitech95/nginx-mail-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "52e65aa1d01faed9b6c45508c1c13a75b0c7228ac734490baa43ae2d0976f392"}, "0.2": {"digest": "5013628977cb53d8e5f287db60811e9b896afec12dfbe8f3e578fdb889d62e8c"}}}, "inherent-io/keycloak-logs": {"content": "filter: evt.Parsed.program == 'keycloak'\nonsuccess: next_stage\nname: inherent-io/keycloak-logs\ndescription: \"Parse keycloak logs\"\npattern_syntax:\n  KEYCLOAK_DATETIME: \"[0-9]+-[0-9]+-[0-9]+ [0-2][0-9]:[0-5][0-9]:[0-5][0-9],[0-9]{3}\"\n  KEYCLOAK_LOG_LEVEL: \"(DEBUG|WARN|ERROR|INFO)\"\n  KEYCLOAK_LOG_LINE: '^%{KEYCLOAK_DATETIME:datetime} %{KEYCLOAK_LOG_LEVEL:log_level}\\s+\\[org.*\\]\\s+\\(executor-thread-\\d+\\)\\s+%{GREEDYDATA:parsed_message}'\nnodes:\n  - grok:\n      name: \"KEYCLOAK_LOG_LINE\"\n      apply_on: message\n    nodes:\n      - filter: ParseKV(evt.Parsed.parsed_message, evt.Unmarshaled, \"keycloak\") in [\"\", nil]\n        statics:\n          - meta: log_type\n            expression: trimSuffix(evt.Unmarshaled.keycloak.type, \",\")\n          - meta: error\n            expression: trimSuffix(evt.Unmarshaled.keycloak.error ?? \"\", \",\")\n          - meta: source_ip\n            expression: trimSuffix(evt.Unmarshaled.keycloak.ipAddress, \",\")\n          - meta: username\n            expression: trimSuffix(evt.Unmarshaled.keycloak.username, \",\")\nstatics:\n  - meta: service\n    value: keycloak\n  - target: evt.StrTime\n    expression: evt.Parsed.datetime\n  - meta: log_level\n    expression: evt.Parsed.log_level\n  - target: evt.StrTimeFormat\n    value: \"2006-01-02 15:04:05,999999999\"\n", "description": "Parse keycloak logs", "path": "parsers/s01-parse/inherent-io/keycloak-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "82a556a0a3caba20dfc0d2cf5a6b794014cf0154dae388e979a249751673a5b2"}, "0.2": {"digest": "813c80f85c54accb12fed144d7e6914038e4ef88df51baf1b2722a0f717a270e"}}}, "jbowdre/miniflux-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: jbowdre/miniflux-logs\ndescription: \"Parse Miniflux logs\"\nfilter: \"evt.Parsed.program == 'miniflux'\"\n\nnodes:\n  - grok:\n      pattern: '.*time=%{DATA:timestamp} .*authentication_failed=true client_ip=%{IP:source_ip} .*username=%{USERNAME:username} .*error=\"store: invalid password for \\\\\"%{USERNAME}\\\\\".*\"'\n      # miniflux  | time=2024-01-12T22:55:30.265Z level=WARN msg=\"Incorrect username or password\" authentication_failed=true client_ip=192.168.0.254 user_agent=\"Mozilla/5.0 (X11; CrOS x86_64 14541.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\" username=user1 error=\"store: invalid password for \\\"user1\\\" (crypto/bcrypt: hashedPassword is not the hash of the given password)\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: miniflux_failed_auth\n        - meta: log_subtype\n          value: miniflux_bad_password\n        - meta: evt.StrTimeFormat\n          value: \"2006-01-02T15:04:05.999Z\"\n  - grok:\n      pattern: '.*time=%{DATA:timestamp} .*authentication_failed=true client_ip=%{IP:source_ip} .*username=%{USERNAME:username} .*error=\"store: unable to find this user: %{USERNAME}\"'\n      # miniflux  | time=2024-01-12T22:54:56.307Z level=WARN msg=\"Incorrect username or password\" authentication_failed=true client_ip=192.168.0.254 user_agent=\"Mozilla/5.0 (X11; CrOS x86_64 14541.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\" username=hacker1 error=\"store: unable to find this user: hacker1\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: miniflux_failed_auth\n        - meta: log_subtype\n          value: miniflux_bad_user\n        - meta: evt.StrTimeFormat\n          value: \"2006-01-02T15:04:05.999Z\"\n\nstatics:\n    - meta: service\n      value: miniflux\n    - meta: user\n      expression: evt.Parsed.username\n    - meta: source_ip\n      expression: evt.Parsed.source_ip\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n\n", "description": "Parse Miniflux logs", "path": "parsers/s01-parse/jbowdre/miniflux-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "abb550ae0d333a6bf061b6aa37dcc1afe2af65c30c3e08e77394dee02b8b1b57"}}}, "jusabatier/apereo-cas-audit-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'cas'\"\nname: jusabatier/apereo-cas-audit-logs\ndescription: \"Parse apereo CAS Audits logs\"\npattern_syntax:\n# The IP grok pattern that ships with crowdsec is buggy and does not capture the last digit of an IP if it is the last thing it matches, and the last octet starts with a 2\n# https://github.com/crowdsecurity/crowdsec/issues/938\n  IPv4_WORKAROUND: (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\n  IP_WORKAROUND: (?:%{IPV6}|%{IPv4_WORKAROUND})\n  SECOND_WORKAROUND: '(?:[0-5]?[0-9]|60)?'\n  TIMESTAMP_WORKAROUND: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND_WORKAROUND})?%{ISO8601_TIMEZONE}?'\n  CAS_AUTH_FAIL: '^%{TIMESTAMP_WORKAROUND:time}(?:,\\d+)? %{LOGLEVEL:loglevel} \\[%{DATA:threadname}\\] - (.*)\\|CAS\\|(.*)\\|AUTHENTICATION_FAILED\\|%{USERNAME:cas_invalid_user}\\|%{IP_WORKAROUND:cas_client_ip}\\|(.*)$'\nnodes:\n  - grok: \n      name: \"CAS_AUTH_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: cas_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.cas_invalid_user\"\n        - target: evt.StrTime\n          expression: evt.Parsed.time\nstatics:\n    - meta: service\n      value: cas\n    - meta: source_ip\n      expression: \"evt.Parsed.cas_client_ip\"\n", "description": "Parse apereo CAS Audits logs", "path": "parsers/s01-parse/jusabatier/apereo-cas-audit-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "af0a0f7f973f2e7234b8b1866c3f4182e0b8945eedcf2dee2d0556a5aab87b6c"}, "0.2": {"digest": "a8c04c2fd8c3c0980a0aec849bcc044c1140ca971a03cf606742228a584a49fa"}}}, "lourys/pterodactyl-wings-logs": {"content": "name: lourys/pterodactyl-wings-logs\ndescription: \"Parse Pterodactyl wings logs\"\npattern_syntax:\n  PTERO_TIME: \"\\\\b[A-Z][a-z]{2}.*\\\\d{1,2} \\\\d{2}:\\\\d{2}:\\\\d{2}\\\\b\"\nfilter: \"evt.Parsed.program == 'pterodactyl'\"\ndebug: false\nonsuccess: next_stage\nnodes:\n  - grok:\n      pattern: '^\\s*WARN: \\[%{PTERO_TIME:time}.*?\\] failed to validate user credentials \\(invalid format\\) ip=%{IPORHOST:source_ip}:%{NUMBER:source_port}.* username=%{USERNAME:username}$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pterodactly_wings_invalid_format\n  - grok:\n      pattern: '^\\s*WARN: \\[%{PTERO_TIME:time}.*?\\] failed to validate user credentials \\(invalid username or password\\) ip=%{IPORHOST:source_ip}:%{NUMBER:source_port}.* username=%{USERNAME:username}$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pterodactly_wings_invalid_username_or_password\nstatics:\n    - meta: service\n      value: pterodactyl\n    - meta: source_ip\n      expression: evt.Parsed.source_ip\n    - meta: target_user\n      expression: evt.Parsed.username\n    - target: evt.StrTime\n      expression: evt.Parsed.time\n", "description": "Parse Pterodactyl wings logs", "path": "parsers/s01-parse/lourys/pterodactyl-wings-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "cf8d159aaa3091b95c9bfe97ef942a2742c65b303c101c2822d5bcfefabda19b"}, "0.2": {"digest": "b52b21544853b162e2841ebe6a269349e41ab9bc5567dd5374d140b3f901242f"}, "0.3": {"digest": "1d528cff8ec66f866a1ef94b3ca914f92f4de14a22c5720156412516a2511a68"}}}, "mstilkerich/bind9-logs": {"content": "---\nfilter: \"Upper(evt.Parsed.program) == 'NAMED'\"\n#debug: true\nonsuccess: next_stage\npattern_syntax:\n  BIND9_TIMESTAMP_DATE: '%{MONTHDAY:ts_d}-%{MONTH:ts_m}-%{YEAR:ts_y}'\n  BIND9_TIMESTAMP_TIMEMS: '\\d{3}'\n  BIND9_TIMESTAMP_TIME: '%{TIME:ts_t}\\.%{BIND9_TIMESTAMP_TIMEMS:ts_ms}'\n  BIND9_TIMESTAMP: '%{BIND9_TIMESTAMP_DATE} %{BIND9_TIMESTAMP_TIME}'\n  # categories: security, client, update-security, etc.\n  BIND9_CATEGORY: '[a-z]+'\n  BIND9_SEVERITY: '[a-z]+'\n  BIND9_PREFIX: '^(%{BIND9_TIMESTAMP:timestamp} )?(%{BIND9_CATEGORY}: )?(%{BIND9_SEVERITY}: )?client @0x[0-9a-fA-F]+ %{IP:remote_addr}#%{POSINT:remote_port}.*: '\nname: mstilkerich/bind9\ndescription: \"Parse bind9 logs\"\nnodes:\n  # When multiple grok patterns are specified, only the first matching one is applied\n  - grok:\n      pattern: '^%{BIND9_PREFIX}zone transfer .* (?:denied|\\(NOTAUTH\\))\\s*$'\n      apply_on: message\n  - grok:\n      pattern: '^%{BIND9_PREFIX}bad zone transfer request: ''\\S+/IN'': non-authoritative zone (?:denied|\\(NOTAUTH\\))\\s*$'\n      apply_on: message\n  - grok:\n      pattern: '^%{BIND9_PREFIX}(?:view (?:internal|external): )?query(?: \\(cache\\))? .* (?:denied|\\(NOTAUTH\\))\\s*$'\n      apply_on: message\nstatics:\n  - meta: service\n    value: bind9\n  - meta: log_type\n    value: bind9_denied\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - target: evt.StrTime  # convert time format for dateparse-enrich\n    expression: \"\n      {Jan:'01',Feb:'02',Mar:'03',Apr:'04',May:'05',Jun:'06',Jul:'07',Aug:'08',Sep:'09',Oct:'10',Nov:'11',Dec:'12'}[evt.Parsed.ts_m]\n      + '/' + evt.Parsed.ts_d\n      + '/' + evt.Parsed.ts_y\n      + ' ' + evt.Parsed.ts_t\"\n", "description": "Parse bind9 logs", "path": "parsers/s01-parse/mstilkerich/bind9-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "dac58be63dd386df2c4e46b20ded0b98e66195a102c63d6a7e6cbcb2bfef276c"}, "0.2": {"digest": "34dd8aa4788b9a05bfeb42ba70c279e042bb4b63fd8184e05081bc2adb818bff"}}}, "mwinters-stuff/mailu-admin-logs": {"content": "# debug: true\nonsuccess: next_stage\nname: mwinters-stuff/mailu-admin-logs\ndescription: \"Parse mailu-admin logs\"\nfilter: \"evt.Parsed.program == 'mailu-admin'\"\ngrok:\n  pattern:  \"\\\\[%{TIMESTAMP_ISO8601:timestamp8601},.*\\\\] WARNING in limiter: Authentication attempt from %{IP:source_ip} has been rate-limited.\"\n  apply_on: message\nstatics:\n  - meta: log_type\n    value: mailu_admin_auth_attempt\n  - meta: service\n    value: mailu-admin\n  - meta: source_ip \n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    expression: \"evt.Parsed.timestamp8601\"\n", "description": "Parse mailu-admin logs", "path": "parsers/s01-parse/mwinters-stuff/mailu-admin-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "b69404738235f2b972d94bcf089a4f2473c56da39c62a6c16b372e4908dbed32"}}}, "openappsec/openappsec-logs": {"content": "name: openappsec/openappsec-logs\ndescription: \"Parse openappsec logs\"\nfilter: \"evt.Parsed.program == 'openappsec' && JsonExtract(evt.Parsed.message, 'eventAudience') == 'Security' && Lower(JsonExtract(evt.Parsed.message, 'eventSeverity')) in ['critical', 'high'] && Lower(JsonExtract(evt.Parsed.message, 'eventData.practiceSubType')) in ['web application','web api']\"  \ndebug: false\nonsuccess: next_stage\nstatics:\n  - meta: service\n    value: openappsec\n  - meta: log_type\n    value: openappsec_security_log\n  - target: evt.StrTimeFormat\n    value: \"2006-01-02T15:04:05\"\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Parsed.message, \"eventTime\")\n  - meta: event_name\n    expression: JsonExtract(evt.Parsed.message, \"eventName\")\n  - meta: event_severity\n    expression: JsonExtract(evt.Parsed.message, \"eventSeverity\")\n  - meta: event_priority\n    expression: JsonExtract(evt.Parsed.message, \"eventPriority\")\n  - meta: event_audience\n    expression: JsonExtract(evt.Parsed.message, \"eventAudience\")\n  - meta: source_ip\n    expression: JsonExtract(evt.Parsed.message, \"eventData.sourceIP\")\n  - meta: event_confidence\n    expression: JsonExtract(evt.Parsed.message, \"eventData.eventConfidence\")\n  - meta: security_action\n    expression: JsonExtract(evt.Parsed.message, \"eventData.securityAction\")\n  - meta: source_identifier\n    expression: JsonExtract(evt.Parsed.message, \"eventData.httpSourceId\")\n  - meta: matched_sample\n    expression: JsonExtract(evt.Parsed.message, \"eventData.matchedSample\")\n  - meta: matched_parameter\n    expression: JsonExtract(evt.Parsed.message, \"eventData.matchedParameter\")\n  - meta: matched_location\n    expression: JsonExtract(evt.Parsed.message, \"eventData.matchedLocation\")\n  - meta: incident_type\n    expression: JsonExtract(evt.Parsed.message, \"eventData.waapIncidentType\")", "description": "Parse openappsec logs", "path": "parsers/s01-parse/openappsec/openappsec-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "9d3a2398563eddd828a5503aebdcfaf12d895f65fe2f6d75b121d9f87fd52f1f"}}}, "plague-doctor/audiobookshelf-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"Upper(evt.Parsed.program) == 'AUDIOBOOKSHELF'\"\nname: plague-doctor/audiobookshelf-logs\ndescription: \"Parse Audiobookshelf logs\"\npattern_syntax:\n    ABS_FAILED_AUTH: '\\[Auth\\] Failed login attempt for username \\\\?\"%{USERNAME:username}\\\\?\" from ip %{IP:source_ip} \\(%{DATA:reason}\\)'\nnodes:\n    - grok:\n        pattern: '\\[%{TIMESTAMP_ISO8601:timestamp}\\] ERROR: %{ABS_FAILED_AUTH}'\n        apply_on: message\n      statics:\n        - meta: log_type\n          value: abs_failed_auth\n    - filter: 'UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"abs\") in [\"\", nil]'\n      grok:\n        pattern: \"%{ABS_FAILED_AUTH}\"\n        expression: evt.Unmarshaled.abs.message\n        statics:\n          - meta: log_type\n            value: abs_failed_auth\nstatics:\n    - meta: service\n      value: audiobookshelf\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: 'evt.Parsed.timestamp != \"\" ? evt.Parsed.timestamp : evt.Unmarshaled.abs.timestamp'\n    ## We check if the parser parsed the timestamp or if it within the json output\n    - meta: username\n      expression: \"evt.Parsed.username\"\n", "description": "Parse Audiobookshelf logs", "path": "parsers/s01-parse/plague-doctor/audiobookshelf-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "0ddcd5786e0667d930a92080969958540cb93a9891e04cd5f9d0049c03eae252"}}}, "schiz0phr3ne/prowlarr-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'Prowlarr'\"\nname: schiz0phr3ne/prowlarr-logs\ndescription: \"Parse Prowlarr Logs\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: '^\\[Warn\\] Auth: Auth-Failure ip %{IP:source_ip} username %{DATA:username}$'\n      apply_on: message\n  - grok:\n      pattern: \"%{DATE_YMD:date} %{TIME:time}\\\\|%{WORD:log_level}\\\\|Auth\\\\|Auth-Failure ip %{IPORHOST:source_ip} username '%{NOTDQUOTE:username}'\"\n      apply_on: message\n      statics:\n        - target: evt.Parsed.timestamp\n          expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n    onsuccess: next_stage\nstatics:\n    - meta: log_type\n      value: prowlarr_failed_authentication\n    - meta: service\n      value: prowlarr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: username\n      expression: evt.Parsed.username\n", "description": "Parse Prowlarr Logs", "path": "parsers/s01-parse/schiz0phr3ne/prowlarr-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "d061ec42abfa9633d082cd0a6a08ceef88b2cc623f316209b96de202d7cc9f3f"}, "0.2": {"digest": "1241ce93797a175bb42dcd08f1b01e3fe68342f25a9f7ba769f0cf4c223ec6ae"}}}, "schiz0phr3ne/radarr-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'Radarr'\"\nname: schiz0phr3ne/radarr-logs\ndescription: \"Parse Radarr Logs\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: '^\\[Warn\\] Auth: Auth-Failure ip %{IP:source_ip} username %{DATA:username}$'\n      apply_on: message\n    onsuccess: next_stage\n  - grok:\n      pattern: \"%{DATE_YMD:date} %{TIME:time}\\\\|%{WORD:log_level}\\\\|Auth\\\\|Auth-Failure ip %{IPORHOST:source_ip} username '%{NOTDQUOTE:username}'\"\n      apply_on: message\n      statics:\n        - target: evt.Parsed.timestamp\n          expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n    onsuccess: next_stage\n\nstatics:\n    - meta: service\n      value: radarr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: username\n      expression: evt.Parsed.username\n    - meta: log_type\n      value: radarr_failed_authentication\n", "description": "Parse Radarr Logs", "path": "parsers/s01-parse/schiz0phr3ne/radarr-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "0d9d4cb7e4a592ec3e56e89cb7fe97b22390d011c4b86ac85affd2db491049b0"}, "0.2": {"digest": "4bf7eb011ade9f74946a10dd8faeb8b78b96af92908fe2d6922f58f8a465991f"}}}, "schiz0phr3ne/sonarr-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program in ['mono', 'Sonarr']\"\nname: schiz0phr3ne/sonarr-logs\ndescription: \"Parse Sonarr Logs\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: '^\\[Warn\\] Auth: Auth-Failure ip %{IP:source_ip} username %{DATA:username}$'\n      apply_on: message\n  - grok:\n      pattern: \"%{DATE_YMD:date} %{TIME:time}\\\\|%{WORD:log_level}\\\\|Auth\\\\|Auth-Failure ip %{IPORHOST:source_ip} username '%{NOTDQUOTE:username}'\"\n      apply_on: message\n      statics:\n        - target: evt.Parsed.timestamp\n          expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n    onsuccess: next_stage\n\nstatics:\n    - meta: log_type\n      value: sonarr_failed_authentication\n    - meta: service\n      value: sonarr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: username\n      expression: evt.Parsed.username\n", "description": "Parse Sonarr Logs", "path": "parsers/s01-parse/schiz0phr3ne/sonarr-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "457e4e03b538b3f3a5ca4aadb3d26c695a6857c7ddbdae5d31dea87c164bdc67"}, "0.2": {"digest": "0ad020fa5caa6d7601fc2ceb54d68cc6d3caa31fdfab18158579c0da7a46a1ee"}}}, "thespad/sshesame-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'sshesame'\"\nname: thespad/sshesame-logs\ndescription: \"Parse sshesame logs\"\npattern_syntax:\n  SSHESAME_TIMESTAMP: '%{DATE_X} %{TIME}'\n  SSHESAME_LOGIN_PASSWD: '%{SSHESAME_TIMESTAMP:timestamp} \\[%{IP:source_ip}:\\d+\\] authentication for user \"%{USERNAME:sshesame_user}\" with password \"%{GREEDYDATA:sshesame_password}\" accepted'\n  SSHESAME_LOGIN_PUBKEY: '%{SSHESAME_TIMESTAMP:timestamp} \\[%{IP:source_ip}:\\d+\\] authentication for user \"%{USERNAME:sshesame_user}\" with public key \"%{GREEDYDATA:sshesame_pubkey}\" accepted'\n  SSHESAME_CMD: '%{SSHESAME_TIMESTAMP:timestamp} \\[%{IP:source_ip}:\\d+\\] \\[channel \\d+\\] command \"%{GREEDYDATA:sshesame_cmd}\" requested'\n  SSHESAME_INPUT: '%{SSHESAME_TIMESTAMP:timestamp} \\[%{IP:source_ip}:\\d+\\] \\[channel \\d+\\] input: \"%{GREEDYDATA:sshesame_input}\"'\nnodes:\n  - grok:\n      name: \"SSHESAME_LOGIN_PASSWD\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: sshesame_login\n        - meta: target_user\n          expression: \"evt.Parsed.sshesame_user\"\n  - grok:\n      name: \"SSHESAME_LOGIN_PUBKEY\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: sshesame_login\n        - meta: target_user\n          expression: \"evt.Parsed.sshesame_user\"\n  - grok:\n      name: \"SSHESAME_CMD\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: sshesame_cmd\n  - grok:\n      name: \"SSHESAME_INPUT\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: sshesame_input\nstatics:\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: service\n      value: sshesame\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: username\n      expression: \"evt.Parsed.sshesame_user\"\n    - meta: command\n      expression: \"evt.Parsed.sshesame_cmd\"\n    - meta: input\n      expression: \"evt.Parsed.sshesame_input\"\n", "description": "Parse sshesame logs", "path": "parsers/s01-parse/thespad/sshesame-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "7c778f2e6a003de5859de6bbbc91d549c7225c7e4b0b8c229f4e2ce7fecf088a"}, "0.2": {"digest": "4e0cb478023fc6bed1f04be0d8615f98446c1bb8f16680113af661f1d13ac953"}}}, "timokoessler/gitlab-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'GITLAB'\"\nname: timokoessler/gitlab-logs\ndescription: \"Parse GitLab Logs\"\nnodes:\n  - filter: |\n     JsonExtract(evt.Parsed.message, \"method\") == 'POST' &&\n     JsonExtract(evt.Parsed.message, \"path\") in ['/users/sign_in', '/users/auth/ldapmain/callback'] &&\n     any(JsonExtractSlice(evt.Parsed.message, \"params\"), {.key == 'user' && .value.login != ''}) &&\n     (JsonExtract(evt.Parsed.message, 'status') == '0' || JsonExtract(evt.Parsed.message, 'action') == 'failure')\n    statics:\n      - meta: log_type\n        value: \"gitlab_failed_password\"\n      - meta: username\n        expression: filter(JsonExtractSlice(evt.Parsed.message, \"params\"), {.key == 'user' && .value.login != ''})[0]['value']['login']\n  - filter: |\n     JsonExtract(evt.Parsed.message, \"method\") == 'POST' &&\n     JsonExtract(evt.Parsed.message, \"path\") == '/users/sign_in' &&\n     JsonExtract(evt.Parsed.message, 'params') contains 'otp_attempt' &&\n     JsonExtract(evt.Parsed.message, 'status') != '302'\n    statics:\n      - meta: log_type\n        value: \"gitlab_failed_totp\"\n\nstatics:\n  - meta: service\n    value: gitlab\n  - meta: source_ip\n    expression: JsonExtract(evt.Parsed.message, \"remote_ip\")\n  - parsed: timestamp\n    expression: JsonExtract(evt.Parsed.message, \"time\")\n  - target: evt.StrTime\n    expression: \"evt.Parsed.timestamp\"", "description": "Parse GitLab Logs", "path": "parsers/s01-parse/timokoessler/gitlab-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "14e3359355433275065f1451beb547ed3b282292af41b02c3121a71395138ac2"}}}, "timokoessler/mongodb-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'MONGODB'\"\nname: timokoessler/mongodb-logs\ndescription: \"Parse MongoDB logs\"\nnodes:\n  - filter: |\n     JsonExtract(evt.Parsed.message, \"c\") == 'ACCESS' &&\n     JsonExtract(evt.Parsed.message, \"msg\") == 'Authentication failed'\n    statics:\n      - meta: log_type\n        value: \"mongodb_failed_auth\"\n    grok:\n      pattern: '%{IPORHOST:remote_addr}'\n      expression: JsonExtract(evt.Parsed.message, \"attr.remote\")\n\nstatics:\n  - meta: service\n    value: mongodb\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - parsed: timestamp\n    expression: JsonExtract(evt.Parsed.message, \"t.$date\")\n  - target: evt.StrTime\n    expression: \"evt.Parsed.timestamp\"\n  - meta: username\n    expression: JsonExtract(evt.Parsed.message, \"attr.principalName\")\n  - meta: authentication_database\n    expression: JsonExtract(evt.Parsed.message, \"attr.authenticationDatabase\")", "description": "Parse MongoDB logs", "path": "parsers/s01-parse/timokoessler/mongodb-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "1e2e1a5beb799d0d533cfc5fc3a490c1860c55d518c3a3edb77f3c47ebc4c55b"}}}, "timokoessler/uptime-kuma-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'UPTIME-KUMA'\"\nname: timokoessler/uptime-kuma-logs\ndescription: \"Parse Uptime Kuma Logs\"\nnodes:\n  - grok:\n      pattern: '^%{TIMESTAMP_ISO8601:timestamp} \\[AUTH\\] WARN: Incorrect username or password for user %{DATA:username}\\. IP=%{IP:source_ip}$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: uptime_kuma_failed_password\n  - grok:\n      pattern: '^%{TIMESTAMP_ISO8601:timestamp} \\[AUTH\\] WARN: Invalid token provided for user %{DATA:username}\\. IP=%{IP:source_ip}$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: uptime_kuma_failed_totp\n\nstatics:\n    - meta: service\n      value: uptime-kuma\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: username\n      expression: evt.Parsed.username\n", "description": "Parse Uptime Kuma Logs", "path": "parsers/s01-parse/timokoessler/uptime-kuma-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "7fe2f059bf9f3a60c6ab262d5ac1efe98812a85fe6c11e4d91b6a25d8e42b4ac"}, "0.2": {"digest": "2732333702233c0854e833ae830f7ab8ac8aebeaf3decab285f865a00164701c"}}}, "xs539/bookstack-logs": {"content": "onsuccess: next_stage\nfilter: \"Lower(evt.Parsed.program) in ['bookstack']\"\nname: xs539/bookstack-logs\ndescription: \"Parse bookstack logs\"\npattern_syntax:\n  BOOKSTACK_USER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '%{NGINXERRTIME:timestamp}%{GREEDYDATA}Failed login for %{BOOKSTACK_USER:target_user}%{GREEDYDATA}client: %{IPORHOST:remote_addr}'\n      apply_on: message\n  - grok:\n      pattern: '\\[%{APACHEERRORTIME:timestamp}\\] \\[php:%{WORD:log_level}\\] \\[pid %{INT:pid}\\] \\[client %{IPORHOST:remote_addr}(:%{INT:remote_port})?\\] Failed login for %{BOOKSTACK_USER:target_user}(, referer: %{GREEDYDATA:http_referer})?'\n      apply_on: message\nstatics:\n    - meta: log_type\n      value: bookstack_failed_auth\n    - meta: target_user\n      expression: evt.Parsed.target_user\n    - meta: service\n      value: bookstack\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: evt.Parsed.remote_addr\n", "description": "Parse bookstack logs", "path": "parsers/s01-parse/xs539/bookstack-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "b03afaaff75e627a5e80108364233efe44f04e83056c18acde8a5f7671969f31"}, "0.2": {"digest": "6d27023413439c2b47ee1ac8de963e10e96c28a5f717b31b0c0c4deb24af5654"}}}, "xs539/joplin-server-logs": {"content": "onsuccess: next_stage\nfilter: \"Lower(evt.Parsed.program) in ['joplin-server']\"\nname: xs539/joplin-server-logs\ndescription: \"Parse Joplin Server logs\"\npattern_syntax:\n  JOPLIN_DATE: \"%{YEAR}[/-]%{MONTHNUM2}[/-]%{DAY2} %{HOUR}:%{MINUTE}:%{SECOND}\"\nnodes:\n  - grok:\n      pattern: '%{JOPLIN_DATE:timestamp}%{GREEDYDATA}/api/sessions: %{IPORHOST:remote_addr}%{GREEDYDATA}Invalid username or password%{GREEDYDATA}\"%{EMAILADDRESS:target_user}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: joplin_server_failed_auth\n        - meta: target_user\n          expression: evt.Parsed.target_user\nstatics:\n    - meta: service\n      value: joplin\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: evt.Parsed.remote_addr", "description": "Parse Joplin Server logs", "path": "parsers/s01-parse/xs539/joplin-server-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "ab679f8937f04d9800ce8153005b33c230b2d13fef690d727b30efd34d906703"}}}}, "postoverflows": {"crowdsecurity/auditd-nvm-whitelist-process": {"content": "name: crowdsecurity/auditd-nvm-whitelist-process\ndescription: \"Whitelist node version manager\"\nwhitelist:\n  reason: \"node version manager\"\n  expression: \n    - |\n      evt.Overflow.Alert.GetScenario() == 'crowdsecurity/auditd-sus-exec' && all(evt.Overflow.Alert.Events, {.GetMeta('exe') matches '\\\\.nvm\\\\/versions\\\\/node\\\\/v(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\/bin\\\\/node$'})", "description": "Whitelist node version manager", "path": "postoverflows/s01-whitelist/crowdsecurity/auditd-nvm-whitelist-process.yaml", "stage": "s01-whitelist", "version": "0.1", "versions": {"0.1": {"digest": "9198b74cb5a3913746bd926b58a35f90682acd1c49e89a19e1162f2e209b32f9"}}}, "crowdsecurity/auditd-whitelisted-process": {"content": "name: crowdsecurity/auditd-whitelisted-process\ndescription: \"Whitelist some process that are false-positives prone\"\nwhitelist:\n  reason: \"package managers\"\n  expression: \n    - \"all(evt.Overflow.Alert.Events, {.GetMeta('parent_progname') in ['/usr/bin/dpkg', '/usr/bin/dnf']})\"\n", "description": "Whitelist some process that are false-positives prone", "path": "postoverflows/s01-whitelist/crowdsecurity/auditd-whitelisted-process.yaml", "stage": "s01-whitelist", "version": "0.2", "versions": {"0.1": {"digest": "c6162d811539d4b670a705f2db949621fd9116b650acaacd19728e20e8a8731f"}, "0.2": {"digest": "cbaa6a494e48137d2d64d7782669f9d4bac23a7aa8fed24e4c25790a3e3a33e0"}}}, "crowdsecurity/cdn-qc-whitelsit": {"content": "name: crowdsecurity/quic-cdn-whitelist\ndescription: \"Whitelist CDN provider QUIC.cloud\"\nwhitelist:\n  reason: \"CDN provider QUIC.cloud\"\n  expression: \n    - \"evt.Overflow.Alert.Source.IP in File('quic_cloud_ips.txt')\"\n\ndata:\n  - source_url: https://www.quic.cloud/ips?ln\n    dest_file: quic_cloud_ips.txt\n    type: string\n\n", "description": "Whitelist CDN provider QUIC.cloud", "path": "postoverflows/s01-whitelist/crowdsecurity/cdn-qc-whitelsit.yaml", "stage": "s01-whitelist", "version": "0.1", "versions": {"0.1": {"digest": "cf604274ad512352979398bb20f33adc2c84a71b84810eb802bd9e7ca03bca0c"}}}, "crowdsecurity/cdn-whitelist": {"content": "name: crowdsecurity/cdn-whitelist\ndescription: \"Whitelist CDN providers\"\nwhitelist:\n  reason: \"CDN provider\"\n  expression: \n    - \"any(File('cloudflare_ips.txt'), { IpInRange(evt.Overflow.Alert.Source.IP ,#)})\"\n    - \"any(File('cloudflare_ip6s.txt'), { IpInRange(evt.Overflow.Alert.Source.IP ,#)})\"\ndata:\n  - source_url: https://www.cloudflare.com/ips-v4\n    dest_file: cloudflare_ips.txt\n    type: string\n  - source_url: https://www.cloudflare.com/ips-v6\n    dest_file: cloudflare_ip6s.txt\n    type: string\n", "description": "Whitelist CDN providers", "path": "postoverflows/s01-whitelist/crowdsecurity/cdn-whitelist.yaml", "stage": "s01-whitelist", "version": "0.4", "versions": {"0.1": {"digest": "d1cb42fbe9f3bb37f3cfa77ef5c60ec0b17dc3703bffb0d422dc6fe9cc0eb9f5"}, "0.2": {"digest": "7fb5b1474067c22192cf12effb7d508e316c130900cb00c108c0467d18d9d2c0"}, "0.3": {"digest": "63c933b81052c7776deb607ed7c115b89e59a88908123e04573853201122a45a"}, "0.4": {"digest": "626bd74a8f0dcf8e17d74238d08983693f5ac2d32b1a6ccd2d57fff02731eeaa"}}}, "crowdsecurity/cookiebot-whitelist": {"content": "name: crowdsecurity/cookiebot-whitelist\ndescription: \"Whitelist events from cookiebot compliance scanner\"\nwhitelist:\n  reason: \"Cookiebot compliance scanner ip address\"\n  expression: \n    - \"evt.Overflow.Alert.Source.IP in File('cookiebot_ips.txt')\"\n\ndata:\n  - source_url: https://hub-data.crowdsec.net/whitelists/benign_bots/cookiebot_ips.txt\n    dest_file: cookiebot_ips.txt\n    type: string", "description": "Whitelist events from cookiebot compliance scanner", "path": "postoverflows/s01-whitelist/crowdsecurity/cookiebot-whitelist.yaml", "stage": "s01-whitelist", "version": "0.2", "versions": {"0.1": {"digest": "7fd91de8bae664730d4165c670dff1d0d56a9cf1645d54978ae90241b14aa32a"}, "0.2": {"digest": "5ca0193a0a85c2e44e38caddaba705c4c2779c059845730225b185606cd103ca"}}}, "crowdsecurity/discord-crawler-whitelist": {"content": "name: crowdsecurity/discord-crawler-whitelist\ndescription: Discord PTR whitelist\nwhitelist:\n  reason: Discord PTR domain\n  expression:\n    - evt.Enriched.reverse_dns endsWith '.ptr.discord.com.'", "description": "Discord PTR whitelist", "path": "postoverflows/s01-whitelist/crowdsecurity/discord-crawler-whitelist.yaml", "stage": "s01-whitelist", "version": "0.1", "versions": {"0.1": {"digest": "d8eaee4f1ad3496ef253915ce0099d3c0cc2160785877efe306af35ffff929db"}}}, "crowdsecurity/ipv6_to_range": {"content": "onsuccess: next_stage\nfilter: \"evt.Overflow.Alert.Remediation == true && IsIPV6(evt.Overflow.Alert.Source.IP)\"\nname: crowdsecurity/ipv6_to_range\ndescription: \"\"\nstatics:\n  - target: evt.Overflow.Alert.Source.Value\n    expression: IpToRange(evt.Overflow.Alert.Source.IP, \"/64\")\n  - target: evt.Overflow.Alert.Source.Scope\n    value: Range", "path": "postoverflows/s00-enrich/crowdsecurity/ipv6_to_range.yaml", "stage": "s00-enrich", "version": "0.1", "versions": {"0.1": {"digest": "f22e5224b84175284024f9ca69e0c97327f0e0d86ff3ccfadf4f26257bf22b96"}}}, "crowdsecurity/rdns": {"content": "onsuccess: next_stage\nfilter: \"evt.Overflow.Alert.Remediation == true && evt.Overflow.Alert.GetScope() == 'Ip'\"\nname: crowdsecurity/rdns\ndescription: \"Lookup the DNS associated to the source IP only for overflows\"\nstatics:\n  - method: reverse_dns\n    expression: evt.Overflow.Alert.Source.IP\n  - meta: reverse_dns\n    expression: evt.Enriched.reverse_dns\n", "description": "Lookup the DNS associated to the source IP only for overflows", "path": "postoverflows/s00-enrich/crowdsecurity/rdns.yaml", "stage": "s00-enrich", "version": "0.3", "versions": {"0.1": {"digest": "796da42b262fe6574d78a7c7f95f73876d30a07751679a43afd018fc272e490a"}, "0.2": {"digest": "2b174b379f05edb3aa298b7037f6a85cde06b45893e4152492a51757408d517b"}, "0.3": {"digest": "e3f9e78178f48fc67f15137e092d65785c39c9308217a44e412987b8b06ac5ae"}}}, "crowdsecurity/seo-bots-whitelist": {"content": "name: crowdsecurity/seo-bots-whitelist\ndescription: \"Whitelist good search engine crawlers\"\nwhitelist:\n  reason: \"good bots (search engine crawlers)\"\n  expression: \n    - \"any(File('rdns_seo_bots.txt'), { len(#) > 0 && evt.Enriched.reverse_dns endsWith #})\"\n    - \"RegexpInFile(evt.Enriched.reverse_dns, 'rdns_seo_bots.regex')\"\n    - \"any(File('ip_seo_bots.txt'), { len(#) > 0 && IpInRange(evt.Overflow.Alert.Source.IP ,#)})\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/whitelists/benign_bots/search_engine_crawlers/rdns_seo_bots.txt\n    dest_file: rdns_seo_bots.txt\n    type: string\n  - source_url: https://hub-data.crowdsec.net/whitelists/benign_bots/search_engine_crawlers/rnds_seo_bots.regex\n    dest_file: rdns_seo_bots.regex\n    type: regexp\n  - source_url: https://hub-data.crowdsec.net/whitelists/benign_bots/search_engine_crawlers/ip_seo_bots.txt\n    dest_file: ip_seo_bots.txt\n    type: string", "description": "Whitelist good search engine crawlers", "path": "postoverflows/s01-whitelist/crowdsecurity/seo-bots-whitelist.yaml", "stage": "s01-whitelist", "version": "0.5", "versions": {"0.1": {"digest": "6df83947191a61ab73a87fccb3c285563bd9c4b3ef8027558d3510d262776ebe"}, "0.2": {"digest": "71eccc355bf181addcb1b5681c5fa99e087b23cbd8fed40ade7ff8a3b07488ef"}, "0.3": {"digest": "43968bb27b6f8cb8420bdcfa997627bce5f19e62fb96299af8c0e1e767ff0582"}, "0.4": {"digest": "f48b0841cc4cf03fe16f118ea1b5d64f4c1eb07cbacf4647bb0e871b4fd71f8c"}, "0.5": {"digest": "504c16dd87df828742e360a304f3e945c2e03537d7a7610e869f315d721c395a"}}}}, "scenarios": {"Dominic-Wagner/vaultwarden-bf": {"content": "# vaultwarden bruteforce\ntype: leaky\nname: Dominic-Wagner/vaultwarden-bf\ndescription: \"Detect vaultwarden bruteforce\"\nfilter: \"evt.Meta.log_type in ['vaultwarden_failed_auth', 'vaultwarden_failed_admin_auth', 'vaultwarden_failed_totp']\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: vaultwarden\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1110\n  label: \"Vaultwarden Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# vaultwarden user-enum\ntype: leaky\nname: Dominic-Wagner/vaultwarden-bf_user-enum\ndescription: \"Detect vaultwarden user enum bruteforce\"\nfilter: evt.Meta.log_type == 'vaultwarden_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nreprocess: true\nlabels:\n  service: vaultwarden\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Vaultwarden User Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n", "description": "Detect vaultwarden bruteforce", "path": "scenarios/Dominic-Wagner/vaultwarden-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "7cfd47daccee7ae3c88be9d772610996114d36be9a4738274ae54509c67e6615"}, "0.2": {"digest": "d1a3c008d9c42712cc330c7d89eba463ce7cedff495f6ae176df15e518a13ad2"}}}, "LePresidente/adguardhome-bf": {"content": "# AdGuardHome bruteforce\ntype: leaky\nname: LePresidente/adguardhome-bf\ndescription: \"Detect AdGuardHome bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'adguardhome_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: adguardhome\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"AdGuardHome Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect AdGuardHome bruteforce attacks", "path": "scenarios/LePresidente/adguardhome-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "af3af350da974cdb51f8dd66b3daae62253719680738a3190b5b48ba7a3fab46"}, "0.2": {"digest": "9e4167549d0e3393b31985309f36cbf21fa823f3ad444f9176ac03771fc718a0"}}}, "LePresidente/authelia-bf": {"content": "# authelia BF scan\nname: LePresidente/authelia-bf\ndescription: \"Detect authelia bruteforce\"\nfilter: \"evt.Meta.service == 'authelia' && evt.Meta.log_type == 'auth_failed'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: authelia\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Authelia Bruteforce\"\n  remediation: true\n---\n# authelia user-enum\ntype: leaky\nname: LePresidente/authelia-bf_user-enum\ndescription: \"Detect authelia user enum bruteforce\"\nfilter: \"evt.Meta.service == 'authelia' && evt.Meta.log_type == 'auth_failed'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: authelia\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Authelia User Enumeration\"\n  remediation: true\n", "description": "Detect authelia bruteforce", "path": "scenarios/LePresidente/authelia-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "6859d59edc2371a1b44babd0623f0f4db16feacb2096450ebc19a6804343bc28"}, "0.2": {"digest": "444cade77860d8cf730df8ca3ddcf728e2246c4c2c72685fd425dedd7ee26457"}, "0.3": {"digest": "e6f9ef547cd23ab4b260709481c65f8c34ce2a19e2bced8229f74dbe91e7191f"}, "0.4": {"digest": "f1ceb17909865a123fbbcb01640e2e1b30524414e88a93dae90abc5cd86bdb0a"}}}, "LePresidente/emby-bf": {"content": "# emby bruteforce\ntype: leaky\nname: LePresidente/emby-bf\ndescription: \"Detect emby bruteforce\"\nfilter: \"evt.Meta.log_type == 'emby_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: emby\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Emby Bruteforce\"\n  remediation: true\n", "description": "Detect emby bruteforce", "path": "scenarios/LePresidente/emby-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "4465206dcabe80edd026332b3a1aca8feb325fe982fa8fd2b4a38a3970a258b1"}, "0.2": {"digest": "53face55d2ab8e746503000657d65d19257de7ef3ee3ae6b54bdb1fd8a5b3514"}}}, "LePresidente/gitea-bf": {"content": "# gitea BF scan\nname: LePresidente/gitea-bf\ndescription: \"Detect gitea bruteforce\"\nfilter: \"evt.Meta.log_type == 'gitea_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: gitea\n  behavior: \"vcs:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Gitea Bruteforce\"\n  remediation: true\n---\n# gitea user-enum\ntype: leaky\nname: LePresidente/gitea-bf_user-enum\ndescription: \"Detect gitea user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'gitea_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: gitea\n  behavior: \"vcs:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Gitea User Enumeration\"\n  remediation: true\n", "description": "Detect gitea bruteforce", "path": "scenarios/LePresidente/gitea-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "29eb0131d95219fa3a835a9e33cf38238240e42e8d7b46aa7bf7ed895d2b0b35"}, "0.2": {"digest": "2ba7cd0dc64eda94f1c094b45f1bffd779a3e773621fddb7506b713320406f54"}, "0.3": {"digest": "785e6e7e0e3f272a1555df16cbcdb38b5fef4638eb7feae97adff583507004ed"}}}, "LePresidente/grafana-bf": {"content": "# grafana BF scan\nname: LePresidente/grafana-bf\ndescription: \"Detect grafana bruteforce\"\nfilter: \"evt.Meta.service == 'grafana' && evt.Meta.log_type == 'auth_failed'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: grafana\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Grafana Bruteforce\"\n  remediation: true\n", "description": "Detect grafana bruteforce", "path": "scenarios/LePresidente/grafana-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "f2b73db0cdd22c800e107a8dd0ab81d55bca7379a36f04dd26951dbebe9db1bb"}, "0.2": {"digest": "46b13a1c833edb5dc62f2c23d642eeaa1bdcb9c9e71bb890054cf2db3346652c"}, "0.3": {"digest": "33fffd89e58b5e67839e70a04dca4b8dc56fe45c36df2a3f8448b28ded619f68"}}}, "LePresidente/harbor-bf": {"content": "# harbor BF scan\nname: LePresidente/harbor-bf\ndescription: \"Detect harbor bruteforce\"\nfilter: \"evt.Meta.log_type == 'harbor_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: harbor\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Harbor Bruteforce\"\n  remediation: true\n---\n# harbor user-enum\ntype: leaky\nname: LePresidente/harbor-bf_user-enum\ndescription: \"Detect harbor user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'harbor_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: harbor\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Harbor User Enumeration\"\n  remediation: true\n", "description": "Detect harbor bruteforce", "path": "scenarios/LePresidente/harbor-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "25f208be5fdb655805f5b9baed7784d6b0be07421f9c36d53b85400a778f9e3c"}, "0.2": {"digest": "a103754c82c2d9bd394229759091cdbda5f0cdfff89ed1a1acc1422197249432"}}}, "LePresidente/jellyfin-bf": {"content": "# jellyfin BF scan\nname: LePresidente/jellyfin-bf\ndescription: \"Detect jellyfin bruteforce\"\nfilter: \"evt.Meta.log_type == 'jellyfin_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: jellyfin\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Jellyfin Bruteforce\"\n  remediation: true\n---\n# jellyfin user-enum\ntype: leaky\nname: LePresidente/jellyfin-bf_user-enum\ndescription: \"Detect jellyfin user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'jellyfin_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: jellyfin\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Harbor User Enumeration\"\n  remediation: true\n", "description": "Detect jellyfin bruteforce", "path": "scenarios/LePresidente/jellyfin-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "e84cce05fb525b5f43f34171fb8a3eeca55ae5a7e5553d59fd9004472188706e"}, "0.2": {"digest": "adc51e35b2fe0f667938d7ddea7bd9fd5ff9f48c1ac3438b871130c0be251689"}}}, "LePresidente/jellyseerr-bf": {"content": "# jellyseerr BF scan\nname: LePresidente/jellyseerr-bf\ndescription: \"Detect jellyseerr bruteforce\"\nfilter: \"evt.Meta.log_type == 'jellyseerr_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: jellyseerr\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Jellyseerr Bruteforce\"\n  remediation: true\n---\n# jellyseerr user-enum\ntype: leaky\nname: LePresidente/jellyseerr-bf_user-enum\ndescription: \"Detect jellyseerr user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'jellyseerr_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: jellyseerr\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Jellyseerr User Enumeration\"\n  remediation: true\n", "description": "Detect jellyseerr bruteforce", "path": "scenarios/LePresidente/jellyseerr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "d21fcd58a65208cd0d37d005e13b3ba242f169ee71a8a8c2b6d4c4011f4d1c98"}, "0.2": {"digest": "230e8b4b1ef48c3cb5f83ccc66ca29e38d83f4116079f22cb13033e0c7e40bc8"}}}, "LePresidente/ombi-bf": {"content": "# emby bruteforce\ntype: leaky\nname: LePresidente/ombi-bf\ndescription: \"Detect Ombi bruteforce\"\nfilter: \"evt.Meta.log_type == 'ombi_auth_failed'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: ombi\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Ombi Bruteforce\"\n  remediation: true\n", "description": "Detect Ombi bruteforce", "path": "scenarios/LePresidente/ombi-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "20d3c7bf14fa9c1a6b43a00d219c933846d36d7ec8d4306659aaad6a3873a6eb"}, "0.2": {"digest": "57fdcee57a59e2858e2eb25e60004d4a9910ed20c2856443eda997a3153a2300"}}}, "LePresidente/overseerr-bf": {"content": "# overseerr BF scan\nname: LePresidente/overseerr-bf\ndescription: \"Detect overseerr bruteforce\"\nfilter: \"evt.Meta.log_type == 'overseerr_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: overseerr\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Overseerr Bruteforce\"\n  remediation: true\n---\n# overseerr user-enum\ntype: leaky\nname: LePresidente/overseerr-bf_user-enum\ndescription: \"Detect overseerr user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'overseerr_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: overseerr\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Overseerr User Enumeration\"\n  remediation: true\n", "description": "Detect overseerr bruteforce", "path": "scenarios/LePresidente/overseerr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "bd3d03dc43e0bdc90e71ef791c938ec722fee0ed07165e0155804a6da29abf27"}, "0.2": {"digest": "c507f748764cc42d4e71d3cbd0399c1f303aff386e629e499cd09047fd689dc1"}}}, "LePresidente/redmine-bf": {"content": "# Redmine bruteforce\ntype: leaky\nname: LePresidente/redmine-bf\ndescription: \"Detect Redmine bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'redmine_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: redmine\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  label: \"Redmine Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# Redmine user-enum\ntype: leaky\nname: LePresidente/redmine-bf_user-enum\ndescription: \"Detect Redmine user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'redmine_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: redmine\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Redmine Enumeration\"\n  remediation: true\n", "description": "Detect Redmine bruteforce attacks", "path": "scenarios/LePresidente/redmine-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "85e4eb99ed510675a3b9080958f5000e5c7564e63bd3fa180be3a5757620ec8e"}, "0.2": {"digest": "d12851449afd02091b0d5838de8daebbc6cc81847cfb26a1afed2c6eb2b4f176"}}}, "LePresidente/ssh-bad-keyexchange-bf": {"content": "# ssh bruteforce\ntype: leaky\nname: lepresidente/ssh-bad-keyexchange-bf\ndescription: \"Detect ssh bad key exchange\"\nfilter: \"evt.Meta.log_type == 'ssh_bad_keyexchange'\"\nleakspeed: \"10s\"\nreferences:\n  - http://wikipedia.com/ssh-bf-is-bad\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ssh\n  behavior: \"ssh:bruteforce\"\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  remediation: true\n  label: \"SSH Bad Key Bruteforce\"\n", "description": "Detect ssh bad key exchange", "path": "scenarios/LePresidente/ssh-bad-keyexchange-bf.yaml", "references": ["http://wikipedia.com/ssh-bf-is-bad"], "version": "0.2", "versions": {"0.1": {"digest": "654f4cd2d1f53a60423647e3d8ec38cde2e27a7b8495c44204f001f5f5485430"}, "0.2": {"digest": "3c1b4148eedb8f632dc80ed11a186c7d534ce23533367ab3c8e3cd06345d6a2a"}}}, "MariuszKociubinski/bitwarden-bf": {"content": "# bitwarden bruteforce\ntype: leaky\nname: MariuszKociubinski/bitwarden-bf\ndescription: \"Detect bitwarden bruteforce\"\ndebug: false\nfilter:\n  \"evt.Meta.log_type in ['bitwarden_failed_auth','bitwarden_failed_auth_2fa']\"\n  #filter: \"evt.Meta.log_type == 'bitwarden_failed_auth'\"\nleakspeed: \"1m\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: false\nlabels:\n  service: bitwarden\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1110\n  label: \"Bitwarden User Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n", "description": "Detect bitwarden bruteforce", "path": "scenarios/MariuszKociubinski/bitwarden-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "43e83e367af5eba9d525953587a65905e109057fac7a52e68ce04606a01e8b23"}, "0.2": {"digest": "d68d05489f98eb1194c0935d043f9cd760cadf07fc53308ae640ce7efe250356"}}}, "a1ad/meshcentral-bf": {"content": "# meshcentral BF scan\nname: a1ad/meshcentral-bf\ndescription: \"Detect meshcentral bruteforce\"\nfilter: \"evt.Meta.log_type == 'meshcentral_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: meshcentral\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"MeshCentral Bruteforce\"\n  remediation: true\n---\n# meshcentral user-enum\ntype: leaky\nname: a1ad/meshcentral-bf_user-enum\ndescription: \"Detect meshcentral user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'meshcentral_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: meshcentral\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1589\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"MeshCentral User Enumeration\"\n  remediation: true\n", "description": "Detect meshcentral bruteforce", "path": "scenarios/a1ad/meshcentral-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f9c23983ecdee70491e334732b2cb2ba7ef5fb61a5d119951930ba5b7cb93e51"}, "0.2": {"digest": "bfa1db16802b90bf3648ca8f59c75fec48b297b65c30c01608bff71e8ee2e2cf"}}}, "a1ad/mikrotik-bf": {"content": "# Mikrotik BF scan\nname: a1ad/mikrotik-bf\ndescription: \"Detect Mikrotik bruteforce\"\nfilter: \"evt.Meta.log_type == 'mikrotik_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: mikrotik\n  behavior: \"iot:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Mikrotik Bruteforce\"\n  remediation: true\n---\n# meshcentral user-enum\ntype: leaky\nname: a1ad/mikrotik-bf_user-enum\ndescription: \"Detect mikrotik user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'mikrotik_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: mikrotik\n  behavior: \"iot:bruteforce\"\n  classification:\n    - attack.T1589\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Mikrotik User Enumeration\"\n  remediation: true\n", "description": "Detect Mikrotik bruteforce", "path": "scenarios/a1ad/mikrotik-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "186b0c6b7fe346e3e3843e90135735ed0195233abd5e5a2a06b3420275ef9e2d"}, "0.2": {"digest": "69a55380db43a066268c70ba1d0a3934e6188b4669337c091d2898b398cdcbad"}}}, "a1ad/mikrotik-scan-multi_ports": {"content": "type: leaky\nname: a1ad/mikrotik-scan-multi_ports\ndescription: \"Detect port scanning from single ip on MikroTik router\"\nfilter: \"evt.Meta.log_type == 'mikrotik_drop' && evt.Meta.service == 'tcp_udp'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.dst_port\ncapacity: 15\nleakspeed: 5s\nblackhole: 1m\nlabels:\n  service: mikrotik\n  behavior: \"tcp:scan\"\n  classification:\n    - attack.T1595.001\n    - attack.T1018\n    - attack.T1046\n  spoofable: 2\n  confidence: 1\n  label: \"MikroTik Port Scanning\"\n  remediation: true\n", "description": "Detect port scanning from single ip on MikroTik router", "path": "scenarios/a1ad/mikrotik-scan-multi_ports.yaml", "version": "0.3", "versions": {"0.1": {"digest": "eb9e82a3f0179f4e407b91e618dc960da0bf7244f018dc2bd5cee181035e1d3a"}, "0.2": {"digest": "aabd6503e4b3f1974760e168872ba557927ede9a5e516777dc49d0c872314fc3"}, "0.3": {"digest": "104b45e980fb6c20041842aaa3e66a1120adb2d17d2e868fb234e953fabf1ac8"}}}, "aidalinfo/couchdb-bf": {"content": "# couchdb slow bruteforce\ntype: leaky\nname: aidalinfo/couchdb-slow-bf\ndescription: \"Detect slow Couchdb bruteforce/enum\"\nfilter: evt.Meta.log_type == 'bf-enum-couchdb'\nleakspeed: \"60s\"\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: couchdb\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Couchdb low Bruteforce\"\n---\n# couchdb bruteforce\ntype: leaky\nname: aidalinfo/couchdb-bf\ndescription: \"Detect Couchdb bruteforce/enum\"\nfilter: evt.Meta.log_type == 'bf-enum-couchdb'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: couchdb\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Couchdb Bruteforce\"\n  remediation: true", "description": "Detect slow Couchdb bruteforce/enum", "path": "scenarios/aidalinfo/couchdb-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "51b01a6b282027299192db588a2e3de5b46fbcfcbe8cba15d419ba010ffcff71"}}}, "aidalinfo/couchdb-crawl": {"content": "type: leaky\nname: aidalinfo/couchdb-crawl\ndescription: \"Detect aggressive crawl on CouchDB\"\nfilter: evt.Meta.log_type == 'crawl-couchdb'\ndistinct: evt.Meta.path_db\nleakspeed: 0.5s\ncapacity: 40\n#debug: true\n#this limits the memory cache (and event_sequences in output) to five events\ncache_size: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: couchdb\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:crawl\"\n  label: \"CouchDB Crawl\"\n  remediation: true", "description": "Detect aggressive crawl on CouchDB", "path": "scenarios/aidalinfo/couchdb-crawl.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0531619cc321e1dd46b812c5af6edcf8599fbbc7f019e2c56d2dcb94e8ecfae9"}, "0.2": {"digest": "07f46b4913b9b215d552e6276583e1015f43369c9108d46c33a59eee1c112dd2"}, "0.3": {"digest": "7ff0dd0aeb2d5cc508cc69e5fc3ba63e86b3a37c2860f171b7914d728bedf656"}}}, "aidalinfo/tcpudp-flood-traefik": {"content": "type: leaky\nname: aidalinfo/tcpudp-flood-traefik\ndescription: \"Detect TCP/UDP flood\"\nfilter: \"evt.Meta.log_type == 'traefik_tcpudp'\"\ngroupby: \"evt.Meta.source_ip\"\ncapacity: 1000\ncache_size: 10\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1498\n  spoofable: 0\n  confidence: 2\n  label: \"UDP or TCP Flood Traefik\"\n", "description": "Detect TCP/UDP flood", "path": "scenarios/aidalinfo/tcpudp-flood-traefik.yaml", "version": "0.1", "versions": {"0.1": {"digest": "279599e76231935a36a5efafb12ddc5ed432f56d8c6c5c93daa277261a680182"}}}, "andreasbrett/baikal-bf": {"content": "# Baikal bruteforce\ntype: leaky\nname: andreasbrett/baikal-bf\ndescription: \"Detect Baikal bruteforce attacks\"\nfilter: \"evt.Meta.log_type in ['baikal_failed_auth', 'baikal_failed_auth_no_user']\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n    service: baikal\n    type: bruteforce\n    classification:\n      - attack.T1110\n    remediation: true\n    behavior: http:bruteforce\n    spoofable: 0\n    confidence: 3\n---\n# Baikal user-enum (only for web UI since Baikal doesn't log failed username for CalDAV/CardDAV access)\ntype: leaky\nname: andreasbrett/baikal-bf_user-enum\ndescription: \"Detect Baikal user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'baikal_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n    service: baikal\n    type: bruteforce\n    remediation: true\n    behavior: http:bruteforce\n    spoofable: 0\n    confidence: 3\n    classification:\n      - attack.T1110", "description": "Detect Baikal bruteforce attacks", "path": "scenarios/andreasbrett/baikal-bf.yaml", "version": "0.5", "versions": {"0.1": {"digest": "6e560fc2a7297c34acf8b4a1310d99f8aaaafa8c3d72698cd3812d3d5a2c73d6"}, "0.2": {"digest": "5a05fcd4f832c12defc47cb1bb2e214ee686305e8d7d643ad25969a661cb2c4f"}, "0.3": {"digest": "a0cdfd365b1ac0406e4a66317e7e0924826cd5f1be41ec906597cc56f4591c0f"}, "0.4": {"digest": "dba7a79d5cb51283c1da9c5d12570895a6cac01326109ee332bada785a7308b8"}, "0.5": {"digest": "5a05fcd4f832c12defc47cb1bb2e214ee686305e8d7d643ad25969a661cb2c4f"}}}, "andreasbrett/paperless-ngx-bf": {"content": "# Paperless-ngx bruteforce\ntype: leaky\nname: andreasbrett/paperless-ngx-bf\ndescription: \"Detect Paperless-ngx bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'paperless_ngx_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n    service: paperless-ngx\n    confidence: 3\n    spoofable: 0\n    classification:\n        - attack.T1110\n    label: \"Paperless-ngx Bruteforce\"\n    behavior: \"http:bruteforce\"\n    remediation: true\n---\n# Paperless-ngx user-enum\ntype: leaky\nname: andreasbrett/paperless-ngx-bf_user-enum\ndescription: \"Detect Paperless-ngx user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'paperless_ngx_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n    service: paperless-ngx\n    confidence: 3\n    spoofable: 0\n    classification:\n        - attack.T1589\n    label: \"Paperless-ngx User Enumeration\"\n    behavior: \"http:bruteforce\"\n    remediation: true\n", "description": "Detect Paperless-ngx bruteforce attacks", "path": "scenarios/andreasbrett/paperless-ngx-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "cbfdde07a106b2e72769f381490da31062b4789f4f1a5e35a6a168dca2354d74"}, "0.2": {"digest": "8f8c1e1a4554e30febf77fdce884ddeec79df20eb20ee5d33a563024acd3e013"}, "0.3": {"digest": "db6ad37ca94b4d5390573129a9b86fa68068391ce216aa326f07b3a4c23d718f"}}}, "andreasbrett/webmin-bf": {"content": "# Webmin bruteforce\ntype: leaky\nname: andreasbrett/webmin-bf\ndescription: \"Detect Webmin bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'webmin_failed_auth_wrong_pass'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n    service: webmin\n    confidence: 3\n    spoofable: 0\n    classification:\n        - attack.T1110\n    label: \"Webmin Bruteforce\"\n    behavior: \"http:bruteforce\"\n    remediation: true\n---\n# Webmin user-enum\ntype: leaky\nname: andreasbrett/webmin-bf_user-enum\ndescription: \"Detect Webmin user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'webmin_failed_auth_wrong_pass'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n    service: webmin\n    confidence: 3\n    spoofable: 0\n    classification:\n        - attack.T1589\n    label: \"Webmin Bruteforce\"\n    behavior: \"http:bruteforce\"\n    remediation: true\n", "description": "Detect Webmin bruteforce attacks", "path": "scenarios/andreasbrett/webmin-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "565ea4cf8ba6add8648fac488c904e2283afe76fe5b41e9f6bddf29a92b50b7c"}, "0.2": {"digest": "0fa97ae9e9f79be63615dc34a6695cfe5c88a6f7d8d29ef28305593422ff58da"}}}, "baudneo/gotify-bf": {"content": "type: leaky\nname: baudneo/gotify-bf\ndescription: \"Detect bruteforce\"\nfilter: \"evt.Meta.log_type  == 'gotify_failed_auth'\"\ngroupby: \"evt.Meta.source_ip\"\ncapacity: 3\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  service: gotify\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Gotify Bruteforce\"\n  remediation: true\n", "description": "Detect bruteforce", "path": "scenarios/baudneo/gotify-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "584f3cea147a6aca903f87b63d43bade9da0449c23b90efb26de9fa798d06fdb"}, "0.2": {"digest": "d6ed2ccf69900783b22537eac017528704b37de1872db95e1424689ef1b45554"}, "0.3": {"digest": "860c5265a1d19e76550a022a8be9a200e0163a7b6c1d19968846ffac999c2aa6"}}}, "baudneo/zoneminder-bf": {"content": "# loging bruteforce\ntype: leaky\nname: baudneo/zoneminder-bf\ndescription: \"Detect ZoneMinder bruteforce\"\nfilter: \"evt.Meta.log_subtype == 'zm_bad_password'\"\ngroupby: \"evt.Meta.source_ip\"\ncapacity: 4\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  service: zoneminder\n  type: bruteforce\n  spoofable: 0\n  confidence: 3\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Zoneminder bruteforce\"\n---\n# user enum\ntype: leaky\nname: baudneo/zoneminder-bf\ndescription: \"Detect ZoneMinder user enumeration\"\nfilter: \"evt.Meta.log_subtype == 'zm_bad_user'\"\ngroupby: \"evt.Meta.source_ip\"\ndistinct: \"evt.Meta.username\"\ncapacity: 4\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  service: zoneminder\n  type: bruteforce\n  spoofable: 0\n  confidence: 3\n  remediation: true\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Zoneminder user enumeration\"\n", "description": "Detect ZoneMinder bruteforce", "path": "scenarios/baudneo/zoneminder-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "23f8a840d8341ffad8f70b787e7dc5c9ecbab0c3bcc91eaada7dffdc2a4613f7"}, "0.2": {"digest": "ba9fd1bb90d61bec138d023c07418c93e8cd5a0e030ab7e67e14c66443e7fb89"}}}, "baudneo/zoneminder_cve-2022-39285": {"content": "type: trigger\nformat: 2.0\n#debug: true\n#  file=http%3A%2F%2F10.0.10.107%2Fzm%2F&lt;/td&gt;&lt;/tr&gt;&lt;script src='/zm/?view=options%26tab=users%26action=delete%26markUids%5B%5D=6%26deleteBtn=Delete'&lt;/script&gt;&line=70\nname: baudneo/zoneminder_cve-2022-39285\ndescription: \"Detect cve-2022-39285 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"]\n  and \n    (\n      ( Upper(evt.Meta.http_verb) == \"POST\" and\n          Upper(evt.Meta.http_path) matches Upper('^(?P<path>/.*index.php)?.*(?P<file_query>file=.*&lt;/td&gt;&lt;/tr(?P<payload>.*)&gt;)')\n      )\n      or \n      Upper(evt.Parsed.rawrequest) matches Upper('^(?P<verb>POST) (?P<path>/.*index.php)?.*(?P<file_query>file=.*&lt;/td&gt;&lt;/tr(?P<payload>.*)&gt;)')\n    )\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-39285\n  spoofable: 0\n  confidence: 3\n  service: zoneminder\n  behavior: \"http:exploit\"\n  label: \"Zoneminder CVE-2022-39285\"\n", "description": "Detect cve-2022-39285 exploitation attempts", "path": "scenarios/baudneo/zoneminder_cve-2022-39285.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ce8c950d3c51b1e3b1aa7f3b77d29e080a59b5cba2151057c4651a124b752216"}, "0.2": {"digest": "be09593bd2cf6c92f04b76d31958c4882e9d1a173594175868b348f7b0e1a016"}}}, "baudneo/zoneminder_cve-2022-39290": {"content": "type: trigger\nformat: 2.0\n#debug: true\n#/zm/index.php?view=options&tab=users&action=delete&markUids%5B%5D=13&deleteBtn=Delete\nname: baudneo/zoneminder_cve-2022-39290\ndescription: \"Detect cve-2022-39290 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"]\n  and Upper(evt.Meta.http_verb) == \"GET\"\n  and  Upper(evt.Meta.http_path) matches Upper('.*action=.*')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-39290\n  spoofable: 0\n  confidence: 3\n  service: zoneminder\n  behavior: \"http:exploit\"\n  label: \"Zoneminder CVE-2022-39290\"\n  remediation: true\n", "description": "Detect cve-2022-39290 exploitation attempts", "path": "scenarios/baudneo/zoneminder_cve-2022-39290.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b0ea4c6323f2a29c66ce3ec6bcb34ee0721ff6de66c37cd50f3bc9e0179febb1"}, "0.2": {"digest": "9780563700326839396f67fffb58787680bc32cd363d5e609953ba328eb42890"}}}, "baudneo/zoneminder_cve-2022-39291": {"content": "type: leaky\nformat: 2.0\n#debug: true\n#  __csrf_magic=key%3A85866fbcb6a1d7325544a55aa63fb534677f34ca%2C1665102411&request=log&task=create&level=ERR&message=Trenches%20of%20IT%20PoC&browser%5Bname%5D=Chrome&browser%5Bversion%5D=101.0.4951.41&browser%5Bplatform%5D=Windows&file=line=800&view=request HTTP/1.1\nname: baudneo/zoneminder_cve-2022-39291\ndescription: \"Detect cve-2022-39291 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"]\n  and \n  (\n  ( Upper(evt.Meta.http_verb) == \"POST\" and\n  Upper(evt.Meta.http_path) matches Upper('^(?P<path>/.*index.php)?.*(?P<view>view=request|request=log|task=create)+.*(?P<request_query>view=request|request=log|task=create)+.*(?P<task_query>view=request|request=log|task=create)+.*')\n\n  )\n  or\n  Upper(evt.Parsed.rawrequest) matches Upper('^(?P<verb>POST) (?P<path>/.*index.php)?.*(?P<view>view=request|request=log|task=create)+.*(?P<request_query>view=request|request=log|task=create)+.*(?P<task_query>view=request|request=log|task=create)+.*')\n  )\ngroupby: \"evt.Meta.source_ip\"\ncapacity: 10\nleakspeed: \"10s\"\nblackhole: 2m\nlabels:\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-39291\n  spoofable: 0\n  confidence: 3\n  service: zoneminder\n  behavior: \"http:exploit\"\n  label: \"Zoneminder CVE-2022-39291\"\n  remediation: true\n", "description": "Detect cve-2022-39291 exploitation attempts", "path": "scenarios/baudneo/zoneminder_cve-2022-39291.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8374d8580cd1d1c2c56e2c7e12ba82b3e1f797d0b300fb6d620825b77f61a6c5"}, "0.2": {"digest": "d0f2d1eca926874288de1c8443a813ebb24f0ed0a26d869c23e441666de52c73"}}}, "corvese/apache-guacamole_bf": {"content": "type: leaky\nname: corvese/apache-guacamole_bf\ndescription: \"Detect Apache Guacamole user bruteforce\"\nfilter: evt.Meta.log_type == 'apache-guacamole_failed_auth'\ngroupby: evt.Meta.source_ip\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: apache-guacamole\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Apache Guacamole Bruteforce\"\n  remediation: true\n", "description": "Detect Apache Guacamole user bruteforce", "path": "scenarios/corvese/apache-guacamole_bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "78920b8234b82abaeb1b73c6f3994f4c35e5c90cab074a7f11d9ffb58248ef70"}, "0.2": {"digest": "f6cf4a711993f42488873b936d5fe591043c1d3c15e62b42794f31fde0b52682"}}}, "corvese/apache-guacamole_user_enum": {"content": "type: leaky\nname: corvese/apache-guacamole_user_enum\ndescription: \"Detect Apache Guacamole user enum bruteforce\"\nfilter: evt.Meta.log_type == 'apache-guacamole_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: apache-guacamole\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Apache Guacamole User Enumeration\"\n  remediation: true\n", "description": "Detect Apache Guacamole user enum bruteforce", "path": "scenarios/corvese/apache-guacamole_user_enum.yaml", "version": "0.2", "versions": {"0.1": {"digest": "9657710b2f728d779870ceda5d46c624dd1e33415c51232293f0ba416beda965"}, "0.2": {"digest": "2782dcc3e78f4679f66b6b186b050e016010dc225f3a3fc0a3ff3f73d92e1690"}}}, "crowdsecurity/CVE-2017-9841": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2017-9841\ndescription: \"Detect CVE-2017-9841 exploits\"\nfilter: |\n    evt.Meta.log_type == 'http_access-log' &&\n    Lower(evt.Meta.http_path) endsWith 'util/php/eval-stdin.php'\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2017-9841\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"PHP Unit Test Framework CVE-2017-9841\"\n  service: PHP\n", "description": "Detect CVE-2017-9841 exploits", "path": "scenarios/crowdsecurity/CVE-2017-9841.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6fc6487fc9c9e60d99dccdd37b063c9f52c53d4ebed28d8d83aa69b6b29cfca3"}, "0.2": {"digest": "a9421e42d85c3f1aab40ef09aaa0261db42f34c5d95986d6a67c9db8b577889e"}}}, "crowdsecurity/CVE-2019-18935": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/CVE-2019-18935\ndescription: \"Detect Telerik CVE-2019-18935 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && Upper(QueryUnescape(evt.Meta.http_path)) startsWith Upper('/Telerik.Web.UI.WebResource.axd?type=rau')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2019-18935\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Telerik CVE-2019-18935\"\n  service: telerik\n", "description": "Detect Telerik CVE-2019-18935 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2019-18935.yaml", "version": "0.2", "versions": {"0.1": {"digest": "58a495cc103c884661837a5951a903f04ee964f328b37a78aec71b4b03f5699a"}, "0.2": {"digest": "9558b50809bbc8fb2c2747004a3878229d19c0321b3630fcd9f66e9d359dde5b"}}}, "crowdsecurity/CVE-2021-4034": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2021-4034\ndescription: \"Detect CVE-2021-4034 exploits\"\nfilter: evt.Meta.log_type == 'CVE-2021-4034-xpl'\ngroupby: evt.Meta.target_user\nblackhole: 1m\nlabels:\n  type: privesc\n  classification:\n    - attack.T1548\n    - cve.CVE-2021-4034\n  behavior: \"generic:exploit\"\n  spoofable: 0\n  confidence: 3\n  service: linux\n  label: \"`pkexec` CVE-2021-4034\"\nscope:\n  type: system_account\n  expression: evt.Meta.target_user\n", "description": "Detect CVE-2021-4034 exploits", "path": "scenarios/crowdsecurity/CVE-2021-4034.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f08340e4247cfd2c44fb2db26dcb752aacbcfb483dc7da686af8e793b5a32d0f"}, "0.2": {"digest": "8d6e9e5be1b07382085e013fed07fdb6d5b6bf96f1b03f394b2859bcfc398475"}}}, "crowdsecurity/CVE-2022-26134": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-26134\ndescription: \"Detect CVE-2022-26134 exploits\"\nfilter: \"Upper(PathUnescape(evt.Meta.http_path)) contains Upper('@java.lang.Runtime@getRuntime().exec(')\"\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-26134\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  service: atlassian-confluence\n  label: \"Confluence CVE-2022-26134\"\n", "description": "Detect CVE-2022-26134 exploits", "path": "scenarios/crowdsecurity/CVE-2022-26134.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ef1cbb63184361f1fca2b914b436f99bac53b98047da4442bebe58fd65a6dc2d"}, "0.2": {"digest": "d355711eafe682860cce08414e27e6f6c55c70f83ad5d96123e351a375070df3"}}}, "crowdsecurity/CVE-2022-35914": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-35914\ndescription: \"Detect CVE-2022-35914 exploits\"\nfilter: \"Upper(evt.Meta.http_path) contains Upper('/vendor/htmlawed/htmlawed/htmLawedTest.php')\"\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-35914\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  service: glpi\n  label: \"GLPI CVE-2022-35914\"\n", "description": "Detect CVE-2022-35914 exploits", "path": "scenarios/crowdsecurity/CVE-2022-35914.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8dcd25e2e77855c6e8216d2d988af69f93492d49cb9bd68009149124de555b61"}, "0.2": {"digest": "00fdc57bcd3cee6ec6a025e843f0f9df47223726a8847fb35d96044201aee75e"}}}, "crowdsecurity/CVE-2022-37042": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-37042\ndescription: \"Detect CVE-2022-37042 exploits\"\nfilter: |\n  (\n  Upper(evt.Meta.http_path) contains Upper('/service/extension/backup/mboximport?account-name=admin&ow=2&no-switch=1&append=1') ||\n  Upper(evt.Meta.http_path) contains Upper('/service/extension/backup/mboximport?account-name=admin&account-status=1&ow=cmd') \n  )\n  and evt.Meta.http_status startsWith ('40') and\n  Upper(evt.Meta.http_verb) == 'POST'\n\nblackhole: 2m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-37042\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"ZCS CVE-2022-37042\"\n  service: zimbra\n", "description": "Detect CVE-2022-37042 exploits", "path": "scenarios/crowdsecurity/CVE-2022-37042.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a359e07196179abadd5c81f4599a539f693a647cca4b744d3a0ef43e6d49496d"}, "0.2": {"digest": "b439f85b43c47467614ec9473942a8824e910a96dbac7cd852bd2f5a3266fffe"}}}, "crowdsecurity/CVE-2022-40684": {"content": "type: trigger\nname: crowdsecurity/fortinet-cve-2022-40684\ndescription: \"Detect cve-2022-40684 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n  Upper(evt.Meta.http_path) startsWith Upper('/api/v2/cmdb/system/admin/') and Lower(evt.Parsed.http_user_agent) == 'report runner'\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1548\n    - cve.CVE-2022-40684\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Fortinet CVE-2022-40684\"\n  service: fortinet\n", "description": "Detect cve-2022-40684 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2022-40684.yaml", "version": "0.3", "versions": {"0.1": {"digest": "3966ffd8e0b1b6d00ac99759955f676f39a5d350d0d2de4117c1293dd17617bb"}, "0.2": {"digest": "49e7ee3c7afd08b249c0429abb9a74de76a9bdef56f803bc802425cca7d45027"}, "0.3": {"digest": "3b7859e98c3a054e3012b7c3a0d470451ce8741b1a84c1c9c2c0a90a72ba6ce9"}}}, "crowdsecurity/CVE-2022-41082": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-41082\ndescription: \"Detect CVE-2022-41082 exploits\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/autodiscover/autodiscover.json') &&\n  Upper(evt.Parsed.http_args) contains Upper('powershell')\n\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-41082\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  service: exchange\n  label: \"Microsoft Exchange CVE-2022-41082\"\n", "description": "Detect CVE-2022-41082 exploits", "path": "scenarios/crowdsecurity/CVE-2022-41082.yaml", "version": "0.4", "versions": {"0.1": {"digest": "4c1c2f9955b07527a943b5bb756bd1a3ac85d20ac1c32e5a4087c3e59840d53d"}, "0.2": {"digest": "429111e4d5cbbbfaaaee02eee6d646d0f75878c12ab24cd10ece4fd133b45eff"}, "0.3": {"digest": "fb8dac201728cb4b366fe199d523ec01423dd7487e76854e38e89216ba7f717d"}, "0.4": {"digest": "cb2d3cd023a7be04c41213379c1335259f0b6cd5e43ed5bc3dea096809c3c57b"}}}, "crowdsecurity/CVE-2022-41697": {"content": "type: leaky\nname: crowdsecurity/CVE-2022-41697\ndescription: \"Detect CVE-2022-41697 enumeration\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/ghost/api/admin/session') &&\n  Upper(evt.Parsed.verb) == 'POST' &&\n  evt.Meta.http_status == '404'\nleakspeed: \"10s\"\ncapacity: 5\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1589\n    - cve.CVE-2022-41697\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Ghost CVE-2022-41697\"\n  service: ghost\n", "description": "Detect CVE-2022-41697 enumeration", "path": "scenarios/crowdsecurity/CVE-2022-41697.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ae9e978bd67cefe94cb65a5aefc557f873ab7622805ce053961b573e135df43e"}, "0.2": {"digest": "a2cbe3a432df8012c16607c6885302af464e9ae2730d1b2e490c8e3908b779b2"}}}, "crowdsecurity/CVE-2022-42889": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-42889\ndescription: \"Detect CVE-2022-42889 exploits (Text4Shell)\"\nfilter: |\n  Upper(PathUnescape(evt.Meta.http_path)) contains Upper('${script:javascript:java.lang.Runtime.getRuntime().exec(')\n  or\n  Upper(PathUnescape(evt.Meta.http_path)) contains Upper('${script:js:java.lang.Runtime.getRuntime().exec(')\n  or\n  Upper(PathUnescape(evt.Meta.http_path)) contains Upper('${url:UTF-8:') \n  or\n  Upper(PathUnescape(evt.Meta.http_path)) contains Upper('${dns:address|')\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-42889\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Text4Shell CVE-2022-42889\"\n  service: apache\n", "description": "Detect CVE-2022-42889 exploits (Text4Shell)", "path": "scenarios/crowdsecurity/CVE-2022-42889.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0efbd6a607d22683331a3e4ee96a78cedc3a071dd80f302df10158628eef36d9"}, "0.2": {"digest": "7358ad76095b008ebdf384cfbda11f1f5977f3e41acaad6f83fd779fdddd656a"}, "0.3": {"digest": "f322190f4683f35f340dcd5ee9db2c34378742236c959a7f86f8c7bdfa0a07c3"}}}, "crowdsecurity/CVE-2022-44877": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-44877\ndescription: \"Detect CVE-2022-44877 exploits\"\nfilter: |\n  Lower(evt.Meta.http_path) contains '/index.php' &&\n  Upper(evt.Parsed.verb) == 'POST' &&\n  evt.Meta.http_status == '302' &&\n  Lower(evt.Parsed.http_args) matches 'login=.*[$|%24][\\\\(|%28].*[\\\\)|%29]'\n\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-44877\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Centos Webpanel CVE-2022-44877\"\n  service: centos\n", "description": "Detect CVE-2022-44877 exploits", "path": "scenarios/crowdsecurity/CVE-2022-44877.yaml", "version": "0.3", "versions": {"0.1": {"digest": "672740b98557f5e4d0c1e40d1a9bf01ab294e06e02dc750b92294f5a9933c0fa"}, "0.2": {"digest": "0127aac14a23d5f67218598b632e9654f82ae73a05d9113e7aeb592f4fcf5611"}, "0.3": {"digest": "44e6e53a2b1ba558678735c8749bc68cb359edf1e1fb659350199d41a71f0f12"}}}, "crowdsecurity/CVE-2022-46169": {"content": "type: leaky\nname: crowdsecurity/CVE-2022-46169-bf\ndescription: \"Detect CVE-2022-46169 brute forcing\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/remote_agent.php') &&\n  Upper(evt.Parsed.verb) == 'GET' &&\n  Lower(evt.Parsed.http_args) contains 'host_id' &&\n  Lower(evt.Parsed.http_args) contains 'local_data_ids'\nleakspeed: \"10s\"\ncapacity: 5\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1592\n    - cve.CVE-2022-46169\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:bruteforce\"\n  label: \"Cacti CVE-2022-46169\"\n  service: cacti\n---\ntype: trigger\nname: crowdsecurity/CVE-2022-46169-cmd\ndescription: \"Detect CVE-2022-46169 cmd injection\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/remote_agent.php') &&\n  Upper(evt.Parsed.verb) == 'GET' &&\n  Lower(evt.Parsed.http_args) contains 'action=polldata' &&\n  Lower(evt.Parsed.http_args) matches 'poller_id=.*(;|%3b)'\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-46169\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Cacti CVE-2022-46169\"\n  service: cacti\n", "description": "Detect CVE-2022-46169 brute forcing", "path": "scenarios/crowdsecurity/CVE-2022-46169.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a688d850825ff127adec942a59fbe77177948e7a5eb2ab1ba33f587e1e1d34f8"}, "0.2": {"digest": "a5da5fb136d8f1c254546d080049beba49ae22b28415f787029e0e1346ce6913"}}}, "crowdsecurity/CVE-2023-22515": {"content": "## CVE-2023-22515\ntype: trigger\nname: crowdsecurity/CVE-2023-22515\ndescription: \"Detect CVE-2023-22515 exploitation\"\nfilter: |\n  Lower(evt.Parsed.file_ext) == '.action' &&\n  (Lower(evt.Parsed.file_dir) contains '/setup' || Lower(evt.Parsed.file_frag) == 'server-info') &&\n  evt.Parsed.file_frag != nil\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2023-22515\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Confluence CVE-2023-22515\"\n  service: confluence", "description": "Detect CVE-2023-22515 exploitation", "path": "scenarios/crowdsecurity/CVE-2023-22515.yaml", "version": "0.1", "versions": {"0.1": {"digest": "957c29040e254268a5595b538ebd25529d17f2dfedc1eaa97d6863623fc31f3d"}}}, "crowdsecurity/CVE-2023-22518": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2023-22518\ndescription: \"Detect CVE-2023-22518 exploits\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/json/setup-restore.action') &&\n  Upper(evt.Parsed.verb) == 'POST'\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2023-22518\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Atlassian Confluence Server CVE-2023-22518\"\n  service: Atlassian Confluence", "description": "Detect CVE-2023-22518 exploits", "path": "scenarios/crowdsecurity/CVE-2023-22518.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f597bf30acce708e51d463f358b5ed5840133b907df8ab8a8358565b0e506a85"}, "0.2": {"digest": "e1634f917d0008561fee2191e0988eecf4629941275e74246836f03d790d0b3b"}}}, "crowdsecurity/CVE-2023-23397": {"content": "type: trigger\nname: crowdsecurity/CVE-2023-23397\ndescription: \"Detect CVE-2023-23397 from sysmon events\"\nfilter: |\n  evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1' &&\n  evt.Parsed.ParentImage endsWith \"\\\\svchost.exe\" &&\n  evt.Parsed.Image endsWith \"\\\\rundll32.exe\" &&\n  evt.Parsed.CommandLine contains \"C:\\\\windows\\\\system32\\\\davclnt.dll,DavSetCookie\" &&\n  evt.Parsed.CommandLine matches '://\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}' &&\n  (not (evt.Parsed.CommandLine contains \"://10.\" ||\n        evt.Parsed.CommandLine contains \"://192.168.\" ||\n        evt.Parsed.CommandLine contains \"://172.16.\" ||\n        evt.Parsed.CommandLine contains \"://172.17.\" ||\n        evt.Parsed.CommandLine contains \"://172.18.\" ||\n        evt.Parsed.CommandLine contains \"://172.19.\" ||\n        evt.Parsed.CommandLine contains \"://172.20.\" ||\n        evt.Parsed.CommandLine contains \"://172.21.\" ||\n        evt.Parsed.CommandLine contains \"://172.22.\" ||\n        evt.Parsed.CommandLine contains \"://172.23.\" ||\n        evt.Parsed.CommandLine contains \"://172.24.\" ||\n        evt.Parsed.CommandLine contains \"://172.25.\" ||\n        evt.Parsed.CommandLine contains \"://172.26.\" ||\n        evt.Parsed.CommandLine contains \"://172.27.\" ||\n        evt.Parsed.CommandLine contains \"://172.28.\" ||\n        evt.Parsed.CommandLine contains \"://172.29.\" ||\n        evt.Parsed.CommandLine contains \"://172.30.\" ||\n        evt.Parsed.CommandLine contains \"://172.31.\" ||\n        evt.Parsed.CommandLine contains \"://127.\" ||\n        evt.Parsed.CommandLine contains \"://169.254.\"))\nlabels:\n  notification: true\n  os: windows\n  classification:\n    - attack.T1068\n    - cve.CVE-2023-23397\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Microsoft Outlook CVE-2023-23397\"\n  service: windows\nscope:\n  type: user_account\n  expression: evt.Parsed.User\n", "description": "Detect CVE-2023-23397 from sysmon events", "path": "scenarios/crowdsecurity/CVE-2023-23397.yaml", "version": "0.2", "versions": {"0.1": {"digest": "0da94e909f66b0a4d98052d94fa1e6eb63f2d64fa2a53c80971d58e8086967c2"}, "0.2": {"digest": "7c426009cb85eb2b965fa63f3ebf532e6b3f9967695550ba426811ff8ffe85e6"}}}, "crowdsecurity/CVE-2023-49103": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/CVE-2023-49103\ndescription: \"Detect owncloud CVE-2023-49103 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && Lower(evt.Meta.http_path) contains '/owncloud/apps/graphapi/vendor/microsoft/microsoft-graph/tests/getphpinfo.php'\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2023-49103\n  spoofable: 1\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"ownCloud CVE-2023-49103\"\n  service: owncloud\n", "description": "Detect owncloud CVE-2023-49103 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2023-49103.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0bc71f216c4ac89ba9b7637a411a16344b4072483f43d0f6b95b7ace6b1e473c"}, "0.2": {"digest": "4b4f399a2cfa628dbcbee420717807e060a74ff5839d742351c8cad1b42fa15d"}, "0.3": {"digest": "8183a2be1f05b043967c1708c3ed15ea28bfa0828c741fd8f1a0dd797290d915"}}}, "crowdsecurity/CVE-2023-4911": {"content": "type: trigger\nname: crowdsecurity/CVE-2023-4911\ndescription: \"exploitation of CVE-2023-4911: segfaulting in dynamic loader\"\nfilter: \"evt.Meta.log_type == 'kernel' && evt.Meta.sub_log_type == 'segfault' && evt.Meta.library startsWith 'ld-linux-'\"\nblackhole: 1m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1548.004\n  behavior: \"linux:exploitation\"\n  label: \"CVE-2023-4911\"\n  service: linux\n  remediation: false\nscope:\n  type: exe\n  expression: evt.Meta.binary\n", "description": "exploitation of CVE-2023-4911: segfaulting in dynamic loader", "path": "scenarios/crowdsecurity/CVE-2023-4911.yaml", "version": "0.5", "versions": {"0.1": {"digest": "c9be24878aab5602152e6873ee337e62eb3edb0e2ce9b3d2c873ee7112660379"}, "0.2": {"digest": "c4d8818f2c6def4949741a5c1a498e3efbdbc876ca3f2cb78a0f090900aa1f3d"}, "0.3": {"digest": "74290f39f9dbf7c18f1189e533d87c40c4cd86d1bcd21ca81c02aa1de664ba9f"}, "0.4": {"digest": "5ca6fba2682acc2cec9d36109213e0046ecd323a6a4aa9c657008eb85dc59872"}, "0.5": {"digest": "f5a94401d7320b28d98147631aed97d6e9912ae842fc17efebd5239a105eed28"}}}, "crowdsecurity/CVE-2024-0012": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/CVE-2024-0012\ndescription: \"Detect CVE-2024-0012 exploitation attempts\"\nfilter: |\n  let request = Lower(evt.Parsed.request);\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && \n  evt.Meta.http_status in ['404', '403'] &&\n  (request matches '/php/.*/\\\\.js\\\\.map' || request matches '/index.php/.*\\\\.js\\\\.map')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2024-0012\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CVE-2024-0012\"\n  service: panos\n", "description": "Detect CVE-2024-0012 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2024-0012.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b955db04131ef84d41a65adb63da9bea950847ff3380be449777161fda7a96e7"}}}, "crowdsecurity/CVE-2024-38475": {"content": "type: leaky\nformat: 2.0\nname: crowdsecurity/CVE-2024-38475\ndescription: \"Detect CVE-2024-38475 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && \n  evt.Meta.http_status in ['404', '403'] &&\n  Lower(evt.Parsed.request) endsWith '%3f'\ngroupby: \"evt.Meta.source_ip\"\ndistinct: \"evt.Parsed.request\"\ncapacity: 3\nblackhole: 2m\nleakspeed: 10s\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2024-38475\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CVE-2024-38475\"\n  service: apache\n", "description": "Detect CVE-2024-38475 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2024-38475.yaml", "version": "0.1", "versions": {"0.1": {"digest": "25a21f3a674beaf577f83b7d4be9df984baa535cd4d6bd17dfc1a935d697f5a1"}}}, "crowdsecurity/CVE-2024-9474": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/CVE-2024-9474\ndescription: \"Detect CVE-2024-9474 exploitation attempts\"\nfilter: |\n  let request = Lower(evt.Parsed.request);\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && \n  evt.Meta.http_status in ['404', '403'] &&\n  evt.Meta.http_verb == 'POST' &&\n  request contains '/php/utils/createremoteappwebsession.php/watchtowr.js.map'\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2024-9474\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CVE-2024-9474\"\n  service: panos\n", "description": "Detect CVE-2024-9474 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2024-9474.yaml", "version": "0.1", "versions": {"0.1": {"digest": "940674a85da7a2526655fe902d8b5e197ad9048d2a09cd8132e6115cfd5d2fcf"}}}, "crowdsecurity/amavis-blocked": {"content": "type: trigger\nname: crowdsecurity/amavis-blocked\ndescription: \"Ban IPs that are blocked by amavis\"\nfilter: evt.Meta.log_type == 'amavis' && evt.Parsed.amavis_action == 'Blocked' && evt.Parsed.amavis_category == 'INFECTED'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: amavis\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1203\n    - attack.T1204\n  behavior: \"mail:malware\"\n  label: \"Infected Email\"\n  remediation: true\n", "description": "Ban IPs that are blocked by amavis", "path": "scenarios/crowdsecurity/amavis-blocked.yaml", "version": "0.1", "versions": {"0.1": {"digest": "2f09014557f8900e50f5b33ae10f86292d9274a7f32cee54d783ab26abc8cafa"}}}, "crowdsecurity/apache_log4j2_cve-2021-44228": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/apache_log4j2_cve-2021-44228\ndescription: \"Detect cve-2021-44228 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n  (\n    any(File(\"log4j2_cve_2021_44228.txt\"), { Upper(evt.Meta.http_path) contains Upper(#)})\n  or\n    any(File(\"log4j2_cve_2021_44228.txt\"), { Upper(evt.Parsed.http_user_agent) contains Upper(#)})\n  or\n    any(File(\"log4j2_cve_2021_44228.txt\"), { Upper(evt.Parsed.http_referer) contains Upper(#)})  \n  )\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/log4j2_cve_2021_44228.txt\n    dest_file: log4j2_cve_2021_44228.txt\n    type: string\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: apache\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2021-44228\n  behavior: \"http:exploit\"\n  label: \"Log4j CVE-2021-44228\"\n  remediation: true\n", "description": "Detect cve-2021-44228 exploitation attemps", "path": "scenarios/crowdsecurity/apache_log4j2_cve-2021-44228.yaml", "version": "0.6", "versions": {"0.1": {"digest": "7ee4024160a62e888d7db882eb4ed100de915716b91be09cef64390381babfb9"}, "0.2": {"digest": "578cd7121a0cf424affcb435c57d6a03d00569258e5b066459b9f87fe02bfacc"}, "0.3": {"digest": "16e1244697e41f006b1bfb7a4bd957d22d18b75f4dba94812a9dfc4a7135808d"}, "0.4": {"digest": "587688aca2067e8c8fba50f796ba0502e955696d4d545edf70b9b5162b0cf944"}, "0.5": {"digest": "67db0782f3610b7b183878b981e69c197599256d8e1041c0e705806f40ef4786"}, "0.6": {"digest": "1c3e13c4a6343d14c4bff1ddb46148215c2cceacff12d29d10c33de32c57fe09"}}}, "crowdsecurity/appsec-vpatch": {"content": "type: leaky\nformat: 3.0\nname: crowdsecurity/appsec-vpatch\ndescription: \"Identify attacks flagged by CrowdSec AppSec\"\nfilter: \"evt.Meta.log_type == 'appsec-block'\"\ndistinct: evt.Meta.rule_name\nleakspeed: \"60s\"\ncapacity: 1\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Blocked by CrowdSec AppSec\"\n  behavior: \"http:exploit\"\n  remediation: true\n", "description": "Identify attacks flagged by CrowdSec AppSec", "path": "scenarios/crowdsecurity/appsec-vpatch.yaml", "version": "0.5", "versions": {"0.1": {"digest": "6da853b06b3fb716d6094ebdf881df90d27239637ff3389b202b0077eda7acea"}, "0.2": {"digest": "f43baacd1a6756c8d6c51f632ad52871708b4176d490d77975491fd1c55a8e3d"}, "0.3": {"digest": "7e5f221a8a725d96df1ba2f6e32de34e02dc98abbb9598e72095ad0db94d6a13"}, "0.4": {"digest": "bff8b59bc08be10ca0fd4d365998be0545fe30f4988c4de2182ce359062a9cf1"}, "0.5": {"digest": "1bcb56461c80867d379cec5753869e7e9e036aa8c5a1382439197066c7c3489c"}}}, "crowdsecurity/asterisk_bf": {"content": "type: leaky\nname: crowdsecurity/asterisk_bf\ndescription: \"Detect Asterisk user bruteforce\"\nfilter: evt.Meta.log_type == 'asterisk_failed_auth'\ngroupby: evt.Meta.source_ip\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: asterisk\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"sip:bruteforce\"\n  label: \"Asterisk Bruteforce\"\n  remediation: true\n", "description": "Detect Asterisk user bruteforce", "path": "scenarios/crowdsecurity/asterisk_bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "ce783ad467c8ca271aa023c57ff56305ba2b5f15c7cb6a7ca2079225437eabc8"}, "0.2": {"digest": "54d674323789711134c7aabd9ffad454c07a32aa21905dbaef15b6e1c6a3b984"}, "0.3": {"digest": "43bb0cfaf64bf6f4e2c3bcdb18d5791eae23443484838f79e8cb58d0d16b12a2"}}}, "crowdsecurity/asterisk_user_enum": {"content": "type: leaky\nname: crowdsecurity/asterisk_user_enum\ndescription: \"Detect Asterisk user enumeration bruteforce\"\nfilter: evt.Meta.log_type == 'asterisk_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: asterisk\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1087\n    - attack.T1589.001\n    - attack.T1110\n  behavior: \"sip:bruteforce\"\n  label: \"Asterisk User Enumeration\"\n  remediation: true\n", "description": "Detect Asterisk user enumeration bruteforce", "path": "scenarios/crowdsecurity/asterisk_user_enum.yaml", "version": "0.3", "versions": {"0.1": {"digest": "10fc279bfe68cfc577c4d6a4e76a4101579850556129e62dbebf2b8abaebc0c6"}, "0.2": {"digest": "ac4821e724e71a3770b3f7f26ad7da296e1ac207a710fbe061ed503e771392f7"}, "0.3": {"digest": "34f8b68ab93046c9b1b746d0c5ecf6b749ef0eaef2ce15234a92e08c52bd01e0"}}}, "crowdsecurity/auditd-base64-exec-behavior": {"content": "type: conditional\n#debug: true\nname: crowdsecurity/auditd-base64-exec-behavior\ndescription: \"Detect post-exploitation behaviour : base64 + interpreter (perl/bash/python)\"\nfilter: evt.Meta.log_type == 'execve'\n#grouping by ppid to track a processs invoking base64 and interpreter in sequence\ngroupby: evt.Meta.ppid\ncondition: |\n  any(queue.Queue, {.Meta.exe == \"/usr/bin/base64\"})\n  and (\n    any(queue.Queue, { .Meta.exe matches '^\\\\/(usr\\\\/(local\\\\/)?)?bin\\\\/(sh|bash|perl|dash|zsh)$' })\n    or\n    any(queue.Queue, { .Meta.exe startsWith \"/usr/bin/python\" })\n  )\nleakspeed: 1s\ncapacity: -1\nblackhole: 1m\nlabels:\n  service: linux\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution from base64 encoded payload\"\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : base64 + interpreter (perl/bash/python)", "path": "scenarios/crowdsecurity/auditd-base64-exec-behavior.yaml", "version": "0.5", "versions": {"0.1": {"digest": "01ad2b3595589418088a1e6632ef6347ccaee8300cc6bb4f5253e9163fbaa62d"}, "0.2": {"digest": "ab246bb73970e0b93a0961ba2a5b7d259e81bebf308ea866e88c379d9fe288f3"}, "0.3": {"digest": "6d1f5e2a9d7b4f61fcd307522207cb05ec32fcc9aee873cd07ab6a9d4252e2fa"}, "0.4": {"digest": "fa19b4b34979e46b9d686c411470c4b9053db1913a9cc595abac29d820db617f"}, "0.5": {"digest": "abdb7d3b5f2c6a7b995801257bb0ec10194e702994f67eee9078e70389ec51b8"}}}, "crowdsecurity/auditd-postexploit-exec-from-net": {"content": "type: conditional\nname: crowdsecurity/auditd-postexploit-exec-from-net\ndescription: \"Detect post-exploitation behaviour : curl/wget and exec\"\nfilter: evt.Meta.log_type == 'execve'\n#grouping by ppid to track a process doing those action in a short timeframe\ngroupby: evt.Meta.ppid\ncondition: |\n  any(queue.Queue, {.Meta.exe in [\"/usr/bin/wget\", \"/usr/bin/curl\"]}) \n  and (\n    any(queue.Queue, { !(.Meta.exe startsWith \"/usr/\" or .Meta.exe startsWith \"/bin/\" or .Meta.exe startsWith \"/sbin/\")})\n    or any(queue.Queue, { .Meta.exe in [\"/bin/sh\", \"/bin/bash\", \"/bin/dash\"] })\n  )\nleakspeed: 1s\ncapacity: -1\nblackhole: 1m\nlabels:\n  service: linux\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution from Internet\"\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : curl/wget and exec", "path": "scenarios/crowdsecurity/auditd-postexploit-exec-from-net.yaml", "version": "0.6", "versions": {"0.1": {"digest": "8e98c791ceed799f8a8fa4b48cb7ed5cf5cf48f2bd715852abd618629ce2f117"}, "0.2": {"digest": "47e2b060a12521187e294ae7896c95e6f4d51332cfce4b93d948c1e9900d835d"}, "0.3": {"digest": "51de5dc579b427163824f1a6e461b573121a9a1bc46e8aae12b54398f8e7987b"}, "0.4": {"digest": "3b868458b224abb3b257380bb2e1bc07e1144ed90495073d5672d0aa614a4942"}, "0.5": {"digest": "39cc4cd87c4db7bd86a5785e378e4a961ebc31ba348d2bbe752101c971ca630f"}, "0.6": {"digest": "a2859770f0b19a05ca09b6996b1aaa9242717889cec4f46053b7345d94798170"}}}, "crowdsecurity/auditd-postexploit-pkill": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/auditd-postexploit-pkill\ndescription: \"Detect post-exploitation behaviour : pkill execve bursts\"\n#we're looking for the EXCVE syscalls to 'pkill' (which is actually pgrep)\nfilter: evt.Meta.log_type == 'execve' && evt.Meta.exe == '/usr/bin/pgrep'\n#grouping by ppid to track on process doing a lot of invocations to rm, such as a shell script\ngroupby: evt.Meta.ppid\nleakspeed: 1s\ncapacity: 5\nblackhole: 1m\nlabels:\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution\"\n  service: linux\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : pkill execve bursts", "path": "scenarios/crowdsecurity/auditd-postexploit-pkill.yaml", "version": "0.5", "versions": {"0.1": {"digest": "a355d046ce043b9d8bbfa5af6da5adcd7713c87023760aa02c54318ad82a6cb6"}, "0.2": {"digest": "add35f7085ac9fe23f3e5d6f681f44e259c28cf9487c6d164fc725d1a006bafb"}, "0.3": {"digest": "4f00c669acb7a749550c3917add74c98b4e790ebb28f6ccfe99df5ecc54d66be"}, "0.4": {"digest": "70041b125f78f1cda89037a7eedc37cad8e4e8caeb344619e0250356288ef198"}, "0.5": {"digest": "797a415beedd9044edbb9a45f3d016a3a6b1d3de49c4e3f0c650346ee63303c5"}}}, "crowdsecurity/auditd-postexploit-rm": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/auditd-postexploit-rm\ndescription: \"Detect post-exploitation behaviour : rm execve bursts\"\nfilter: evt.Meta.log_type == 'execve' && evt.Meta.exe in ['/usr/bin/rm', '/bin/rm']\n#grouping by ppid to track on process doing a lot of invocations to rm, such as a shell script\ngroupby: evt.Meta.ppid\nleakspeed: 1s\ncapacity: 5\nblackhole: 1m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution\"\n  service: linux\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : rm execve bursts", "path": "scenarios/crowdsecurity/auditd-postexploit-rm.yaml", "version": "0.6", "versions": {"0.1": {"digest": "2e67dbdc8c9d1d41590bf25b9545d41896e474e824c02fd990d80a5ca6e26690"}, "0.2": {"digest": "1076f3e12dbe4bc70a36c4fa381dccc0455a3f35683396e0c1c0fd7607adc8aa"}, "0.3": {"digest": "e1f5d86bd9832cceea19f61e8186b5368a95a3775eedac84e119fe3f3c9f0dff"}, "0.4": {"digest": "8ec71aebc88e33154f04d09a8869da345a8397378bd2b640ec83ac20487b261f"}, "0.5": {"digest": "0dc101ad125359dc15d67d9c8ae6915e9958b2bf4fa6689305c06446d79a5ccd"}, "0.6": {"digest": "43f984dde9205c2aa0bdef13c5fe129818fd4c9f6ed8820ae005eba9b82288e7"}}}, "crowdsecurity/auditd-suid-crash": {"content": "type: conditional\nname: crowdsecurity/auditd-suid-crash\ndescription: \"Detect root suid process crashing\"\nfilter: |\n  (evt.Meta.log_type == 'execve' && evt.Meta.euid == '0' && evt.Meta.auid != '0') ||\n  (evt.Meta.log_type == 'anom_abend' && evt.Meta.sig in [\"4\", \"5\", \"6\", \"7\", \"11\"])\ngroupby: evt.Meta.pid\ndistinct: evt.Meta.log_type\ncondition: |\n  len(queue.Queue) >= 2 and \n    queue.Queue[0].Meta.exe == queue.Queue[1].Meta.exe\nleakspeed: 1s\ncapacity: -1\nblackhole: 1m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1548.004\n  behavior: \"linux:exploitation\"\n  label: \"Suspicious suid process crash\"\n  service: linux\n  remediation: false\nscope:\n  type: exe\n  expression: evt.Meta.exe\n", "description": "Detect root suid process crashing", "path": "scenarios/crowdsecurity/auditd-suid-crash.yaml", "version": "0.6", "versions": {"0.1": {"digest": "363efa4bbcda1abd870a49673ab402da63312259200e69bf9f80d565b24e4f45"}, "0.2": {"digest": "29d4aebd147556c63bcf0326715748906d64218a30aeaa1053487f05f611a29f"}, "0.3": {"digest": "da9f24318ba7ac6044b32ac6bed32f86c0d88510da9391d59fd49cc8ee5a8cfa"}, "0.4": {"digest": "dc0fbe8017135b72ac74375ceb47f5ac3e21c5eb7a23bbb11c172ee084e58b73"}, "0.5": {"digest": "9f6e2c91a81162a179ae729c699c19f2ac0cc19f5d9e7a3966fbe0c3f58588c6"}, "0.6": {"digest": "de0dd532eba64e3b20c8ef7103e8523c36248bbb13ed09239ace03e88b5d1862"}}}, "crowdsecurity/auditd-sus-exec": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/auditd-sus-exec\ndescription: \"Detect post-exploitation behaviour : exec from suspicious locations\"\nfilter: evt.Meta.log_type == 'execve' and ( evt.Meta.exe startsWith \"/tmp/\" or evt.Meta.exe contains \"/.\" )\nlabels:\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution\"\n  service: linux\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : exec from suspicious locations", "path": "scenarios/crowdsecurity/auditd-sus-exec.yaml", "version": "0.5", "versions": {"0.1": {"digest": "d640df2e1a53d962c97ee25af290916f88d86150fc210b43f011e665851c27cd"}, "0.2": {"digest": "ef0511f7abb4cb4b5928c55c01d40fec82000e070ec26b4919ce15a02ecff9db"}, "0.3": {"digest": "6479dc2b4df46e7543bdfce520b9da643e938d73edb02942c9e1db6a517da7bc"}, "0.4": {"digest": "0327ca4407411b20163172412db4141577f60ed5db65c406ab02da6711c7b4de"}, "0.5": {"digest": "ab7718fd1696b50c1f6d9b990f057d4b37d2d45accb9a6aca3a44232f0b4776e"}}}, "crowdsecurity/aws-bf": {"content": "type: leaky\ncapacity: 5\nleakspeed: 30s\nname: crowdsecurity/aws-cloudtrail-bf-console-login\ndescription: \"Detect console login bruteforce\"\nfilter: |\n    evt.Meta.log_type == 'aws-cloudtrail' && (\n      (evt.Meta.event_name == 'ConsoleLogin' && evt.Unmarshaled.cloudtrail.responseElements.ConsoleLogin == 'Failure') || \n      (evt.Meta.event_name == 'GetSessionToken' && evt.Meta.error_code=='AccessDenied') || \n      (evt.Meta.event_name == 'GetFederationToken' && evt.Meta.error_code=='AccessDenied')\n    )\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nscope:\n  type: Ip\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n   - attack.T1110\n  behavior: \"cloud:bruteforce\"\n  label: \"AWS bruteforce\"\n  service: aws\n  remediation: false\n", "description": "Detect console login bruteforce", "path": "scenarios/crowdsecurity/aws-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "e9d8fa22c9685ae290834b7d6a6414d39b51d0066903f144ac5ce97c1c333fbc"}, "0.2": {"digest": "397984681b4320e2c6a51bdfdd4938c7ce0a472e168e21abd6d2e3752f29ce15"}, "0.3": {"digest": "af758e1957e75e8eb95b0305b93d84dc3ec9dc3194569f4221dda91fac300469"}, "0.4": {"digest": "087c8513173a6c47e9e7a4f1565acc5ed89d4ee3b97046369d65c3f0771c78e3"}}}, "crowdsecurity/aws-cis-benchmark-cloudtrail-config-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-cloudtrail-config-change\ndescription: \"Detect AWS CloudTrail configuration change\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  (\n  evt.Meta.event_name == \"CreateTrail\" ||\n  evt.Meta.event_name == \"UpdateTrail\" ||\n  evt.Meta.event_name == \"DeleteTrail\" ||\n  evt.Meta.event_name == \"StartLogging\" ||\n  evt.Meta.event_name == \"StopLogging\"\n  )\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1070\n  behavior: \"cloud:audit\"\n  label: \"AWS CloudTrail indicator removal\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS CloudTrail configuration change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-cloudtrail-config-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0c1565cb16ff3c47ac734540ffb5336b56d776a4f2aedb8a711e688d91a798be"}, "0.2": {"digest": "49301847b1949702565f8f21c9e712f77091d2cca2aa9295c3754ef47a6a66fd"}, "0.3": {"digest": "db8a91cd9a7633e7247fbed247c56409f5069f4d05ce2eae415ecb86473e21ef"}}}, "crowdsecurity/aws-cis-benchmark-config-config-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-config-config-change\ndescription: \"Detect AWS Config configuration change\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' && \n  evt.Unmarshaled.cloudtrail.eventSource == \"config.amazonaws.com\" &&\n  (\n   evt.Meta.event_name == \"StopConfigurationRecorder\" ||\n   evt.Meta.event_name == \"DeleteDeliveryChannel\" ||\n   evt.Meta.event_name == \"PutDeliveryChannel\" ||\n   evt.Meta.event_name == \"PutConfigurationRecorder\"\n  )\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1070\n  behavior: \"cloud:audit\"\n  label: \"AWS Config indicator removal\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS Config configuration change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-config-config-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "89682b953904dfeba200893663da5739fc9413ba49fb62680077e99dc5b9304d"}, "0.2": {"digest": "fea7794d9faf11307df2430f12549e4d1d53a900d54cde602cda1f1df3d70f7c"}, "0.3": {"digest": "91b2bf6f35ee2d445b8796c04a7db9ff758a57ad9dfddfca64a96596f940d2d8"}}}, "crowdsecurity/aws-cis-benchmark-console-auth-fail": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-console-auth-fail\ndescription: \"Detect AWS console authentication failure\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' && \n  evt.Meta.event_name == \"ConsoleLogin\" && \n  evt.Unmarshaled.cloudtrail.errorMessage == \"Failed authentication\"\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"cloud:bruteforce\"\n  label: \"AWS bruteforce\"\n  service: aws\n  remediation: false\n", "description": "Detect AWS console authentication failure", "path": "scenarios/crowdsecurity/aws-cis-benchmark-console-auth-fail.yaml", "version": "0.3", "versions": {"0.1": {"digest": "85fcb63c663930b9f594149cd3c8539697878f93ac09c0c3d36decb71fb5ce37"}, "0.2": {"digest": "3a33549ef1d3817ae5a5f8401dab3c1ae94f1652e0e368afbef2c6174e2250d1"}, "0.3": {"digest": "de9ccd8f59613c7193d0382699d690c28c7f5b8ea62157b78433c0f8db9efc64"}}}, "crowdsecurity/aws-cis-benchmark-iam-policy-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-iam-policy-change\ndescription: \"Detect AWS IAM policy change\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  (\n    evt.Meta.event_name == \"DeleteGroupPolicy\" ||\n    evt.Meta.event_name == \"DeleteRolePolicy\" ||\n    evt.Meta.event_name == \"DeleteUserPolicy\" ||\n    evt.Meta.event_name == \"PutGroupPolicy\" ||\n    evt.Meta.event_name == \"PutRolePolicy\" ||\n    evt.Meta.event_name == \"PutUserPolicy\" ||\n    evt.Meta.event_name == \"CreatePolicy\" ||\n    evt.Meta.event_name == \"DeletePolicy\" ||\n    evt.Meta.event_name == \"CreatePolicyVersion\" ||\n    evt.Meta.event_name == \"DeletePolicyVersion\" ||\n    evt.Meta.event_name == \"AttachRolePolicy\" ||\n    evt.Meta.event_name == \"DetachRolePolicy\" ||\n    evt.Meta.event_name == \"AttachUserPolicy\" ||\n    evt.Meta.event_name == \"DetachUserPolicy\" ||\n    evt.Meta.event_name == \"AttachGroupPolicy\" ||\n    evt.Meta.event_name == \"DetachGroupPolicy\"\n  )\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1098.003\n  behavior: \"cloud:audit\"\n  label: \"AWS IAM persistent access\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS IAM policy change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-iam-policy-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "83c4a6cc8276b0deed37070abd250799256a470effb6891e912b5a84c4e90ab8"}, "0.2": {"digest": "3b0e6063d92530f6ca4a78a05a4005d6513d84a7bb956adf5885e9d21b9cfb7a"}, "0.3": {"digest": "a4e20fa41638b68e70403d65912af5d10f2abb3737400ff22b64de36524ca6df"}}}, "crowdsecurity/aws-cis-benchmark-kms-deletion": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-kms-deletion\ndescription: \"Detect AWS KMS key deletion\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  evt.Unmarshaled.cloudtrail.eventSource == \"kms.amazonaws.com\" &&\n  (evt.Meta.event_name == \"DisableKey\" || evt.Meta.event_name == \"ScheduleKeyDeletion\")\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1485\n  behavior: \"cloud:audit\"\n  label: \"AWS KMS indicator removal\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS KMS key deletion", "path": "scenarios/crowdsecurity/aws-cis-benchmark-kms-deletion.yaml", "version": "0.3", "versions": {"0.1": {"digest": "1ba56c6b7e00f956d4882fedd48a76c2dd41af5d4c87b5940a95a6c649b7d5cf"}, "0.2": {"digest": "3c449f3d2bc65d63b18d487235802fc76041ee070725e8d1c450e4b308953951"}, "0.3": {"digest": "90b8df48f799eedc39cbe7eb2f4ce03705369054cbc670cd4f5f70f226673f41"}}}, "crowdsecurity/aws-cis-benchmark-login-no-mfa": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-login-no-mfa\ndescription: \"Detect login without MFA to the AWS console\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  evt.Meta.event_name == \"ConsoleLogin\" &&\n  evt.Unmarshaled.cloudtrail.additionalEventData.MFAUsed != \"Yes\" &&\n  evt.Unmarshaled.cloudtrail.userIdentity.type == \"IAMUser\" &&\n  evt.Unmarshaled.cloudtrail.responseElements.ConsoleLogin == \"Success\"\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1552\n    - attack.T1078.004\n  label: \"AWS Credential misuse\"\n  behavior: \"cloud:unusual-activity\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect login without MFA to the AWS console", "path": "scenarios/crowdsecurity/aws-cis-benchmark-login-no-mfa.yaml", "version": "0.3", "versions": {"0.1": {"digest": "acbd23a2dfe15721356f918ed88d0cc5ff6339dfc84209bbd32c2846f6344838"}, "0.2": {"digest": "c08ae8cabf835305150c43555784b8efce56b8c76ba51ec900bbe0e4455360d9"}, "0.3": {"digest": "e2b29eee2cb68292071234841b8f11e4d9599357f5e81e575a4919671b45c764"}}}, "crowdsecurity/aws-cis-benchmark-nacl-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-nacl-change\ndescription: \"Detect AWS NACL change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"CreateNetworkAcl\" ||\n     evt.Meta.event_name == \"CreateNetworkAclEntry\" ||\n     evt.Meta.event_name == \"DeleteNetworkAcl\" ||\n     evt.Meta.event_name == \"DeleteNetworkAclEntry\" ||\n     evt.Meta.event_name == \"ReplaceNetworkAclEntry\" ||\n     evt.Meta.event_name == \"ReplaceNetworkAclAssociation\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS NACL change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS NACL change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-nacl-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "803aa6ee23f0c3b96d4d5860223cd8cfb5c9e51ee7ba20ebac5efd3cb26a3211"}, "0.2": {"digest": "b15c1c9eaa7b1e5aff2092996c79e469049230f2d299fb17dfeae30152812417"}, "0.3": {"digest": "447a0db8b568d4b0725b87b8f798999b037344e7edfbfc44ac795130b45f9696"}}}, "crowdsecurity/aws-cis-benchmark-ngw-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-ngw-change\ndescription: \"Detect AWS Network Gateway change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"CreateCustomerGateway\" ||\n     evt.Meta.event_name == \"DeleteCustomerGateway\" ||\n     evt.Meta.event_name == \"AttachInternetGateway\" ||\n     evt.Meta.event_name == \"CreateInternetGateway\" ||\n     evt.Meta.event_name == \"DeleteInternetGateway\" ||\n     evt.Meta.event_name == \"DetachInternetGateway\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS Network Gateway change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS Network Gateway change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-ngw-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "5a14ac3091ce73ecd32c2f37f5280676baae5b9b8161435bdd71a010a1faeb0d"}, "0.2": {"digest": "802a2aeb7b24f95c4280e75ec62efa941af5714785d1828dddb35e62fbe2ea2b"}, "0.3": {"digest": "07e40919e70ffc2a14ab744a51846b80ee486c061d4b4326fc0ddd65b2584a1f"}}}, "crowdsecurity/aws-cis-benchmark-root-usage": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-root-usage\ndescription: \"Detect AWS root account usage\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  evt.Unmarshaled.cloudtrail.userIdentity.type == \"Root\" &&\n  evt.Unmarshaled.cloudtrail.userIdentity.invokedBy == nil &&\n  evt.Unmarshaled.cloudtrail.eventType != \"AwsServiceEvent\"\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1078\n    - attack.T1098\n  behavior: \"cloud:unusual-activity\"\n  label: \"AWS root account usage\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS root account usage", "path": "scenarios/crowdsecurity/aws-cis-benchmark-root-usage.yaml", "version": "0.3", "versions": {"0.1": {"digest": "4fc540e39e1ee2d314e22c1d1fcfb2dfd215b2773befb7c0d688feacb4dd7f05"}, "0.2": {"digest": "0327d973e276861ef87fa71b6cf7503791d080e8cbf8e2581ae901e4dd270658"}, "0.3": {"digest": "e74032688adb9f64b803e02750bf257b7e6f4dd4557a796c0b2d28748539d0e0"}}}, "crowdsecurity/aws-cis-benchmark-route-table-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-route-table-change\ndescription: \"Detect AWS route table change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"CreateRoute\" ||\n     evt.Meta.event_name == \"CreateRouteTable\" ||\n     evt.Meta.event_name == \"ReplaceRoute\" ||\n     evt.Meta.event_name == \"ReplaceRouteTableAssociation\" ||\n     evt.Meta.event_name == \"DeleteRouteTable\" ||\n     evt.Meta.event_name == \"DeleteRoute\" ||\n     evt.Meta.event_name == \"DisassociateRouteTable\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS route table change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS route table change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-route-table-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "2ad4d52b87e36f02ab21e417aa716ddc55b07eb13c4c48acf18adb43d4b03784"}, "0.2": {"digest": "8a0f435a6f66b90447c8dd34b0b20767e1f83982793a4c7cf7d4fa61fb64018e"}, "0.3": {"digest": "c3f8f25d06824a347f4798d05e565847f9dbf5ed9fc3b3707ef3c947000b02ca"}}}, "crowdsecurity/aws-cis-benchmark-s3-policy-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-s3-policy-change\ndescription: \"Detect AWS S3 bucket policy change\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  evt.Unmarshaled.cloudtrail.eventSource == \"s3.amazonaws.com\" &&\n  (\n   evt.Meta.event_name == \"PutBucketAcl\" ||\n   evt.Meta.event_name == \"PutBucketPolicy\" ||\n   evt.Meta.event_name == \"PutBucketCors\" ||\n   evt.Meta.event_name == \"PutBucketLifecycle\" ||\n   evt.Meta.event_name == \"PutBucketReplication\" ||\n   evt.Meta.event_name == \"DeleteBucketPolicy\" ||\n   evt.Meta.event_name == \"DeleteBucketCors\" ||\n   evt.Meta.event_name == \"DeleteBucketLifecycle\" ||\n   evt.Meta.event_name == \"DeleteBucketReplication\"\n  )\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1578\n  behavior: \"cloud:audit\"\n  label: \"AWS S3 bucket policy change\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS S3 bucket policy change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-s3-policy-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "fdbf3d2258567b03570a351499548e9ddffcef378699e396488c402961010f3b"}, "0.2": {"digest": "8901ab45f32826f94cabd09b66aaae362e628784c89b54c5f2f3338c1de6ae43"}, "0.3": {"digest": "13dc450f6b43544b9b7a7f51dbc149cba22d63fc902b29fc7299e71538b424dc"}}}, "crowdsecurity/aws-cis-benchmark-security-group-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-security-group-change\ndescription: \"Detect AWS Security Group change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"AuthorizeSecurityGroupIngress\" ||\n     evt.Meta.event_name == \"AuthorizeSecurityGroupEgress\" ||\n     evt.Meta.event_name == \"RevokeSecurityGroupIngress\" ||\n     evt.Meta.event_name == \"RevokeSecurityGroupEgress\" ||\n     evt.Meta.event_name == \"CreateSecurityGroup\" ||\n     evt.Meta.event_name == \"DeleteSecurityGroup\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS Security Group change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS Security Group change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-security-group-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "d607b48d890f43c1f2c56fcf0ae77e762d2f3fffc197cfc9a9a5d512d7f8cbdf"}, "0.2": {"digest": "c3f007b90e064c06f12dc844c8b364f400c4cf136773f84a0e6592b3669b733e"}, "0.3": {"digest": "8d4a3a69d3af2137f542d56f0dc6e95bf1239b3c02d3570ac07d32ccc08e4520"}}}, "crowdsecurity/aws-cis-benchmark-unauthorized-call": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-unauthorized-call\ndescription: \"Detect AWS API unauthorized calls\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n          (evt.Unmarshaled.cloudtrail.errorCode != nil && evt.Unmarshaled.cloudtrail.errorCode matches \".*UnauthorizedOperation$\") ||\n          (evt.Unmarshaled.cloudtrail.errorCode != nil && evt.Unmarshaled.cloudtrail.errorCode matches \"^AccessDenied.*\")\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1212\n     behavior: \"cloud:audit\"\n     label: \"AWS API unauthorized calls\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS API unauthorized calls", "path": "scenarios/crowdsecurity/aws-cis-benchmark-unauthorized-call.yaml", "version": "0.4", "versions": {"0.1": {"digest": "170dec43ada23d1dbcc17b41339153be450c327cc52a0c7d6d185d27b980285e"}, "0.2": {"digest": "1c8f6f867a518195e0fceba35a5254464feac7747cd8f63003c7dd1ab196a578"}, "0.3": {"digest": "5a70025204fcf6e779098e33a95bd45af119fe889167b99c1889904800ffe9c5"}, "0.4": {"digest": "f8bcacd4930eb310c925ea58d3170bcaf6a765fbfb743e66de5406b88c26ea1a"}}}, "crowdsecurity/aws-cis-benchmark-vpc-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-vpc-change\ndescription: \"Detect AWS VPC change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"CreateVpc\" ||\n     evt.Meta.event_name == \"DeleteVpc\" ||\n     evt.Meta.event_name == \"ModifyVpcAttribute\" ||\n     evt.Meta.event_name == \"AcceptVpcPeeringConnection\" ||\n     evt.Meta.event_name == \"CreateVpcPeeringConnection\" ||\n     evt.Meta.event_name == \"DeleteVpcPeeringConnection\" ||\n     evt.Meta.event_name == \"RejectVpcPeeringConnection\" ||\n     evt.Meta.event_name == \"AttachClassicLinkVpc\" ||\n     evt.Meta.event_name == \"DetachClassicLinkVpc\" ||\n     evt.Meta.event_name == \"DisableVpcClassicLink\" ||\n     evt.Meta.event_name == \"EnableVpcClassicLink\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS VPC change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS VPC change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-vpc-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "03be2557184d98582fa9d460f45c73e67860926b8afbebea9737e2220e7ca54d"}, "0.2": {"digest": "ff3de61cf76336f3a9b87b8390172e9113ea3d92457845e29704fc114d8ec644"}, "0.3": {"digest": "dbaf2ca85f6d5129bb3ad9031559ce21b8a1eb844e3a614cb00c47f23dbfb803"}}}, "crowdsecurity/aws-cloudtrail-postexploit": {"content": "type: conditional\nname: crowdsecurity/aws-cloudtrail-postexploit\ndescription: \"postexploitation detection (noisy)\"\n#debug: true\ncapacity: -1\nleakspeed: 1m\ndistinct: evt.Meta.event_name\nfilter: evt.Meta.log_type == 'aws-cloudtrail'\ncondition: |\n  count(queue.Queue, #.Meta.event_name in [\"ListUserPolicies\", \"ListPolicies\", \"ListBuckets\", \"ListApplications\", \"DescribeInstances\", \"GetCallerIdentity\", \"GetFunctions\", \"DescribeAccountAttributes\", \"ListResources\"] or #.Meta.event_name startsWith \"ListFunctions\") > 2\nblackhole: 1m\nreprocess: true\ngroupby: evt.Meta.source_ip\nscope:\n  type: AwsARN\n  expression: evt.Meta.user_arn\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1087\n    - attack.T1526\n  behavior: \"cloud:audit\"\n  label: \"AWS post-exploitation detection\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "postexploitation detection (noisy)", "path": "scenarios/crowdsecurity/aws-cloudtrail-postexploit.yaml", "version": "0.3", "versions": {"0.1": {"digest": "66e1721989b0bca40bdf99b15be757138bdf9968153692618ada0a1df57d3131"}, "0.2": {"digest": "043c04b40049195eb4b64ee20f4273379b58b8937fdeaa538583ca31777f5b3e"}, "0.3": {"digest": "c42300373b23dd1d14b380c8ef7fbc491ac431726353f7142a1ecea1db1df4a3"}}}, "crowdsecurity/aws-nwo-login": {"content": "# NWD/NWH AWS console login\ntype: trigger\nname: crowdsecurity/aws-cloudtrail-nwo-nwd-console-login\ndescription: \"Detect console login outside of office hours\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  (evt.Meta.event_name == 'ConsoleLogin' || evt.Meta.event_name == 'GetSessionToken' || evt.Meta.event_name == 'GetFederationToken') &&\n  evt.Unmarshaled.cloudtrail.responseElements?.ConsoleLogin == 'Success' &&\n  (\n   (evt.Time.Hour() >= 18 || evt.Time.Hour() < 6) || \n   (evt.Time.Weekday().String() == 'Saturday' || evt.Time.Weekday().String() == 'Sunday')\n  )\ngroupby: evt.Meta.source_ip\nscope:\n  type: AwsARN\n  expression: evt.Meta.user_arn\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1078\n  behavior: \"cloud:unusual-activity\"\n  label: \"AWS bruteforce\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect console login outside of office hours", "path": "scenarios/crowdsecurity/aws-nwo-login.yaml", "version": "0.4", "versions": {"0.1": {"digest": "f093c51096d55419851635001ec2c2e31fbbc1453286237d1d6229ec1bcc6808"}, "0.2": {"digest": "d0e55e36721acc0280dffa4759e1f0f5e51d59864c5055fdc326eff851cae608"}, "0.3": {"digest": "ec5be63c7781960eadca9f774b2ea4e2461c8615741c5f039f3bc48bcd594b91"}, "0.4": {"digest": "09ef326dcdf808760c146ff2e5078245666b247c3023f30fb6f03cf27f8a0b3d"}}}, "crowdsecurity/ban-defcon-drop_range": {"content": "#TAP IT TWICE : if more than 5 unique IPs of a range are being banned, drop the range\ntype: leaky\n#debug: true\nname: crowdsecurity/ban-defcon-drop_range\ndescription: \"Ban a range if more than 5 ips from it are banned at a time\"\n#it's an overflow from a scenario that triggered a remediation ;)\nfilter: \"evt.GetType() == 'overflow' && evt.Overflow.Alert.Remediation == true\"\ngroupby: \"evt.Overflow.Alert.Source.Range\"\ndistinct: \"evt.Overflow.Alert.Source.IP\"\ncapacity: 5\nleakspeed: \"1m\"\nblackhole: 5m\nlabels:\n remediation: true\nscope:\n type: Range\n\n", "description": "Ban a range if more than 5 ips from it are banned at a time", "path": "scenarios/crowdsecurity/ban-defcon-drop_range.yaml", "version": "0.2", "versions": {"0.1": {"digest": "da839847a4a67c1787ea5185e2b25e1e26710ac3b12e7c179a9bdda8a99b2009"}, "0.2": {"digest": "e1068cba1ce38cc0c3b82b195e91b560e8675ae789c451bbef5c5b4aff1aff02"}}}, "crowdsecurity/configserver-lfd-bf": {"content": "type: trigger\nname: crowdsecurity/configserver-lfd-bf\ndescription: \"Detects SSH bruteforce attempts blocked by ConfigServer.\"\nfilter: \"evt.Parsed.program == 'lfd'\"\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: ssh\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"SSH Bruteforce\"\n  behavior: \"ssh:bruteforce\"\n  remediation: true\n\n", "description": "Detects SSH bruteforce attempts blocked by ConfigServer.", "path": "scenarios/crowdsecurity/configserver-lfd-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "5752cf0e3b12356803e6a3d0a2a97dd89ec3266b4ce0b49d48f6bfe5980ee5bc"}}}, "crowdsecurity/cpanel-bf": {"content": "type: leaky\nname: crowdsecurity/cpanel-bf\ncapacity: 5\nleakspeed: 10s\ndescription: \"Detect bruteforce on cpanel login\"\nfilter: \"evt.Meta.log_type == 'auth_bf_log'\"\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n   - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"cPanel Bruteforce\"\n  service: cpanel\n  remediation: true\n\n", "description": "Detect bruteforce on cpanel login", "path": "scenarios/crowdsecurity/cpanel-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "120b1820b330939330df55df5da536cbe0885c9df11a2a0986fe80197be68981"}, "0.2": {"digest": "25d6094169ab75c028f7d35e0b5bacf9ecf24e46484826c95405966562a2db0c"}, "0.3": {"digest": "de1e8f9f8b442ad1a83a61d19a13af18821475e69086940d6521fdd6751753e2"}, "0.4": {"digest": "a3216ec3c67bcfebd411b5c1240cd0fccb52d854031611fb1048f963ac91c26e"}}}, "crowdsecurity/cpanel-bf-attempt": {"content": "type: trigger\nname: crowdsecurity/cpanel-bf-attempt\ndescription: \"Detect bruteforce attempt on cpanel login\"\nfilter: \"evt.Meta.log_type == 'auth_bf_attempt'\"\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"cPanel Bruteforce\"\n  service: cpanel\n  remediation: true", "description": "Detect bruteforce attempt on cpanel login", "path": "scenarios/crowdsecurity/cpanel-bf-attempt.yaml", "version": "0.3", "versions": {"0.1": {"digest": "6b7b084a9a5ea68ade56b6bd171cfed65cc661b63b197a0f3cec2aef2fcdaeca"}, "0.2": {"digest": "fa0b71d88fe4a96298bea7caadb858795ad091656907e3f94223d12f98b91715"}, "0.3": {"digest": "c39220845d2f4df0519a620b3f92d8a54f7b81d9da9c34c460aca7ff5b9331a0"}}}, "crowdsecurity/crowdsec-appsec-inband": {"content": "type: leaky\nfilter: evt.Parsed.program == 'crowdsec-appsec' && evt.Appsec.HasInBandMatches == true && evt.Parsed.action in [\"deny\", \"drop\"]\n#debug: true\nname: crowdsecurity/crowdsec-appsec-inband\ndescription: IP has triggered multiples InBand CrowdSec appsec rules\nblackhole: 1m\nleakspeed: 30s\ncapacity: 1\ngroupby: evt.Meta.source_ip\ndistinct: evt.Appsec.GetName()\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n   - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"Triggered multiple InBand CrowdSec AppSec rules\"\n  service: http\n  remediation: true\n", "description": "IP has triggered multiples InBand CrowdSec appsec rules", "path": "scenarios/crowdsecurity/crowdsec-appsec-inband.yaml", "version": "0.4", "versions": {"0.1": {"digest": "bf202b09575fe406d17ff9cf267cfc81d228bc0575038a8ae91a137ed4405b58"}, "0.2": {"digest": "0d0bcfec8fb567aa86271f3e5c45feb16c6091f2c52c32db629117b0bba0e793"}, "0.3": {"digest": "71213c8536a1e04b36fe2e207ffec099982e78cf7d3ed6a8ecd26440f47cb1c0"}, "0.4": {"digest": "c613b7b73047d0038fb7c2125bf1839c59b0705f4d6f24a87318bc05e0f5a7e2"}}}, "crowdsecurity/crowdsec-appsec-outofband": {"content": "# just count distinct number of requests getting blocked\ntype: leaky\nfilter: evt.Parsed.program == 'crowdsec-waap' && evt.Appsec.HasInBandMatches == false && evt.Parsed.action in [\"deny\", \"drop\"]\nname: crowdsecurity/crowdsec-appsec-outofband\ndescription: IP has triggered more than 5 CrowdSec Out Of Band Waap rules\nblackhole: 2m\nleakspeed: 30s\ncapacity: 5\nlabels:\n  type: exploit\n  remediation: true\ngroupby: \"evt.Meta.source_ip\"\n#---\n# at least requests blocked on 3 distinct URIs\n#type: leaky\n#debug: true\n#filter: evt.Parsed.program == 'crowdsec-waap' && evt.Parsed.action == \"deny\"\n#name: crowdsecurity/waf-probing\n#description: \"WAF probing\"\n#blackhole: 2m\n#leakspeed: 60s\n#capacity: 5\n#groupby: \"evt.Meta.source_ip + evt.Parsed.target_uri\"\n#labels:\n#  type: exploit\n#  remediation: true\n#---\n# # at least 5 requests blocked with **distinct** IDs\n#type: conditional\n#debug: true\n#name: crowdsecurity/xss-probing\n#description: at least 5 different XSS rules\n#filter: evt.Parsed.program == 'crowdsec-waap' && evt.Parsed.action == \"deny\"\n#condition: len( distinct( merge( all(evt.Queue, { #.Waap.GetIDs()}) ) ) ) > 5\n#condition: |\n#  LogInfo(\"%+v\", FlattenDistinct( \n#      map( queue.Queue, \n#      #.Waap.ByTagRx(\".*xss.*\").GetRuleIDs()\n#      ) \n#    )) &&\n#  len( \n#    FlattenDistinct( \n#      map( queue.Queue, \n#      #.Waap.ByTagRx(\".*xss.*\").GetRuleIDs()\n#      ) \n#    )) > 5\n#condition: 'Distance(\"aa\", \"bb\", \"cc\", { #.Parsed.toto == 1 })'\n#capacity: -1\n#cache_size: 1000\n#leakspeed: 30s\n#distinct: evt.Meta.source_ip", "description": "IP has triggered more than 5 CrowdSec Out Of Band Waap rules", "path": "scenarios/crowdsecurity/crowdsec-appsec-outofband.yaml", "version": "0.3", "versions": {"0.1": {"digest": "1e9a7f01a451b2322f1125b0dfba3c5cdd3dca53e69eb38f245a3e25af6952df"}, "0.2": {"digest": "59393376cbcfb85cd7e609c5fe2c958aa60c519d7ff0ee310f1bab2af01d38e9"}, "0.3": {"digest": "47b3cd0887f58785c2b6a064f4da46e36a17a6e7d34c4893b0bd8308271fe0be"}}}, "crowdsecurity/dovecot-spam": {"content": "#contribution by @ltsich\ntype: leaky\nname: crowdsecurity/dovecot-spam\ndescription: \"detect errors on dovecot\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'dovecot_logs' && evt.Meta.dovecot_login_result == 'auth_failed'\"\ngroupby: evt.Meta.source_ip\ncapacity: 3\nleakspeed: \"360s\"\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Dovecot Bruteforce\"\n  service: dovecot\n  remediation: true\n", "description": "detect errors on dovecot", "path": "scenarios/crowdsecurity/dovecot-spam.yaml", "version": "0.5", "versions": {"0.1": {"digest": "fc1429f0c8d5b1ba20660ac0725fe0b52bb0382efa746e9bd962d80bdf7c9310"}, "0.2": {"digest": "e3feff9a377f6b7e72a29910d6ebfee52436163767f876d21b41e2ae2e9618b2"}, "0.3": {"digest": "c350f1a24a7ff5aed8902691a1bf67b08e963a013dffc3e2500c9db61ad6b62e"}, "0.4": {"digest": "8c5fd647e5f2ad29620b0dc37c5221a4b6f6a24bf443b55837ebcac290ecf17c"}, "0.5": {"digest": "8151d0ea27afdabc547503cbcf2f878a7a553479162b1eff2d31fcd77bffb3c4"}}}, "crowdsecurity/endlessh-bf": {"content": "# endlessh bruteforce\ntype: leaky\nname: crowdsecurity/endlessh-bf\ndescription: \"Detect SSH bruteforce caught by Endlessh\"\nfilter: \"evt.Meta.log_type == 'endlessh_accept'\"\nleakspeed: \"5m\"\nreferences:\n  - http://wikipedia.com/ssh-bf-is-bad\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 120m\nreprocess: true\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"Endlessh Bruteforce\"\n  service: endlessh\n  remediation: true\n", "description": "Detect SSH bruteforce caught by Endlessh", "path": "scenarios/crowdsecurity/endlessh-bf.yaml", "references": ["http://wikipedia.com/ssh-bf-is-bad"], "version": "0.3", "versions": {"0.1": {"digest": "2113a6f5e8e2d675581e93d4bcf546526d0bd22aaa35ecafdd041d95e3f3422d"}, "0.2": {"digest": "b241bc0364aeed20ee30fb8d2ee2b748b71751592a89c9e86eaf4f6a49a25bcb"}, "0.3": {"digest": "6291aad0e47390f308dd859747e9044242df3c8f8c526beaae37fbd960e4d8aa"}}}, "crowdsecurity/exchange-bf": {"content": "type: leaky\nname: crowdsecurity/exchange-bf\ndescription: \"Detect Exchange bruteforce (SMTP,IMAP,POP3)\"\nfilter: evt.Meta.service == 'exchange' && evt.Meta.sub_type == 'auth_fail'\ngroupby: evt.Meta.source_ip\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Microsoft Exchange Bruteforce\"\n  remediation: true\n  service: exchange\n", "description": "Detect Exchange bruteforce (SMTP,IMAP,POP3)", "path": "scenarios/crowdsecurity/exchange-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "7900671abf67cdc000b2dd68d0da35a0960e07f4ac3505fdd4d78f929c29a238"}, "0.2": {"digest": "8d67052a1fc4e5b48be549165ed6ea47aebaa154960166828fd8b114a6ba5bd0"}, "0.3": {"digest": "51d223031a71e4215a9ffe78feec7f855a493f8e00e6e760c15aa38915a98bef"}, "0.4": {"digest": "1618d565cba5af16afc95581b0ac5f9cc3fabd11d23cc557db7e03dc8d190959"}}}, "crowdsecurity/exim-bf": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/exim-bf\ndescription: \"Detect Exim brute force\"\nfilter: \"evt.Meta.log_type == 'exim_failed_auth'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Exim Bruteforce\"\n  remediation: true\n  service: smtp\n---\ntype: leaky\n#debug: true\nname: crowdsecurity/exim-user-bf\ndescription: \"Detect Exim user email brute force\"\nfilter: \"evt.Meta.log_type == 'exim_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Exim Bruteforce\"\n  remediation: true\n  service: smtp\n", "description": "Detect Exim brute force", "path": "scenarios/crowdsecurity/exim-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "a5e177acbd8bbc3a6330100dc64aaebc14f5915a1dda3a8115e54f8825227e7b"}, "0.2": {"digest": "7f3433d01cf835eced84072ce8475e650740aec6300637757a47a4800a4d846e"}, "0.3": {"digest": "ed16960edefc234b6d1685db4b7cb831fbea29f65115e28ab703c7cb721cb681"}}}, "crowdsecurity/exim-spam": {"content": "type: leaky\nname: crowdsecurity/exim-spam\ndescription: \"Detect spam on Exim\"\n#debug: true\nfilter: \"evt.Meta.log_type == 'spam-attempt' && evt.Meta.service == 'exim'\"\ngroupby: evt.Meta.source_ip\ncapacity: 3\nleakspeed: \"360s\"\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  behavior: \"smtp:spam\"\n  label: \"Exim Spam\"\n  remediation: true\n  service: smtp\n", "description": "Detect spam on Exim", "path": "scenarios/crowdsecurity/exim-spam.yaml", "version": "0.3", "versions": {"0.1": {"digest": "b556e7f5a75118639d28765e93ae858bfa5416b8e73142c5b318bfda8ca1ae6e"}, "0.2": {"digest": "d679e96623139ba186423cbdc3bdb4d98baf33811321cad0a8d2b6d4895dcc44"}, "0.3": {"digest": "a7c7435313a9225cb4003f8fb924c3bf19a6fe21c2c69b29814a4d421c63ade7"}}}, "crowdsecurity/f5-big-ip-cve-2020-5902": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/f5-big-ip-cve-2020-5902\ndescription: \"Detect cve-2020-5902 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    (\n    Upper(evt.Meta.http_path) matches Upper('/tmui/login.jsp/..;/tmui/[^.]+.jsp\\\\?(fileName|command|directoryPath|tabId)=')\n    or\n    Upper(evt.Meta.http_path) matches Upper('/tmui/login.jsp/%2E%2E;/tmui/[^.]+.jsp\\\\?(fileName|command|directoryPath|tabId)=')\n    )\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2020-5902\n  behavior: \"http:exploit\"\n  label: \"CVE-2020-5902\"\n  remediation: true\n  service: f5\n", "description": "Detect cve-2020-5902 exploitation attemps", "path": "scenarios/crowdsecurity/f5-big-ip-cve-2020-5902.yaml", "version": "0.2", "versions": {"0.1": {"digest": "04def871dad424adf0227232c8b22acab9938901a879dca070b58e2389039326"}, "0.2": {"digest": "8c8c704906bc05d7b9e40f9d99e3d85d5084fd462d99dea74b0687ab1268eb97"}}}, "crowdsecurity/fortinet-cve-2018-13379": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/fortinet-cve-2018-13379\ndescription: \"Detect cve-2018-13379 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    Upper(evt.Meta.http_path) contains Upper('/remote/fgt_lang?lang=/../../../..//////////dev/cmdb/sslvpn_websession')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2018-13379\n  behavior: \"http:exploit\"\n  label: \"CVE-2018-13379\"\n  remediation: true\n  service: fortinet\n", "description": "Detect cve-2018-13379 exploitation attemps", "path": "scenarios/crowdsecurity/fortinet-cve-2018-13379.yaml", "version": "0.3", "versions": {"0.1": {"digest": "c966840446a481f46237df14963224a106cd15e8b7c72dc903de1ae098dbb58d"}, "0.2": {"digest": "a7952444f7fc5d039bc415c5e56baa8243badd1bcc4013e8d8e52bc6c2e1a431"}, "0.3": {"digest": "719602d5447335d3a176aebfd60b8246a7e166656e278f5b10f557cf3b5a218d"}}}, "crowdsecurity/fortinet-vpn-bruteforce": {"content": "type: leaky\nname: crowdsecurity/fortinet-vpn-bruteforce\ndescription: \"Detect fortinet VPN bruteforce\"\ndebug: false\nfilter: \"evt.Meta.service == 'fortinet' && evt.Meta.sub_type == 'vpn' && evt.Meta.action == 'ssl-login-fail' && evt.Meta.tunnel_type == 'ssl-web'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 2m\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Fortinet VPN Bruteforce\"\n  service: fortinet\n  remediation: true\n", "description": "Detect fortinet VPN bruteforce", "path": "scenarios/crowdsecurity/fortinet-vpn-bruteforce.yaml", "version": "0.1", "versions": {"0.1": {"digest": "e31525a3301785fd8591c77482d4fabe1207f382eb94a1775645361286241cc0"}}}, "crowdsecurity/freeswitch-acl-reject": {"content": "type: leaky\nname: crowdsecurity/freeswitch-acl-reject\ndescription: \"Detect freeswitch acl rejects\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'acl_reject'\"\nleakspeed: \"10s\"\ncapacity: 15\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"CVE-2018-13379\"\n  remediation: true\n  service: freeswitch\n", "description": "Detect freeswitch acl rejects", "path": "scenarios/crowdsecurity/freeswitch-acl-reject.yaml", "version": "0.2", "versions": {"0.1": {"digest": "947017331043b3e4c7a600d2bc7e9b40262ffdcd290389ef9cd0b0877a1fe4a7"}, "0.2": {"digest": "d8cb04c939b4e6e3eb315cd90535b5adec9368dada292602feb184f57a2db20d"}}}, "crowdsecurity/freeswitch-bf": {"content": "type: leaky\nname: crowdsecurity/freeswitch-bf\ndescription: \"Detect freeswitch auth bruteforce\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'auth_failure'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: freeswitch\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  label: \"Freeswitch Bruteforce\"\n  remediation: true\n\n---\ntype: leaky\nname: crowdsecurity/freeswitch-slow-bf\ndescription: \"Detect freeswitch auth bruteforce\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'auth_failure'\"\nleakspeed: \"1m\"\ncapacity: 20\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: freeswitch\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  label: \"Freeswitch Bruteforce\"\n  remediation: true\n", "description": "Detect freeswitch auth bruteforce", "path": "scenarios/crowdsecurity/freeswitch-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "de4be679bd6d04d4b06bcd45ce6dad21689f9ffb92c9ddc66a9f3fa50add8300"}, "0.2": {"digest": "ba040ff32f6d9c6a340276ff6dfa4e8d60f1f9a8e861368e3500d23197c06115"}, "0.3": {"digest": "adfa04c9a278a4609002a5e1be19f77b7f98f60e5b6a5d5a5d47d4af6201e9fc"}}}, "crowdsecurity/freeswitch-user-enumeration": {"content": "type: leaky\nname: crowdsecurity/freeswitch-user-enumeration\ndescription: \"Detect freeswitch user enumeration\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'user_enumeration'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: freeswitch\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  behavior: \"generic:bruteforce\"\n  label: \"Freeswitch User Enumeration\"\n  remediation: true\n---\ntype: leaky\nname: crowdsecurity/freeswitch-user-enumeration\ndescription: \"Detect freeswitch user enumeration\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'user_enumeration'\"\nleakspeed: \"1m\"\ncapacity: 20\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: freeswitch\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  behavior: \"generic:bruteforce\"\n  label: \"Freeswitch User Enumeration\"\n  remediation: true\n", "description": "Detect freeswitch user enumeration", "path": "scenarios/crowdsecurity/freeswitch-user-enumeration.yaml", "version": "0.4", "versions": {"0.1": {"digest": "826b44367faa41e39a224ffdae5c4e9824d7f1e157dd67d24e97e785c7478922"}, "0.2": {"digest": "05d37cdecfac483f944e249b358d24f3c7e75292a1b4465d71d3994004e1548d"}, "0.3": {"digest": "435670ee2f37b2f2d4918e282566c2cd97b6c79e94d488f8052ee351fdd14176"}, "0.4": {"digest": "ff39e7af21a00ad4b66512a3a2364e2f6578c6f95e770e41edf54dc21c336bc7"}}}, "crowdsecurity/grafana-cve-2021-43798": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/grafana-cve-2021-43798\ndescription: \"Detect cve-2021-43798 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    (Upper(evt.Meta.http_path) matches '/PUBLIC/PLUGINS/[^/]+/../[./]+/'\n    or\n    Upper(evt.Meta.http_path) matches '/PUBLIC/PLUGINS/[^/]+/%2E%2E/[%2E/]+/')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: grafana\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2021-43798\n  behavior: \"http:exploit\"\n  label: \"CVE-2021-43798\"\n  remediation: true\n", "description": "Detect cve-2021-43798 exploitation attemps", "path": "scenarios/crowdsecurity/grafana-cve-2021-43798.yaml", "version": "0.2", "versions": {"0.1": {"digest": "38e2367afa09fce19313601b205c7ef60ff0dcda0d5a5fbfe162d391998727cf"}, "0.2": {"digest": "6fbaa53ca18c5826185024bce25c34e850508bf5bde27b90343938766b3a19e1"}}}, "crowdsecurity/home-assistant-bf": {"content": "# home-assistant bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/home-assistant-bf\ndescription: \"Detect Home Assistant bruteforce\"\nfilter: evt.Meta.log_type == 'home-assistant_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"iot:bruteforce\"\n  label: \"Home Assistant Bruteforce\"\n  service: home-assistant\n  remediation: true\n", "description": "Detect Home Assistant bruteforce", "path": "scenarios/crowdsecurity/home-assistant-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "7e155354a1558caba3896dc0af3ad311db2e4df90ea20d7809c288fd080b0356"}, "0.2": {"digest": "fb78b93bb62bf525357967eb64cfbca6ca315cec23288bc4e7e2272a82381770"}, "0.3": {"digest": "c0062c2ba368d81ed47dcc7fc8ac1b895363f69c4d8489ff40f284ce8d24c0ce"}, "0.4": {"digest": "bb026beac65c1abe6a18722d69112c93f1ff68cd0b4816cc357c07166d0e07aa"}}}, "crowdsecurity/http-admin-interface-probing": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/http-admin-interface-probing\ndescription: \"Detect generic HTTP admin interface probing\"\nfilter: |\n  evt.Meta.service == 'http' and \n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] and \n  evt.Meta.http_status in ['404', '403'] and\n  any(File(\"admin_interfaces.txt\"), { Lower(evt.Meta.http_path) contains #})\ngroupby: evt.Meta.source_ip\ndistinct: \"evt.Meta.http_path\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/admin_interfaces.txt\n    dest_file: admin_interfaces.txt\n    type: string\ncapacity: 4\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP Admin Interface Probing\"\n  service: http\n  remediation: true\n", "description": "Detect generic HTTP admin interface probing", "path": "scenarios/crowdsecurity/http-admin-interface-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "da30d0a724e7874293e38af9fd0c14b19c1d2c6334c5e480a2de9933c2d6f2d2"}, "0.2": {"digest": "2844d6e92ee410808eac6d5ad546026423bf404a334a1ef9966f763fccff8a07"}, "0.3": {"digest": "abcef6c7b98afd73df9ca94a8e8461af5e74f074a6bb46f978109750de64ab55"}, "0.4": {"digest": "63f3fd06df3aaa0d1b6c6fec359e029d332ddf59b380c61d4e733750df1744b1"}}}, "crowdsecurity/http-apiscp-bf": {"content": "type: leaky\nname: crowdsecurity/http-apiscp-bf\ndescription: \"detect apisCP dashboard bruteforce\"\ndebug: false\n# success auth on apisCP returns 303\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Meta.http_path startsWith '/apps/login' && evt.Parsed.verb == 'POST' && evt.Meta.http_status == '200'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 10s\nblackhole: 5m\nlabels:\n  service: apisCP\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"apisCP bruteforce\"\n  remediation: true\n", "description": "detect apisCP dashboard bruteforce", "path": "scenarios/crowdsecurity/http-apiscp-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "c0dec456fded0c14c7c48a918eb30e1ab35892581adb9263572cfa49fddc908e"}, "0.2": {"digest": "f6f5ed461e46ff730a57ae5bc2ee9187cdca20d0d5e13114fed8e381e384528b"}, "0.3": {"digest": "302d872cdb0695b8471e681e9da268e77d6fd0a63dc521929ed103924f37dafe"}}}, "crowdsecurity/http-backdoors-attempts": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/http-backdoors-attempts\ndescription: \"Detect attempt to common backdoors\"\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and any(File(\"backdoors.txt\"), { evt.Parsed.file_name == #})'\ngroupby: \"evt.Meta.source_ip\"\ndistinct: evt.Parsed.file_name\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/backdoors.txt\n    dest_file: backdoors.txt\n    type: string\ncapacity: 1\nleakspeed: 5s\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:exploit\"\n  label: \"Scanning for backdoors\"\n  service: http\n  remediation: true\n", "description": "Detect attempt to common backdoors", "path": "scenarios/crowdsecurity/http-backdoors-attempts.yaml", "version": "0.6", "versions": {"0.1": {"digest": "2eaba549ef284a36349482aa803b201fa8dcbff0f4d1ab2c5127d6b29806bba1"}, "0.2": {"digest": "388ec8c8f0679601bafa27fdf57fd414312bb2110bff56ef583bb505a1866d8b"}, "0.3": {"digest": "9eab7252dba254defcc9f90f38874df9f4f323d75aca0c831b9c9567edf9c00f"}, "0.4": {"digest": "45241f8074b19ce99d11fc082af5600f6c1833d748659361057947ebbac1a876"}, "0.5": {"digest": "c87e7add0110e5fb10e62db721ce931f57f5091f9f4fc885e0df8c36234ee53a"}, "0.6": {"digest": "dd5d8c02fff1fd939471358c61c9861387992f3062208a583839564bf644453b"}}}, "crowdsecurity/http-bad-user-agent": {"content": "type: leaky\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-bad-user-agent\ndescription: \"Detect usage of bad User Agent\"\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] && RegexpInFile(evt.Parsed.http_user_agent, \"bad_user_agents.regex.txt\")'\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/bad_user_agents.regex.txt\n    dest_file: bad_user_agents.regex.txt\n    type: regexp\n    strategy: LRU\n    size: 40\n    ttl: 10s\ncapacity: 1\nleakspeed: 1m\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"Bad User Agent\"\n  service: http\n  remediation: true\n", "description": "Detect usage of bad User Agent", "path": "scenarios/crowdsecurity/http-bad-user-agent.yaml", "version": "1.2", "versions": {"0.1": {"digest": "46e7058419bc3086f2919fb9afad6b2e85f0d4764f74153dd336ed491f99fa08"}, "0.2": {"digest": "524e2465c1bd817b4d54b37ccb4d2457eec1dad789e21690f51e43469545f426"}, "0.3": {"digest": "d3cae6c40fadd16693e449b4eb7a030586c8f1a9d9dd33c97001c9dc717c68f2"}, "0.4": {"digest": "8dd16e9de043f47f026d2e3c1b53ad4bbc6dd8f8aac3adaf26a7f4bd2bb6e6fd"}, "0.5": {"digest": "93af1e0f77f0ccc62fdb3bd783a777b091a55e21413fc9cb05ba141608f8942b"}, "0.6": {"digest": "df3408e39840a2f7d11977d555985f93bc49e4b23a7e84e0e63ebe040c1e512d"}, "0.7": {"digest": "51360ad64c9672e5d3ba9c1786e6fc380c8752871a977a5dddac0d08551aa66a"}, "0.8": {"digest": "38bc505811135db4788cb7a70199f43a7276f7828b86676fb8b4fc6da62a0adc"}, "0.9": {"digest": "6142a2394aaa38810c6d5c7258f8011bc4b39f7e2bf4cb6b6d557475bb377328"}, "1.0": {"digest": "9ad6df04b0516207b0d9df602047fcff02a24028352883be33abde7a603501e4"}, "1.1": {"digest": "c1b96206d623b9ce9a143b19f4245d3ebb4d971528ce4a09da8a415ab2d7b9b7"}, "1.2": {"digest": "7ca405d1147762b1f488bc0f13575c5af8081499c8a5c2971d706e8b03493671"}}}, "crowdsecurity/http-bf-wordpress_bf": {"content": "type: leaky\nname: crowdsecurity/http-bf-wordpress_bf\ndescription: \"Detect WordPress bruteforce on admin interface\"\ndebug: false\n# failed auth on wp-login.php returns 200\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.file_name == 'wp-login.php' && evt.Parsed.verb == 'POST' && evt.Meta.http_status == '200'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 10s\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"WordPress Bruteforce\"\n  service: wordpress\n  remediation: true\n", "description": "Detect WordPress bruteforce on admin interface", "path": "scenarios/crowdsecurity/http-bf-wordpress_bf.yaml", "version": "0.7", "versions": {"0.1": {"digest": "628d9988c1f2448f4ffa5a72fe8aec6e1c1eedd8c838447630cce653bf31cbd9"}, "0.2": {"digest": "f4074942f2454ffeae226219e0807c63262413986a5b07fc939f4b0835e7bef2"}, "0.3": {"digest": "b313b926ef3c42c125526c707a761efd02d14f1f6ce577ef602709228427f482"}, "0.4": {"digest": "09f9a5e176da2971ddbdd07522fb64948500f867d78fc77167bcd494bce079a8"}, "0.5": {"digest": "9baa872c3b85a560952e57a77fd6fc49a5257a45c4296f89577ea6c490c0265f"}, "0.6": {"digest": "bf093ace6f82eadcd268a9aa4a8452a5fba699ef5397e0af3d3f1475634aa924"}, "0.7": {"digest": "dbdfb59bf06128765d7370d81b1e1153dab6900b5627cec35aaa67b6ebca7073"}}}, "crowdsecurity/http-bf-wordpress_bf_xmlrpc": {"content": "type: leaky\nname: crowdsecurity/http-bf-wordpress_bf_xmlrpc\ndescription: \"Detect WordPress bruteforce on XML-RPC endpoint\"\ndebug: false\n# XMLRPC always returns 200\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.file_name == 'xmlrpc.php' && evt.Parsed.verb == 'POST'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 2m\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"WP XMLRPC bruteforce\"\n  service: wordpress\n  remediation: true\n", "description": "Detect WordPress bruteforce on XML-RPC endpoint", "path": "scenarios/crowdsecurity/http-bf-wordpress_bf_xmlrpc.yaml", "version": "0.3", "versions": {"0.1": {"digest": "d4a3456d8fc2edb27b895967f79053f649b943f043763369d437d5c55591c402"}, "0.2": {"digest": "c3da65b418bd36dc8e26aaf7c620f7629c60a65b34115525b9c93e6312d261b2"}, "0.3": {"digest": "4a7ba422a97b70dead7259ff98f733ae25d8130baed6c66835cef351bfd8fc7a"}}}, "crowdsecurity/http-crawl-non_statics": {"content": "type: leaky\nname: crowdsecurity/http-crawl-non_statics\ndescription: \"Detect aggressive crawl on non static resources\"\nfilter: \"evt.Meta.log_type in ['http_access-log', 'http_error-log'] && evt.Parsed.static_ressource == 'false' && evt.Parsed.verb in ['GET', 'HEAD']\"\ndistinct: \"evt.Parsed.file_name\"\nleakspeed: 0.5s\ncapacity: 40\n#debug: true\n#this limits the memory cache (and event_sequences in output) to five events\ncache_size: 5\ngroupby: \"evt.Meta.source_ip + '/' + evt.Parsed.target_fqdn\"\nblackhole: 1m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:crawl\"\n  service: http\n  label: \"Aggressive Crawl\"\n  remediation: true\n", "description": "Detect aggressive crawl on non static resources", "path": "scenarios/crowdsecurity/http-crawl-non_statics.yaml", "version": "0.7", "versions": {"0.1": {"digest": "86265749b84641e86e7e8ea3c1df53a1cabd1e0e04b6f93853db5d0687913cc7"}, "0.2": {"digest": "41fb957dfc8e2bb4ae76f2a64a5a25e169e5a0e7e53f42c432e84bec933657ca"}, "0.3": {"digest": "f0fa40870cdeea7b0da40b9f132e9c6de5e32d584334ec8a2d355faa35cde01c"}, "0.4": {"digest": "cd8f8a7a450855ad656b10758589c0d6fa38317ce001f3ae82dc29f0561f7145"}, "0.5": {"digest": "b7aefdcaae7ec28d61167aacafcc462b88b95317ca980976c435b9e5fde97fb0"}, "0.6": {"digest": "d37d938cc9d8f135c34c37126020ae8cf0f15ec15aee3e420ef4c74b4198a842"}, "0.7": {"digest": "9f235ae2116031a2b7a64da1e3ff5356b5f4fb91078de1c78bc30e0edb734dfb"}}}, "crowdsecurity/http-cve-2021-41773": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-cve-2021-41773\ndescription: \"cve-2021-41773\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    (Upper(evt.Meta.http_path) contains \"/.%2E/.%2E/\"\n      or\n     Upper(evt.Meta.http_path) contains \"/%2E%2E/%2E%2E\")\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2021-41773\n  behavior: \"http:exploit\"\n  label: \"CVE-2021-41773\"\n  service: apache\n  remediation: true\n", "description": "cve-2021-41773", "path": "scenarios/crowdsecurity/http-cve-2021-41773.yaml", "version": "0.2", "versions": {"0.1": {"digest": "297eff27011c942a75937838e09c60c80f9dfdbfcb18b358b666777b4d1e89aa"}, "0.2": {"digest": "3cd742ad69889bee2644daf08c4eef1c14359fdf67e3642542d157e0c1bc0382"}}}, "crowdsecurity/http-cve-2021-42013": {"content": "type: trigger\nformat: 2.0\n#debug: true\n#this is getting funny, it's the third patch on top of cve-2021-41773\nname: crowdsecurity/http-cve-2021-42013\ndescription: \"cve-2021-42013\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    Upper(evt.Meta.http_path) contains \"/%%32%65%%32%65/\"\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: apache\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2021-42013\n  behavior: \"http:exploit\"\n  label: \"CVE-2021-42013\"\n  remediation: true\n", "description": "cve-2021-42013", "path": "scenarios/crowdsecurity/http-cve-2021-42013.yaml", "version": "0.2", "versions": {"0.1": {"digest": "5f7e21b44bc4284dde1cde1610109a06a0c986777f48c2f00e08db9e2f156459"}, "0.2": {"digest": "0ed92efba1d5146795df08340c91535aee56e9a0e2d650c2496f46ecb977314f"}}}, "crowdsecurity/http-cve-probing": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/http-cve-probing\ndescription: \"Detect generic HTTP cve probing\"\nfilter: |\n  evt.Meta.service == 'http' and \n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] and \n  evt.Meta.http_status in ['404', '403'] and\n  any(File(\"trendy_cves.txt\"), { Lower(evt.Meta.http_path) contains #})\ngroupby: evt.Meta.source_ip\ndistinct: \"evt.Meta.http_path\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/trendy_cves.txt\n    dest_file: trendy_cves.txt\n    type: string\ncapacity: 1\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP CVE Probing\"\n  service: http\n  remediation: true\n", "description": "Detect generic HTTP cve probing", "path": "scenarios/crowdsecurity/http-cve-probing.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f15efbad1d2d84d4c4f65e00a8729b57c98ac7a9f88a80e102bb15eba13171a8"}, "0.2": {"digest": "b3c888c3c0d039f0732b4545fa7b50009af12a7d2ff514c4aed8650d246feb81"}}}, "crowdsecurity/http-dos-bypass-cache": {"content": "type: leaky\nname: crowdsecurity/http-dos-bypass-cache\ndescription: \"Detect DoS tools bypassing cache every request\"\n#as seen in cc-attack tool\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Meta.http_args_len != '' && int(evt.Meta.http_args_len) >= 7 && int(evt.Meta.http_args_len) <= 12 && evt.Parsed.http_args matches '^[0-9]+$' && evt.Parsed.static_ressource == 'false'\"\ndistinct: \"evt.Parsed.http_args\"\nleakspeed: 1s\ncapacity: 30\n#debug: true\ncache_size: 10\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 1m\nlabels:\n  service: http\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"HTTP DOS with cache bypass\"\n", "description": "Detect DoS tools bypassing cache every request", "path": "scenarios/crowdsecurity/http-dos-bypass-cache.yaml", "version": "0.5", "versions": {"0.1": {"digest": "0e58abde23b14beae6be2ca1b2bfe58ad980f75c5691b8c0cacf1b2fff4d23bd"}, "0.2": {"digest": "05d3d10236ceb9b23f3f9355970f9b25583c891e0d0d3cf210dc289240b48f25"}, "0.3": {"digest": "de4c4f23847193f3ee277ed1836b774773517a4fc41e64a91d2af40dcc611ac2"}, "0.4": {"digest": "beffaa2a1921fa3ab29122b0bf55a4b648b814771e9e6c5779736fd5f677375d"}, "0.5": {"digest": "fa8e2326d2d4f3b82d69a04c88a741b7f44dff7756ed2133ee4bfeb0db5d48a5"}}}, "crowdsecurity/http-dos-invalid-http-versions": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-dos-invalid-http-versions\ndescription: \"Detect DoS tools using invalid HTTP versions\"\n#pattern seen in mhddos tool\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] && evt.Parsed.http_version != \"\" && evt.Parsed.http_version not in [\"0.9\", \"1.0\", \"1.1\", \"2.0\", \"3.0\"]' \ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: http\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"HTTP DOS with invalid HTTP version\"\n", "description": "Detect DoS tools using invalid HTTP versions", "path": "scenarios/crowdsecurity/http-dos-invalid-http-versions.yaml", "version": "0.7", "versions": {"0.1": {"digest": "4508b6364d19557247a86c08b6bd8c262295a661c01c183313c38aaeea08fd00"}, "0.2": {"digest": "7a0fe2257c1e04db49ac1f9c1a882553caa7b787168f574cc28a116e52974b14"}, "0.3": {"digest": "6ad1c79bf0ca97716b1176a9070a9eaf9e8356d0b5e3c1d7b4652cfa8acf8297"}, "0.4": {"digest": "2cb7ced10c6122aee759e1c0abec546c23a339337abae98292a9bd4752113887"}, "0.5": {"digest": "1224a0e02b5994241cba7b299e481dd8a74529826b0c561118aa0d7591bc8a07"}, "0.6": {"digest": "350ef964a77043809471f12b1a075f098d6879607f424c507185a9b5817e18e6"}, "0.7": {"digest": "71d9e3b461ae291274f594040a9d2c5abc414f86c9967ec4c7908224355969f8"}}}, "crowdsecurity/http-dos-random-uri": {"content": "type: leaky\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-dos-random-uri\ndescription: \"Detect DoS tools using random uri\"\n#pattern seen in loic tool\nfilter: |\n  evt.Meta.log_type == \"http_access-log\" &&\n  evt.Meta.http_verb == 'GET' &&\n  evt.Parsed.static_ressource == 'false' &&\n  Upper(evt.Parsed.file_frag) == evt.Parsed.file_frag &&\n  len(evt.Parsed.file_frag) == 6 &&\n  int(evt.Meta.http_args_len) == 0\ncapacity: 30\nleakspeed: 1s\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"HTTP DOS via random URI\"\n  service: http\n  remediation: true\n", "description": "Detect DoS tools using random uri", "path": "scenarios/crowdsecurity/http-dos-random-uri.yaml", "version": "0.4", "versions": {"0.1": {"digest": "0fed8a75f88fd41f17498166bc1a60ec9e981ce1b82f0cd840ef52ae4fc71d39"}, "0.2": {"digest": "f1ed5aefe6fce34ce3253e85b342c3849620e7582e21ea03596121d540e2265b"}, "0.3": {"digest": "3dbd11fd32c3694ed82b4afe5509d5a4563853b864b0927385c8be6c200ac955"}, "0.4": {"digest": "5a07d325493252c48cac23f7b806d1a64eebdc2e34c111b7015ac45bae7e89fd"}}}, "crowdsecurity/http-dos-switching-ua": {"content": "type: leaky\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-dos-swithcing-ua\ndescription: \"Detect DoS tools switching user-agent too fast\"\n#pattern seen in mhddos tool\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"]'\ncapacity: 10\ndistinct: evt.Parsed.http_user_agent\nleakspeed: 8s\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: http\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"HTTP DOS with varying UA\"", "description": "Detect DoS tools switching user-agent too fast", "path": "scenarios/crowdsecurity/http-dos-switching-ua.yaml", "version": "0.5", "versions": {"0.1": {"digest": "3e0821e088a069ff12b26bfd106c913405b8cda87755438b535bbb803da6d5a1"}, "0.2": {"digest": "54b1bc5cade329a7b8dd8a4447258b8c0029732759dae3e2632e0f96abc04b36"}, "0.3": {"digest": "f40b2ff1b0a7351994ec48af5f5c31d66e4e475632e34e3e7c9218fb88b67cb6"}, "0.4": {"digest": "ce7739941426d9acc3c9d59a6bbf584202c680ce8e09204578a1914136b60fff"}, "0.5": {"digest": "84a9eb62f0cc1231999dba03a3832b7b828b514736e2a3d1dac5ac0b81c6aa7b"}}}, "crowdsecurity/http-generic-bf": {"content": "# 404 scan\ntype: leaky\n#debug: true\nname: crowdsecurity/http-generic-bf\ndescription: \"Detect generic http brute force\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.sub_type == 'auth_fail'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"HTTP Bruteforce\"\n  service: http\n  remediation: true\n---\n# Generic 401 Authorization Errors\ntype: leaky\n#debug: true\nname: LePresidente/http-generic-401-bf\ndescription: \"Detect generic 401 Authorization error brute force\"\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.verb == 'POST' && evt.Meta.http_status == '401'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"HTTP Bruteforce\"\n  service: http\n  remediation: true\n---\n# Generic 403 Forbidden (Authorization) Errors\ntype: leaky\n#debug: true\nname: LePresidente/http-generic-403-bf\ndescription: \"Detect generic 403 Forbidden (Authorization) error brute force\"\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.verb == 'POST' && evt.Meta.http_status == '403'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"HTTP Bruteforce\"\n  service: http\n  remediation: true\n", "description": "Detect generic http brute force", "path": "scenarios/crowdsecurity/http-generic-bf.yaml", "version": "0.6", "versions": {"0.1": {"digest": "aaaf0209fe77be79d8d61a50e73e5da6807e8f13eb7d9832e705553770f6d376"}, "0.2": {"digest": "ea9e2e43794d162a6bb6a560b940b7a2c73e55436de6555a96ac2edfadbe5d8d"}, "0.3": {"digest": "d43fbbc7da0a3427bcb170669b873035defedb470b79125e884e283901e57d2f"}, "0.4": {"digest": "be339072fbbe0691926e92678c48edd17141fc0f17ac14fd8b08f6a4e4f72748"}, "0.5": {"digest": "d03fa7fbb3179407f221bc4e11d177422d21e5adcdcf408edf5f8b0ef492741f"}, "0.6": {"digest": "2154028ae52c65753b6d7391cfb726041818fd0d443628598ac83f6e3732be53"}}}, "crowdsecurity/http-magento-bf": {"content": "type: leaky\nname: crowdsecurity/http-magento-bf\ndebug: false\ndescription: \"Detect bruteforce on Magento admin interface\"\nfilter: \"evt.Meta.log_type == 'ADMIN_LOGIN_FAILED'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 10s\nblackhole: 5m\nlabels:\n  service: magento\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Magento Bruteforce\"\n  remediation: true\n", "description": "Detect bruteforce on Magento admin interface", "path": "scenarios/crowdsecurity/http-magento-bf.yaml", "version": "0.5", "versions": {"0.1": {"digest": "a77e4cb9a813ac8bad557138f3b20abaa67d8210768fcb350fb3efcc58c1dfc1"}, "0.2": {"digest": "98091fa975da7753f9b52ae6e028f9fef0dc46cb93575533a5a04ba824cda8f0"}, "0.3": {"digest": "e70c86f1a22879247fb6085ca2e6949a3163f92fd33c803ce7f89f0586324a00"}, "0.4": {"digest": "54d2aacd11db557b3a49a99a320e8894050dc6fbc004f5a28207b6ddfb4afa0e"}, "0.5": {"digest": "b20922d5eb39f7a7f93a3e55721da80cd48e8a0a074d182ca62c459f78e6f171"}}}, "crowdsecurity/http-magento-ccs": {"content": "type: leaky\nname: crowdsecurity/http-magento-ccs\ndebug: false\ndescription: \"Detect credit card stuffing from a single IP\"\nfilter: \"evt.Meta.log_type == 'PAYMENT_FAILED'\"\ngroupby: evt.Meta.source_ip\ncapacity: 3\nleakspeed: 30s\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110.004\n  confidence: 2\n  spoofable: 0\n  service: magento\n  behavior: \"ecommerce:fraud\"\n  label: \"Magento Credit Card Stuffing\"\n", "description": "Detect credit card stuffing from a single IP", "path": "scenarios/crowdsecurity/http-magento-ccs.yaml", "version": "0.3", "versions": {"0.1": {"digest": "bf2bc42b888e36b62144129dd2d61e7b1aac6a4d1926c3ebbfe8453d15c3f6f3"}, "0.2": {"digest": "07dc5f21d5c4bcf6863c3ce57c4490a8a74c13d2c11ff32e73e419b768478468"}, "0.3": {"digest": "a390e04333ce744c7f3cb00ac3d7e72333c40f4f1407c87116244fc0a2a0ca86"}}}, "crowdsecurity/http-magento-ccs-by-as": {"content": "type: leaky\nname: crowdsecurity/http-magento-ccs-by-as\ndebug: false\ndescription: \"Detect distributed credit card stuffing from same AS\"\nfilter: \"evt.Meta.log_type == 'PAYMENT_FAILED' and evt.Meta.ASNNumber != '' \"\ngroupby: evt.Meta.ASNNumber\ndistinct: evt.Meta.source_ip\ncapacity: 10\nleakspeed: 30s\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110.004\n  confidence: 1\n  spoofable: 3\n  service: magento\n  behavior: \"ecommerce:fraud\"\n  label: \"Magento Credit Card Stuffing By AS\"\n", "description": "Detect distributed credit card stuffing from same AS", "path": "scenarios/crowdsecurity/http-magento-ccs-by-as.yaml", "version": "0.3", "versions": {"0.1": {"digest": "6e585961ae092036eb9a506c311d331c3cbd59eccdf642cae86b424c39ad730a"}, "0.2": {"digest": "f65c1ddfabf04040ce288ff53a5d63db45e0db5995d43c86bd868243e3d3c099"}, "0.3": {"digest": "e77332ad52bff93a640417fa59b9762979421828ac32484df886af68208dc335"}}}, "crowdsecurity/http-magento-ccs-by-country": {"content": "type: leaky\nname: crowdsecurity/http-magento-ccs-by-country\ndebug: false\ndescription: \"Detect distributed credit card stuffing from same country\"\nfilter: \"evt.Meta.log_type == 'PAYMENT_FAILED' and evt.Meta.IsoCode != '' \"\ngroupby: evt.Meta.IsoCode\ndistinct: evt.Meta.source_ip\ncapacity: 10\nleakspeed: 30s\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110.004\n  confidence: 1\n  spoofable: 3\n  service: magento\n  behavior: \"ecommerce:fraud\"\n  label: \"Magento Credit Card Stuffing By Country\"\n", "description": "Detect distributed credit card stuffing from same country", "path": "scenarios/crowdsecurity/http-magento-ccs-by-country.yaml", "version": "0.3", "versions": {"0.1": {"digest": "be8ae3f56024ef1be29104fa72a84e0178b2330f2e873b170cef782b1d3d6bc0"}, "0.2": {"digest": "fa29d5fb5f1f420753717485319e5c85fe39c977b5525ccc895a7b24f15a598c"}, "0.3": {"digest": "f4ff753638b54a01a2f455acc045e6229f62c6ce5d5751c8d1815b62f3161521"}}}, "crowdsecurity/http-open-proxy": {"content": "type: trigger\nname: crowdsecurity/http-open-proxy\ndescription: \"Detect scan for open proxy\"\n#apache returns 405, nginx 400\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Meta.http_status in ['400','405'] && (evt.Parsed.verb == 'CONNECT' || evt.Parsed.request matches '^http[s]?://')\"\nblackhole: 2m\ngroupby: evt.Meta.source_ip\nlabels:\n  service: http\n  type: scan\n  remediation: true\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP Open Proxy Probing\"\n  spoofable: 0\n  confidence: 3\n", "description": "Detect scan for open proxy", "path": "scenarios/crowdsecurity/http-open-proxy.yaml", "version": "0.5", "versions": {"0.1": {"digest": "994b9d17d915f47f4ee5f10b2d8b9b7c72b5c93e64f75f3dc1313bf3b5c2613f"}, "0.2": {"digest": "1c3b55ed813bbac8f8c0d9067d0ae3b7d6fe6b1d437d57ac4c3288c1f38b5ea2"}, "0.3": {"digest": "e6629c2cdb8f06a1f10561079d926ae42b8d90f680541bb30355714675f0412a"}, "0.4": {"digest": "5f808fac4a5cfe22723d2b588b23a72cb523796f689c9f53582ed41e0b7cbb45"}, "0.5": {"digest": "63b8b494f9d7be6134c7e19c0c7b0a95d35b87548ae0ccfbc5abb0a44034b5d7"}}}, "crowdsecurity/http-path-traversal-probing": {"content": "# path traversal probing\ntype: leaky\n#debug: true\nname: crowdsecurity/http-path-traversal-probing\ndescription: \"Detect path traversal attempt\"\nfilter: \"evt.Meta.log_type in ['http_access-log', 'http_error-log'] && any(File('http_path_traversal.txt'),{evt.Meta.http_path contains #})\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/path_traversal.txt\n    dest_file: http_path_traversal.txt\n    type: string\ngroupby: \"evt.Meta.source_ip\"\ndistinct: \"evt.Meta.http_path\"\ncapacity: 3\nreprocess: true\nleakspeed: 10s\nblackhole: 2m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.002\n  behavior: \"http:exploit\"\n  label: \"HTTP Path Traversal Exploit\"\n  service: http\n  spoofable: 0\n  confidence: 3\n", "description": "Detect path traversal attempt", "path": "scenarios/crowdsecurity/http-path-traversal-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "3f00b0aa00448549a0a9635fdd86d8135503078c7087c1f5e4af11d49e7c2ee1"}, "0.2": {"digest": "b02022230086b96c212913406376584cc431332bb5cd26078dffa44ff9454499"}, "0.3": {"digest": "ae515cb83575c4f1e82ed1011d3b2ea9f9c86077fa6f59f28aa5d235b481adbe"}, "0.4": {"digest": "9d1b1e29018434aff77cec852ce7d0444e37b893995bd9bf46e7595f53ac5e6a"}}}, "crowdsecurity/http-probing": {"content": "# 404 scan\ntype: leaky\n#debug: true\nname: crowdsecurity/http-probing\ndescription: \"Detect site scanning/probing from a single ip\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.http_status in ['404', '403', '400'] && evt.Parsed.static_ressource == 'false'\"\ngroupby: \"evt.Meta.source_ip + '/' + evt.Parsed.target_fqdn\"\ndistinct: \"evt.Meta.http_path\"\ncapacity: 10\nreprocess: true\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP Probing\"\n  spoofable: 0\n  service: http\n  confidence: 1\n", "description": "Detect site scanning/probing from a single ip", "path": "scenarios/crowdsecurity/http-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "580a3bcbb3756b8da7717c88708305791f39ef17c1e5c3041a1dd54b7293f57a"}, "0.2": {"digest": "c8bb45b4fb8834ea1dc5cff6439dd272c87d7ee5af4a51e77341ec6edc5d7a25"}, "0.3": {"digest": "983c356924b6e01f709b3c2d901ceb4e4ce1abe6e840048558f2824a4c4a6719"}, "0.4": {"digest": "4b16f896af400e006c28b1476bf5989c748186f2b3756ed9ad7d1559480d278c"}}}, "crowdsecurity/http-sensitive-files": {"content": "type: leaky\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-sensitive-files\ndescription: \"Detect attempt to access to sensitive files (.log, .db ..) or folders (.git)\"\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and any(File(\"sensitive_data.txt\"), { evt.Parsed.request endsWith #})'\ngroupby: \"evt.Meta.source_ip\"\ndistinct: evt.Parsed.request\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/sensitive_data.txt\n    dest_file: sensitive_data.txt\n    type: string\ncapacity: 4\nleakspeed: 5s\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.003\n  behavior: \"http:scan\"\n  label: \"Access to sensitive files over HTTP\"\n  spoofable: 0\n  service: http\n  confidence: 3\n", "description": "Detect attempt to access to sensitive files (.log, .db ..) or folders (.git)", "path": "scenarios/crowdsecurity/http-sensitive-files.yaml", "version": "0.4", "versions": {"0.1": {"digest": "9ed53c09709b6e9f11b52e204c8155e9a6b9db9de25686c6b1909a9c59740c5f"}, "0.2": {"digest": "3f20d74ee5b040db30743ed189537e8c43e04f8954bb5a02251a3495e7a2a555"}, "0.3": {"digest": "575087fce9fdb9351075bf563a6062fb3c5a9b35ab6844d0b2d4cc492f3497dd"}, "0.4": {"digest": "cb798582ed9a3bd090d47234bef4ca2169982c44e356e88f101ec6b6a8424676"}}}, "crowdsecurity/http-sqli-probing": {"content": "type: leaky\n#requires at least 2.0 because it's using the 'data' section and the 'Upper' expr helper\nformat: 2.0\nname: crowdsecurity/http-sqli-probbing-detection\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/sqli_probe_patterns.txt\n    dest_file: sqli_probe_patterns.txt\n    type: string\ndescription: \"A scenario that detects SQL injection probing with minimal false positives\"\nfilter: \"evt.Meta.log_type in ['http_access-log', 'http_error-log'] && any(File('sqli_probe_patterns.txt'), {Upper(evt.Parsed.http_args) contains Upper(#)})\"\ngroupby: evt.Meta.source_ip\ncapacity: 10\nleakspeed: 1s\nblackhole: 5m\n#low false positives approach : we require distinct payloads to avoid false positives\ndistinct: evt.Parsed.http_args\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.002\n  behavior: \"http:exploit\"\n  label: \"SQL Injection Attempt\"\n  spoofable: 0\n  service: http\n  confidence: 3\n", "description": "A scenario that detects SQL injection probing with minimal false positives", "path": "scenarios/crowdsecurity/http-sqli-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "f3388a2016f9a7fc48a31a357b21c8e65093b8031fc7b120ee2f020de16be246"}, "0.2": {"digest": "87683f8a569090e52fbcc6ca2ffe139658950d6a05f9d611fd13e90ab875cdb1"}, "0.3": {"digest": "5d3674a78d0dfb87d8f086f72830c61954575599883244cf23d5876954e9600c"}, "0.4": {"digest": "3dd093d823feba47a79142da4e43aab0a1249acf749c15a419f4e25f8d5bc0a2"}}}, "crowdsecurity/http-wordpress-scan": {"content": "type: leaky\nname: crowdsecurity/http-wordpress-scan\ndescription: \"Detect WordPress scan: vuln hunting\"\nfilter: |\n  evt.Meta.service == 'http' and \n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] and \n  evt.Meta.http_status in ['404', '403'] and\n  Lower(evt.Meta.http_path) contains \"/wp-\" and\n  Lower(evt.Meta.http_path) endsWith \".php\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.http_path\ncapacity: 3\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"WordPress Vuln Hunting\"\n  spoofable: 0\n  service: wordpress\n  confidence: 3\n", "description": "Detect WordPress scan: vuln hunting", "path": "scenarios/crowdsecurity/http-wordpress-scan.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f73967711f383b190419ea877b9d45a7583591b70e81df5d0a84540a1f4367eb"}, "0.2": {"digest": "ee042ac369de1856142e19b4cdd05741644115191acbc8d54b99eb704b9aff97"}}}, "crowdsecurity/http-wordpress_user-enum": {"content": "type: leaky\nname: crowdsecurity/http-wordpress_user-enum\ndescription: \"Detect WordPress probing: authors enumeration\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'http_access-log' && Upper(evt.Parsed.http_args) contains 'AUTHOR='\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.http_args\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1589\n    - attack.T1110\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"WordPress User Enumeration\"\n  spoofable: 0\n  service: wordpress\n  confidence: 3\n", "description": "Detect WordPress probing: authors enumeration", "path": "scenarios/crowdsecurity/http-wordpress_user-enum.yaml", "version": "0.3", "versions": {"0.1": {"digest": "b3d23b71ecb4434773e907675a1c117a97acaeeb18a9d57062bded417f18b646"}, "0.2": {"digest": "681c3829aefbbd4bf347ea85d62b4445012b276368d729114aa27bc380c801ab"}, "0.3": {"digest": "5ff256c204b5103c73b2d1b866884662531723767ec027e0d8305298fcbb1344"}}}, "crowdsecurity/http-wordpress_wpconfig": {"content": "type: leaky\nname: crowdsecurity/http-wordpress_wpconfig\ndescription: \"Detect WordPress probing: variations around wp-config.php by wpscan\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.file_name contains 'wp-config.php'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.file_name\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"Access to WordPress wp-config.php\"\n  spoofable: 0\n  confidence: 3\n  service: wordpress\n", "description": "Detect WordPress probing: variations around wp-config.php by wpscan", "path": "scenarios/crowdsecurity/http-wordpress_wpconfig.yaml", "version": "0.3", "versions": {"0.1": {"digest": "ff3876c1f9828052ba633264920100aa49402ab3e41a9cb73d28853d248a6d98"}, "0.2": {"digest": "0d45562d1540796a109c8e986f2d0c79ce312f0d7547134ac449cf24c5934cb5"}, "0.3": {"digest": "d9544672ddf4808450ce95dfbd9f5e9bd470c08d14c3571a4e38ab5135a5bec9"}}}, "crowdsecurity/http-xss-probing": {"content": "type: leaky\n#requires at least 2.0 because it's using the 'data' section and the 'Upper' expr helper\nformat: 2.0\nname: crowdsecurity/http-xss-probbing\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/xss_probe_patterns.txt\n    dest_file: xss_probe_patterns.txt\n    type: string\ndescription: \"A scenario that detects XSS probing with minimal false positives\"\nfilter: \"evt.Meta.log_type in ['http_access-log', 'http_error-log'] && any(File('xss_probe_patterns.txt'), {Upper(evt.Parsed.http_args) contains Upper(#)})\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 1s\nblackhole: 5m\n#low false positives approach : we require distinct payloads to avoid false positives\ndistinct: evt.Parsed.http_args\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.002\n  behavior: \"http:exploit\"\n  label: \"XSS Attempt\"\n  spoofable: 0\n  service: http\n  confidence: 3\n", "description": "A scenario that detects XSS probing with minimal false positives", "path": "scenarios/crowdsecurity/http-xss-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "8d6f0d6f9dc48f8f5ad561a2cdb315e499539b3575f259e0d6cf5850ef1efc9e"}, "0.2": {"digest": "1c4d58e1a29cf806a92f67c981532f8a4656312abd05697dcc69b59b757f0076"}, "0.3": {"digest": "c16d275e5e3bedd452be87f48aa52c6e8250211e8c205e96d653c8cc9032c44f"}, "0.4": {"digest": "bc9a433be5dd82c03b92f7de826bd1bbc40649807ce1e2143607f924fcbb2d8e"}}}, "crowdsecurity/impossible-travel": {"content": "## Generic bucket to handle impossible travel for authentication\ntype: conditional\nname: crowdsecurity/impossible-travel\ndescription: \"Detect Impossible Travel\"\nfilter: \"evt.Meta.log_type == 'auth_success' && evt.Meta.user not in ['', nil]\"\ngroupby: \"evt.Meta.service + evt.Meta.user\"\n# To make it generic we concatenate the service name and the user\ncapacity: -1\ncondition: |\n    len(queue.Queue) >= 2 \n    and Distance(queue.Queue[-1].Enriched.Latitude, queue.Queue[-1].Enriched.Longitude,\n    queue.Queue[-2].Enriched.Latitude, queue.Queue[-2].Enriched.Longitude) > 1000\nleakspeed: 3h\nlabels:\n  remediation: false\n  classification:\n    - attack.T1078\n  behavior: \"auth:successful\"\n  label: \"Impossible travel\"\n  spoofable: 0\n  service: authentication\n  confidence: 3", "description": "Detect Impossible Travel", "path": "scenarios/crowdsecurity/impossible-travel.yaml", "version": "0.2", "versions": {"0.1": {"digest": "9f25e866bd1bd232b68e9533cf60d85cd852bac91ec325978e3e9ebd81b4c3f7"}, "0.2": {"digest": "e7dc7372fd0b5c47df7712228ee252b3c97968cd2448c4b136f160a998393b18"}}}, "crowdsecurity/impossible-travel-user": {"content": "## Generic bucket to handle impossible travel for authentication with username scope\ntype: conditional\nname: crowdsecurity/impossible-travel-user\ndescription: \"impossible travel user\"\nfilter: \"evt.Meta.log_type == 'auth_success' && evt.Meta.user not in ['', nil]\"\ngroupby: \"evt.Meta.service + evt.Meta.user\"\n# To make it generic we concatenate the service name and the user\ncapacity: -1\ncondition: |\n    len(queue.Queue) >= 2 \n    and Distance(queue.Queue[-1].Enriched.Latitude, queue.Queue[-1].Enriched.Longitude,\n    queue.Queue[-2].Enriched.Latitude, queue.Queue[-2].Enriched.Longitude) > 1000\nleakspeed: 3h\nscope:\n    type: username\n    expression: evt.Meta.user\nlabels:\n  remediation: false\n  classification:\n    - attack.T1078\n  behavior: \"auth:successful\"\n  label: \"Impossible travel\"\n  spoofable: 0\n  service: authentication\n  confidence: 3", "description": "impossible travel user", "path": "scenarios/crowdsecurity/impossible-travel-user.yaml", "version": "0.1", "versions": {"0.1": {"digest": "806f37a192e70eec9b8c6437fe39047651c47f35d16df59cf687dedb8133778c"}}}, "crowdsecurity/iptables-scan-multi_ports": {"content": "type: leaky\nname: crowdsecurity/iptables-scan-multi_ports\ndescription: \"Detect aggressive portscans\"\nfilter: \"evt.Meta.log_type == 'iptables_drop' && evt.Meta.service == 'tcp'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.dst_port\ncapacity: 15\nleakspeed: 5s\nblackhole: 1m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.001\n    - attack.T1018\n    - attack.T1046\n  behavior: \"tcp:scan\"\n  label: \"TCP Port Scan\"\n  spoofable: 3\n  confidence: 1\n", "description": "Detect aggressive portscans", "path": "scenarios/crowdsecurity/iptables-scan-multi_ports.yaml", "version": "0.3", "versions": {"0.1": {"digest": "85bd908ec6efae802035e4553f5dd41e4d5b6b53b2f237dd256533965bd44cd7"}, "0.2": {"digest": "af7ec1e0af8a778d80f6de3c8d28c15fdce53882e7cd5c8e3291e397b6ac4985"}, "0.3": {"digest": "81fc1dfd47c1b2ee6874af937e6755fbe80930cf4733b8fa2cb5c5cb031ba3b6"}}}, "crowdsecurity/jira_cve-2021-26086": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/jira_cve-2021-26086\ndescription: \"Detect Atlassian Jira CVE-2021-26086 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and any(File(\"jira_cve_2021-26086.txt\"), {Upper(evt.Meta.http_path) contains Upper(#)})\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/jira_cve_2021-26086.txt\n    dest_file: jira_cve_2021-26086.txt\n    type: string\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.001\n    - attack.T1190\n    - cve.CVE-2021-26086\n  behavior: \"http:exploit\"\n  label: \"Jira CVE-2021-26086 exploitation\"\n  spoofable: 0\n  service: jira\n  confidence: 3\n", "description": "Detect Atlassian Jira CVE-2021-26086 exploitation attemps", "path": "scenarios/crowdsecurity/jira_cve-2021-26086.yaml", "version": "0.3", "versions": {"0.1": {"digest": "1c3631aaa5818cb3af51e6ca6d4fe270eeb362d1ea0dd3fa19c735f3671253d5"}, "0.2": {"digest": "d5fef0d96708e47793854ac57ea135bed7801fc85c85f59b0e6ba95b93b3049b"}, "0.3": {"digest": "b2cf725a3483845be22475b6f7556dd50e96199407eee077da49f7bff04f1b0a"}}}, "crowdsecurity/k8s-audit-anonymous-access": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-anonymous-access\ndescription: \"Detect allowed anonymous access to the K8S API\"\nfilter: |\n   evt.Meta.log_type == 'k8s-audit' &&\n   (\n    (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.ObjectRef?.Resource not in [\"healthz\", \"livez\", \"readyz\"]) \n    || \n    (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.objectRef?.resource not in [\"healthz\", \"livez\", \"readyz\"])\n   )\n   && evt.Meta.user in [\"system:anonymous\", \"system:unauthenticated\"]\nlabels:\n   notification: true\n   classification:\n      - attack.T1595\n   behavior: \"k8s:scan\"\n   label: \"Kubernetes API anonymous access\"\n   spoofable: 0\n   service: k8s\n   confidence: 3\n", "description": "Detect allowed anonymous access to the K8S API", "path": "scenarios/crowdsecurity/k8s-audit-anonymous-access.yaml", "version": "0.4", "versions": {"0.1": {"digest": "d554b9a458ed4edf24a67f1bdf13b32e2ddb43f7ff7b2675c706f0fa2b47ebf5"}, "0.2": {"digest": "0a00e1d0df5950c4a88c9e8ee71a0069a808691b1091d9c2dad3d29d20c7e308"}, "0.3": {"digest": "2c3f6ef71eff02540727a872fa4f5cf7abd2271bb3bbd970b65de810b0894a71"}, "0.4": {"digest": "e5c03d518fc4133ed7a48a533a56cafb92aa6893e259f155f517963b239ab471"}}}, "crowdsecurity/k8s-audit-api-server-bruteforce": {"content": "type: leaky\nname: crowdsecurity/k8s-audit-api-server-bruteforce\ndescription: \"Detect bruteforce attempts against K8S API server\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' && \n  (\n   (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.ResponseStatus.code in [401, 403])\n   ||\n   (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.responseStatus.code in [401, 403])\n  )\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"k8s:bruteforce\"\n  label: \"Kubernetes API Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect bruteforce attempts against K8S API server", "path": "scenarios/crowdsecurity/k8s-audit-api-server-bruteforce.yaml", "version": "0.4", "versions": {"0.1": {"digest": "7ecb56f49b3fca372837c619a85b930b85905a318f9ab96a81a7b7f0e154720a"}, "0.2": {"digest": "3794908e15dcd43bed1e23946a14e13afb67c8a067819bd53b4076394071ae7a"}, "0.3": {"digest": "c134ab48fbb7e97cf523733b3086da1bc08c1b020555e0ec1ccca4fff6adef04"}, "0.4": {"digest": "16f47cfcf58ab606ac40b384d8b8b0e26d937d27031e3247c700ecbedc06b7d0"}}}, "crowdsecurity/k8s-audit-pod-exec": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-pod-exec\ndescription: \"Detect execution (via kubectl exec) in pods\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  (\n   (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.ObjectRef?.Resource == 'pods' && evt.Unmarshaled.k8s_audit.ObjectRef?.Subresource == 'exec')\n   ||\n   (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.objectRef?.resource == 'pods' && evt.Unmarshaled.k8s_audit.objectRef?.subresource == 'exec')\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1609\n  behavior: \"k8s:audit\"\n  label: \"Kubernetes Exec Into Pod\"\n  spoofable: 0\n  confidence: 3\n  cti: false\n  service: k8s\n", "description": "Detect execution (via kubectl exec) in pods", "path": "scenarios/crowdsecurity/k8s-audit-pod-exec.yaml", "version": "0.4", "versions": {"0.1": {"digest": "da4d3286064bc873a090205cae1274e96eb9338794ecf7bebe5b7186d11d3907"}, "0.2": {"digest": "4d14afcd01ba3c46f873afb7898202875eec675863d0da5c35c79341f164c4ed"}, "0.3": {"digest": "b5047e4cc82051818b47fdbbe3803c7fabdb91b91318e990692760c2034a61c6"}, "0.4": {"digest": "2c7bc8d2ff7d50616d7e29955a34ddd1fd05410b75965384f9c1698ef4eced9b"}}}, "crowdsecurity/k8s-audit-pod-host-network": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-pod-host-network\ndescription: \"Detect pods started with host networking\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  (\n   (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.Verb == 'create' && evt.Unmarshaled.k8s_audit.ObjectRef?.Resource == 'pods' && evt.Unmarshaled.k8s_audit.RequestObject?.spec?.hostNetwork == true)\n   ||\n   (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.verb == 'create' && evt.Unmarshaled.k8s_audit.objectRef?.resource == 'pods' && evt.Unmarshaled.k8s_audit.requestObject?.spec?.hostNetwork == true)\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1610\n  behavior: \"k8s:audit\"\n  label: \"Kubernetes Pod Start With Host Networking\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect pods started with host networking", "path": "scenarios/crowdsecurity/k8s-audit-pod-host-network.yaml", "version": "0.4", "versions": {"0.1": {"digest": "22c8869a8472b15bbdef04b4c9a0a30ee8479e909df4b7672515f009ea23b28c"}, "0.2": {"digest": "13e46cb544153327e7cd2057e9b1005b409172b3b3e61f1b831abaf025976a23"}, "0.3": {"digest": "5162f7a8153ba082f0a67e14fa51cce45755a0d4a1d135cebd6af031609b8808"}, "0.4": {"digest": "23bf720e5426846200e199b9e21ff9825ee923d985079c1c7bb799275f3dd768"}}}, "crowdsecurity/k8s-audit-pod-host-path-volume": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-pod-host-path-volume\ndescription: \"Detect pods mounting a sensitive host folder\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  (\n   (\n    evt.Meta.datasource_type == \"k8s-audit\" &&\n    evt.Unmarshaled.k8s_audit.ObjectRef?.Resource == 'pods' &&\n    evt.Unmarshaled.k8s_audit.RequestObject != nil &&\n    evt.Unmarshaled.k8s_audit.RequestObject.spec != nil &&\n    evt.Unmarshaled.k8s_audit.RequestObject.spec.volumes != nil &&\n    any(evt.Unmarshaled.k8s_audit.RequestObject.spec.volumes, { .hostPath != nil && .hostPath.path in [\"/proc\", \"/var/run/docker.sock\", \"/\", \"/etc\", \"/root\", \"/var/run/crio/crio.sock\", \"/home/admin\", \"/var/lib/kubelet\", \"/var/lib/kubelet/pki\", \"/etc/kubernetes\", \"/etc/kubernetes/manifests\"] })\n   )\n   ||\n   (\n    evt.Meta.datasource_type != \"k8s-audit\" &&\n    evt.Unmarshaled.k8s_audit.objectRef?.resource == 'pods' &&\n    evt.Unmarshaled.k8s_audit.requestObject != nil &&\n    evt.Unmarshaled.k8s_audit.requestObject.spec != nil &&\n    evt.Unmarshaled.k8s_audit.requestObject.spec.volumes != nil &&\n    any(evt.Unmarshaled.k8s_audit.requestObject.spec.volumes, { .hostPath != nil && .hostPath.path in [\"/proc\", \"/var/run/docker.sock\", \"/\", \"/etc\", \"/root\", \"/var/run/crio/crio.sock\", \"/home/admin\", \"/var/lib/kubelet\", \"/var/lib/kubelet/pki\", \"/etc/kubernetes\", \"/etc/kubernetes/manifests\"] })\n   )\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1610\n  behavior: \"k8s:audit\"\n  label: \"Kubernetes Pod Start With Host Path\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect pods mounting a sensitive host folder", "path": "scenarios/crowdsecurity/k8s-audit-pod-host-path-volume.yaml", "version": "0.5", "versions": {"0.1": {"digest": "a2cfbc902f353f46fa5d7a38565e2aebdf0c74ffc3ee1dc285331b93ad1989ef"}, "0.2": {"digest": "7a0f0c5fdaf46513bdbc858e30628e5ca16f36bf81352914b5d9ccbdea7564af"}, "0.3": {"digest": "b596e6047525ef0ed7377c829010b6605faa3ea32da227f55e5e5a15f2057032"}, "0.4": {"digest": "28bcdb0dc2e8303e445dadb0e1ea57a41bde1d7a57b98d9b70491b7af1d6f67e"}, "0.5": {"digest": "063db67636d42747f4c305984612ceccc9c427c278223d83c05bcf310f6416d8"}}}, "crowdsecurity/k8s-audit-privileged-pod-creation": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-privileged-pod-creation\ndescription: \"Detect privileged pod creation\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  (\n   (\n    evt.Meta.datasource_type == \"k8s-audit\" &&\n    evt.Unmarshaled.k8s_audit.Verb == 'create' &&\n    evt.Unmarshaled.k8s_audit.ObjectRef?.Resource == 'pods' &&\n    evt.Unmarshaled.k8s_audit.RequestObject != nil &&\n    evt.Unmarshaled.k8s_audit.RequestObject.spec != nil &&\n    any(evt.Unmarshaled.k8s_audit.RequestObject.spec.containers, { .securityContext != nil && .securityContext.privileged == true })\n   )\n   ||\n   (\n    evt.Meta.datasource_type != \"k8s-audit\" &&\n    evt.Unmarshaled.k8s_audit.verb == 'create' &&\n    evt.Unmarshaled.k8s_audit.objectRef?.resource == 'pods' &&\n    evt.Unmarshaled.k8s_audit.requestObject != nil &&\n    evt.Unmarshaled.k8s_audit.requestObject.spec != nil &&\n    any(evt.Unmarshaled.k8s_audit.requestObject.spec.containers, { .securityContext != nil && .securityContext.privileged == true })\n   )\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1610\n  behavior: \"k8s:audit\"\n  label: \"Kubernetes Privileged Pod Creation\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect privileged pod creation", "path": "scenarios/crowdsecurity/k8s-audit-privileged-pod-creation.yaml", "version": "0.4", "versions": {"0.1": {"digest": "ba074de3c2dc77cb50b5bdf84bcc764750cd9166b279c4ac5f1e15ab01eb4308"}, "0.2": {"digest": "cb38d6ab6abbea0bf3a0f8471fa88e175d3bafbbe808f17274bfbac8b464bbf0"}, "0.3": {"digest": "8350fe7aeff51b0167aaba17591008942bdeeb6c8183765bd110a657d0e27f24"}, "0.4": {"digest": "becd28f2a57949a529076a5800edca5cb54c4e4adb457ba43d9232659df3845b"}}}, "crowdsecurity/k8s-audit-service-account-access-denied": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-service-account-access-denied\ndescription: \"Detect unauthorized requests from service accounts\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  evt.Meta.user startsWith \"system:serviceaccount:\" &&\n  (\n   (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.Annotations[\"authorization.k8s.io/decision\"] == \"forbid\")\n   ||\n   (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.annotations[\"authorization.k8s.io/decision\"] == \"forbid\")\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1078\n    - attack.T1069\n  behavior: \"k8s:scan\"\n  label: \"Kubernetes Service Account Denied Request\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect unauthorized requests from service accounts", "path": "scenarios/crowdsecurity/k8s-audit-service-account-access-denied.yaml", "version": "0.4", "versions": {"0.1": {"digest": "b43903791497159fe0dbe5da4aa53275ec41d92eecf6b77318e5f75ae2bf8770"}, "0.2": {"digest": "4c34c562c8a837a1fa32e23dafc4182d371c3576266e206404974421eb13e5a9"}, "0.3": {"digest": "f60ca3ffd290bc64f66c86eb5325b3fe418b884230b38ece451ee5d0dad919f3"}, "0.4": {"digest": "e9532021eea1cb008a0307455aba3d42e537ac043bbcb8583f1dd2e563820fdb"}}}, "crowdsecurity/kasm-bruteforce": {"content": "type: leaky\nname: crowdsecurity/kasm-bruteforce\ndescription: \"Detect kasm login bruteforce\"\nfilter: \"evt.Meta.metric_name in ['account.login.failed_invalid_user', 'account.login.failed_invalid_password']\"\nleakspeed: \"10s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  label: \"KASM Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  service: kasm\n", "description": "Detect kasm login bruteforce", "path": "scenarios/crowdsecurity/kasm-bruteforce.yaml", "version": "0.2", "versions": {"0.1": {"digest": "5f4464d3102dc48cb57695252d7352ab305c6f5fd50aa1e275de28030315fa63"}, "0.2": {"digest": "11ae6e8e7e60c5efcfe523ea4ea357168d29e5024b28d1e0396e1e7a37cf9223"}}}, "crowdsecurity/litespeed-admin-bf": {"content": "type: leaky\nname: crowdsecurity/litespeed-admin-bf\ndescription: \"Detect bruteforce against litespeed admin UI\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.sub_type == 'litespeed_admin_auth_fail'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"LiteSpeed Admin Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  service: litespeed\n", "description": "Detect bruteforce against litespeed admin UI", "path": "scenarios/crowdsecurity/litespeed-admin-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "cf7a11ef6d75de569bdd3e0d62a805a7793102e57911a1a6256327da64aed692"}, "0.2": {"digest": "456850e8d43f06d882e59991f0721d28f6c80220df0b80c17306e735587f1f36"}}}, "crowdsecurity/mariadb-bf": {"content": "# mariadb bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/mariadb-bf\ndescription: \"Detect mariadb bruteforce\"\nfilter: evt.Meta.log_type == 'mariadb_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  service: mariadb\n  classification:\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MariaDB Bruteforce\"\n  spoofable: 0\n  confidence: 3\n", "description": "Detect mariadb bruteforce", "path": "scenarios/crowdsecurity/mariadb-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c6daa770b5ac5f153e6b5bc0c2eb8e50f90373e1802bea40724ebe6037a15ab4"}, "0.2": {"digest": "09b4708abcf47bc810fd74d8c8d1395bc5dbb732184a8231c4dda4b587da2575"}}}, "crowdsecurity/modsecurity": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/modsecurity\ndescription: \"Web exploitation via modsecurity\"\n#modsec for nginx only logs the numerical value of the severity\nfilter: evt.Meta.log_type == 'modsecurity' && (evt.Parsed.ruleseverity == 'CRITICAL' || evt.Parsed.ruleseverity == '2')\nblackhole: 2m\ngroupby: evt.Meta.source_ip\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"Modsecurity Alert\"\n  spoofable: 0\n  confidence: 2\n  service: http\n", "description": "Web exploitation via modsecurity", "path": "scenarios/crowdsecurity/modsecurity.yaml", "version": "0.6", "versions": {"0.1": {"digest": "447c63986f53a743d08fc16677d7f5427ed4b7efca6a0d73c47991d83582e0d0"}, "0.2": {"digest": "45c2a35d4ee071e66197aa2381b0c066a18d17fe6b8aee7b0e83efb21512cdbc"}, "0.3": {"digest": "91e21cd506aa43e1895be93fa3e93dbad64403edafe9ae1e87f2519689ec3f66"}, "0.4": {"digest": "2e2f2591a614514acf033702c5588335136050925f88f36fb9da0bc129f30039"}, "0.5": {"digest": "23c32d105550893e7facd768035f57e7413c1802f52bf93b6540b5d01746a560"}, "0.6": {"digest": "7930d21b866591673c8c7d70ca43a7919a361c22b194f6cc2482381dd0e5f46b"}}}, "crowdsecurity/mssql-bf": {"content": "# mysql bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/mssql-bf\ndescription: \"Detect mssql bruteforce\"\nfilter: evt.Meta.log_type == 'mssql_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MSSQL Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  service: mssql\n", "description": "Detect mssql bruteforce", "path": "scenarios/crowdsecurity/mssql-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "be8f99681f224e5176015815d11bf01b0e0012ceb24bbb264786f503d9146d81"}, "0.2": {"digest": "ac0fc68fb2064422e0743f1e9a0f10c13d8881a2298b6152899f2b84d293b148"}}}, "crowdsecurity/mysql-bf": {"content": "# mysql bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/mysql-bf\ndescription: \"Detect mysql bruteforce\"\nfilter: evt.Meta.log_type == 'mysql_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MySQL Bruteforce\"\n  service: mysql\n", "description": "Detect mysql bruteforce", "path": "scenarios/crowdsecurity/mysql-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3783ff9de7b6d19697ee121314b20b21b8c765b279a9caacc70d3c75f4ebd455"}, "0.2": {"digest": "0e32a1c1d87086a9a0d51208025a61f4c7f1833e50c95959a4c8a1fff86bff5a"}}}, "crowdsecurity/naxsi-exploit-vpatch": {"content": "# naxsi vpatch rules detection\ntype: trigger\nname: crowdsecurity/naxsi-exploit-vpatch\n# id is bigger than 9k, custom rule\ndescription: \"Detect custom blacklist triggered in naxsi\"\nfilter: \"evt.Meta.log_type == 'waf_naxsi-log' && len(evt.Parsed.naxsi_id) > 4\"\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1595\n    - attack.T1190\n  behavior: \"http:exploit\"\n  service: http\n", "description": "Detect custom blacklist triggered in naxsi", "path": "scenarios/crowdsecurity/naxsi-exploit-vpatch.yaml", "version": "0.2", "versions": {"0.1": {"digest": "908ceeb2d7f5607a114a872847df34662e4c80ed07338a55f125a56985f0d095"}, "0.2": {"digest": "5899c88353cdb50f0be57a818488ead9e320b4e81260acd610186c855b1d6716"}}}, "crowdsecurity/netgear_rce": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/netgear_rce\ndescription: \"Detect Netgear RCE DGN1000/DGN220 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && Lower(QueryUnescape(evt.Meta.http_path)) startsWith Lower('/setup.cgi?next_file=netgear.cfg&todo=syscmd&cmd=')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nreferences:\n  - \"https://www.exploit-db.com/exploits/25978\"\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n    - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"Netgear RCE\"\n  service: netgear\n  remediation: true\n", "description": "Detect Netgear RCE DGN1000/DGN220 exploitation attempts", "path": "scenarios/crowdsecurity/netgear_rce.yaml", "references": ["https://www.exploit-db.com/exploits/25978"], "version": "0.3", "versions": {"0.1": {"digest": "da6b213c4c31c81a22e52b573428cd78a76cb9c00f810d0835f7831f8f80eb5d"}, "0.2": {"digest": "14411baac71dcd8fa5be5c9973f36b8c6f880865e1a3004674007a0bec64212d"}, "0.3": {"digest": "4b88489256201cb7341ffc5e9cefba6f3a695b8275096d32d409052e7c4d33ab"}}}, "crowdsecurity/nextcloud-bf": {"content": "---\ntype: leaky\nname: crowdsecurity/nextcloud-bf\ndescription: \"Detect Nextcloud bruteforce\"\nfilter: \"evt.Meta.log_type in ['nextcloud_failed_auth', 'nextcloud_bruteforce_attempt']\"\nleakspeed: \"1m\"\ncapacity: 5\n# if we have bruteforce protection enabled in nextcloud, the same login attempt\n# can log # both login failure and bruteforce attempt at the same time, so\n# keep them in seperate buckets\ngroupby: evt.Meta.source_ip + '--' + evt.Meta.log_type\nblackhole: 5m\nreprocess: true\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"NextCloud Bruteforce\"\n  service: nextcloud\n---\ntype: leaky\nname: crowdsecurity/nextcloud-bf_user_enum\ndescription: \"Detect Nextcloud user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'nextcloud_failed_auth'\"\nleakspeed: \"1m\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nblackhole: 5m\nreprocess: true\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"NextCloud Bruteforce\"\n  service: nextcloud\n---\ntype: leaky\nname: crowdsecurity/nextcloud-bf_domain_error\ndescription: \"Detect Nextcloud domain error\"\nfilter: \"evt.Meta.log_type == 'nextcloud_domain_error'\"\nleakspeed: \"1m\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"NextCloud Bruteforce\"\n  service: nextcloud\n", "description": "Detect Nextcloud bruteforce", "path": "scenarios/crowdsecurity/nextcloud-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "4a6b24a95d286e48aec8eb59fa5fc17686a724be3c7860df538a7eafdb613f97"}, "0.2": {"digest": "6ba276c92b2d1a9b43bff6afa09f09c1d1b7fccb9b87d649eedba803689914d8"}, "0.3": {"digest": "75b4f296618a383fd240413fd51bae1be786872d4f1b46421c8871d43c15d128"}}}, "crowdsecurity/nginx-req-limit-exceeded": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/nginx-req-limit-exceeded\ndescription: \"Detects IPs which violate nginx's user set request limit.\"\nfilter: evt.Meta.sub_type == 'req_limit_exceeded'\nleakspeed: \"60s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 2\n  spoofable: 2\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"Nginx request limit exceeded\"\n  service: http\n", "description": "Detects IPs which violate nginx's user set request limit.", "path": "scenarios/crowdsecurity/nginx-req-limit-exceeded.yaml", "version": "0.3", "versions": {"0.1": {"digest": "7e6fa2b7386d763b570025b3144c8790f68463f7c5739d8f527c9f80f15c15ce"}, "0.2": {"digest": "f064319bf72d0df012495cd33acc005ca934314519adc06d8175c8cfa84c2e18"}, "0.3": {"digest": "d135e5fe0f486f5f5223006c53324b51b5b1130c4d71fcf51f75e13b8575cc03"}}}, "crowdsecurity/odoo-bf_user-enum": {"content": "# Odoo web auth bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/odoo-bf\ndescription: \"Detect bruteforce on odoo web interface\"\nfilter: evt.Meta.log_type == 'odoo_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Odoo Bruteforce\"\n  service: odoo\n---\n# Odoo web auth user_enum\ntype: leaky\nname: crowdsecurity/odoo_user-enum\ndescription: \"Detect odoo user enum\"\nfilter: evt.Meta.log_type == 'odoo_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Odoo Bruteforce\"\n  service: odoo\n", "description": "Detect bruteforce on odoo web interface", "path": "scenarios/crowdsecurity/odoo-bf_user-enum.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ece8333dbfb283c4b696c2963ede3636175306d65151a26bbb2ecdcd19455e53"}, "0.2": {"digest": "292468af8f31901e3aeaa6db5609c90be59f6b6c5dd5af9c40a22c74f1053913"}}}, "crowdsecurity/opnsense-gui-bf": {"content": "# opnsense web auth bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/opnsense-gui-bf\ndescription: \"Detect bruteforce on opnsense web interface\"\nfilter: evt.Meta.log_type == 'opnsense-gui-failed-auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"OPNsense GUI Bruteforce\"\n  service: opnsense\n", "description": "Detect bruteforce on opnsense web interface", "path": "scenarios/crowdsecurity/opnsense-gui-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "15f0d4f03f1e18a8cd5d95467a13e86ebfd717354f53ba02b4d165e6537965bf"}, "0.2": {"digest": "c1031635c18c69203a1e251d25da8f309182ed04221142e94e3a2ff1d8533af3"}, "0.3": {"digest": "5f06456ab0875a8245a6863775ccfe215f3d8a38da562dbcb9de97756aea188a"}}}, "crowdsecurity/palo-alto-threat": {"content": "type: trigger\ndebug: false\nname: crowdsecurity/palo-alto-threat\nfilter: evt.Meta.log_type == \"palo_alto\" && evt.Meta.severity in [\"medium\", \"high\", \"critical\"]\ndescription: Detect palo alto threat with a severity higher or equal to medium\nblackhole: 2m\nlabels:\n  remediation: true\ngroupby: \"evt.Meta.source_ip\"\n", "description": "Detect palo alto threat with a severity higher or equal to medium", "path": "scenarios/crowdsecurity/palo-alto-threat.yaml", "version": "0.1", "versions": {"0.1": {"digest": "9341b00080dbba122150bd55cd155e916fc9a972a6e956b96ed517b09618fbf1"}}}, "crowdsecurity/pfsense-gui-bf": {"content": "# pfsense web auth bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/pfsense-gui-bf\ndescription: \"Detect bruteforce on pfsense web interface\"\nfilter: evt.Meta.log_type == 'pfsense-gui-failed-auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"pfSense GUI Bruteforce\"\n  service: pfsense\n", "description": "Detect bruteforce on pfsense web interface", "path": "scenarios/crowdsecurity/pfsense-gui-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b23ed9edafd3b8cea053d4286abfc2513d53c54904e7348b4fc1bf24e9e3a77d"}, "0.2": {"digest": "07019c43c3bbd31e077d12c85aea855332e6891db2605bae00a481dacf17826f"}}}, "crowdsecurity/pgsql-bf": {"content": "# pgsql bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/pgsql-bf\ndescription: \"Detect PgSQL bruteforce\"\nfilter: evt.Meta.log_type == 'pgsql_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n service: pgsql\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n behavior: \"database:bruteforce\"\n label: \"Postgres Bruteforce\"\n", "description": "Detect PgSQL bruteforce", "path": "scenarios/crowdsecurity/pgsql-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "d2b7d3aa914ba9204f320e15301207c0fb5ea54aae57481bcbcd410cd81629bd"}, "0.2": {"digest": "133fed2f8b3d0479817fcc3e0991a872ef5199adb73f5530220d10bccc6c0df0"}}}, "crowdsecurity/pgsql-user-enum": {"content": "type: leaky\nname: crowdsecurity/pgsql-user-enum\ndescription: \"Detect postgresql user enumeration\"\nfilter: evt.Meta.log_type == 'pgsql_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n service: pgsql\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n  - attack.T1589\n behavior: \"database:bruteforce\"\n label: \"Postgres Bruteforce\"", "description": "Detect postgresql user enumeration", "path": "scenarios/crowdsecurity/pgsql-user-enum.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b9947e219aed3c267b0fa8ca4805d840a3ebf5ee1f0bf978cebb0f711e21336d"}, "0.2": {"digest": "d85a0ac7af5f8d9b0e3678ff8f48c8524ce0a8a5f86ac94961d989afc2ee912a"}}}, "crowdsecurity/postfix-helo-rejected": {"content": "# postfix helo rejected because it did not match postfix restrictions\ntype: leaky\nname: crowdsecurity/postfix-helo-rejected\ndescription: \"Detect HELO rejections\"\nfilter: \"evt.Meta.log_type == 'postfix' && evt.Meta.action == 'reject' && evt.Meta.reason startsWith 'Helo command rejected'\"\nreferences:\n  - https://www.postfix.org/postconf.5.html#smtpd_helo_restrictions\ngroupby: evt.Meta.source_ip\ncapacity: 1\nleakspeed: 600s\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postfix\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n  - attack.T1595\n  - attack.T1592\n  behavior: \"smtp:spam\"\n  label: \"Postfix Helo Rejected\"\n", "description": "Detect HELO rejections", "path": "scenarios/crowdsecurity/postfix-helo-rejected.yaml", "references": ["https://www.postfix.org/postconf.5.html#smtpd_helo_restrictions"], "version": "0.1", "versions": {"0.1": {"digest": "521fce8ce65b0693dd82399e001ec547f097b33a568501e49e0df22cbc281fc7"}}}, "crowdsecurity/postfix-non-smtp-command": {"content": "type: trigger\nname: crowdsecurity/postfix-non-smtp-command\ndescription: \"Detect scanning of postfix service through non-SMTP commands\"\nfilter: \"evt.Meta.service == 'postfix' && evt.Meta.log_type_enh == 'non-smtp-command'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postfix\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  behavior: \"generic:scan\"\n  label: \"Postfix Non-SMTP Command\"", "description": "Detect scanning of postfix service through non-SMTP commands", "path": "scenarios/crowdsecurity/postfix-non-smtp-command.yaml", "version": "0.1", "versions": {"0.1": {"digest": "889ed4023489c664112def811769121139fdc572f2efcd062d34c9443b5fcdb3"}}}, "crowdsecurity/postfix-relay-denied": {"content": "# postfix relay access denied\ntype: leaky\nname: crowdsecurity/postfix-relay-denied\ndescription: \"Detect multiple open relay attempts\"\nfilter: \"evt.Meta.log_type == 'postfix' && evt.Meta.action == 'reject' && evt.Meta.reason == 'Relay access denied'\"\nreferences:\n  - https://en.wikipedia.org/wiki/Open_mail_relay\ngroupby: evt.Meta.source_ip\ncapacity: 1\nleakspeed: 600s\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postfix\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n  - attack.T1595\n  - attack.T1190\n  behavior: \"smtp:spam\"\n  label: \"Postfix Relay Denied\"\n", "description": "Detect multiple open relay attempts", "path": "scenarios/crowdsecurity/postfix-relay-denied.yaml", "references": ["https://en.wikipedia.org/wiki/Open_mail_relay"], "version": "0.1", "versions": {"0.1": {"digest": "ef60099a5b179d375f626157c6856ae28fa8d2b850fba96c6a4f4f94bf53227c"}}}, "crowdsecurity/postfix-spam": {"content": "# postfix spam\ntype: leaky\nname: crowdsecurity/postfix-spam\ndescription: \"Detect spammers\"\nfilter: \"evt.Meta.log_type_enh == 'spam-attempt' || evt.Meta.log_type == 'postfix' && evt.Meta.action == 'reject'\"\nleakspeed: \"10s\"\nreferences:\n  - https://en.wikipedia.org/wiki/Spamming\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postfix\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  behavior: \"smtp:spam\"\n  label: \"Postfix Spam\"\n---\n# postfix spam\ntype: trigger\nname: crowdsecurity/postscreen-rbl\ndescription: \"Detect spammers\"\nfilter: \"evt.Meta.service == 'postscreen' && evt.Meta.pregreet == 'PREGREET'\"\nreferences:\n  - https://en.wikipedia.org/wiki/Spamming\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postscreen\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  behavior: \"smtp:spam\"\n  label: \"Postfix Spam\"\n", "description": "Detect spammers", "path": "scenarios/crowdsecurity/postfix-spam.yaml", "references": ["https://en.wikipedia.org/wiki/Spamming"], "version": "0.4", "versions": {"0.1": {"digest": "03876677d3fe37bdc9ad584cb015e3f0b648266450b2b494a40e1863d5a64d8a"}, "0.2": {"digest": "b36d95dc5ba9cb45c8cbb1a3d37bd19d929ed387f3d7ec386b4e9e041d0bbd8e"}, "0.3": {"digest": "a423cda10b76d41849ee9cb120f8a9c6aeb90afbd63fc9251966704a4878197f"}, "0.4": {"digest": "6fcda4316cfd2284cfa778270fe33e4c825dce8c49d2ee166b8f01550fb8f1ae"}}}, "crowdsecurity/proftpd-bf": {"content": "type: leaky\nname: crowdsecurity/proftpd-bf\ndescription: \"Detect proftpd bruteforce\"\nfilter: \"evt.Meta.log_type == 'ftp_failed_auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n service: proftpd\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n behavior: \"ftp:bruteforce\"\n label: \"Proftpd Bruteforce\"\n", "description": "Detect proftpd bruteforce", "path": "scenarios/crowdsecurity/proftpd-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f241fba9f1ffeb3cdf376bb7cfee0ecf804ba5d8709cfb5defbc973a11c751a5"}, "0.2": {"digest": "a77e311aad794a2f70e838e1b3b4017448af74511e9acc6b154052294fa87b38"}}}, "crowdsecurity/proftpd-bf_user-enum": {"content": "type: leaky\nname: crowdsecurity/proftpd-bf_user-enum\ndescription: \"Detect proftpd user enum bruteforce\"\nfilter: evt.Meta.log_type == 'ftp_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n service: proftpd\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n  - attack.T1190\n behavior: \"ftp:bruteforce\"\n label: \"Proftpd Bruteforce\"\n", "description": "Detect proftpd user enum bruteforce", "path": "scenarios/crowdsecurity/proftpd-bf_user-enum.yaml", "version": "0.2", "versions": {"0.1": {"digest": "7e3b3f8d050805afce54785fe1e9eba40a6a040faf9e19e8ba40d466c3b14814"}, "0.2": {"digest": "79eb461691ff5555246915d3fdc668239ce988ea02e8b2ce62cf34d80bfdb3d6"}}}, "crowdsecurity/pulse-secure-sslvpn-cve-2019-11510": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/pulse-secure-sslvpn-cve-2019-11510\ndescription: \"Detect cve-2019-11510 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    (Upper(evt.Meta.http_path) matches Upper('/dana-na/../dana/html5acc/guacamole/../../../../../../../[^?]+\\\\?/dana/html5acc/guacamole/')\n    or\n    Upper(evt.Meta.http_path) matches Upper('/dana-na/%2E%2E/dana/html5acc/guacamole/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/[^?]+\\\\?/dana/html5acc/guacamole/'))\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - cve.CVE-2019-11510\n  behavior: \"http:exploit\"\n  label: \"Pulse Secure CVE-2019-11510\"\n  service: pulse-secure\n", "description": "Detect cve-2019-11510 exploitation attemps", "path": "scenarios/crowdsecurity/pulse-secure-sslvpn-cve-2019-11510.yaml", "version": "0.3", "versions": {"0.1": {"digest": "bab1d5aa6ee0f6677d73c70438324006f4ed0780de90891a8586030319dc1d08"}, "0.2": {"digest": "9226dd76fd3e818b3a6d4a1770437e1a41a2014e082cde2a788244b50fb83889"}, "0.3": {"digest": "7807f49e188dc01411c027897f4b608fb5b58d621a175b6ba934b76b214664da"}}}, "crowdsecurity/sabnzbd-bf": {"content": "# sabnzbd bruteforce\ntype: leaky\nname: crowdsecurity/sabnzbd-bf\ndescription: \"Detect sabnzbd bruteforce\"\nfilter: \"evt.Meta.service == 'sabnzbd' && evt.Meta.log_type == 'sabnzbd_failed_auth'\"\nleakspeed: \"10s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: sabnzbd\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Sabnzbd Bruteforce\"\n  behavior: \"generic:bruteforce\"\n  remediation: true\n---\n# sabnzbd slow bruteforce\ntype: leaky\nname: crowdsecurity/sabnzbd-slow-bf\ndescription: \"Detect sabnzbd slow bruteforce\"\nfilter: \"evt.Meta.service == 'sabnzbd' && evt.Meta.log_type == 'sabnzbd_failed_auth'\"\nleakspeed: \"60s\"\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: sabnzbd\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Sabnzbd Bruteforce\"\n  behavior: \"generic:bruteforce\"\n  remediation: true", "description": "Detect sabnzbd bruteforce", "path": "scenarios/crowdsecurity/sabnzbd-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "ea47b08a24c258fe669757e44b6cdca6c02512738e89625c6cd47cf454333ae6"}}}, "crowdsecurity/smb-bf": {"content": "# smb bruteforce\ntype: leaky\nname: crowdsecurity/smb-bf\ndescription: \"Detect smb bruteforce\"\nfilter: evt.Meta.log_type == 'smb_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n service: smb\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n behavior: \"smb:bruteforce\"\n label: \"SMB Bruteforce\"", "description": "Detect smb bruteforce", "path": "scenarios/crowdsecurity/smb-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ee7fea38f0a67bde1aae3979cf0579da03da5adf4e69826f12a82c74b812e9d6"}, "0.2": {"digest": "a751e12a752fe652203deeb380e276a38258252296e26c27f6ccaeff038357f9"}}}, "crowdsecurity/spring4shell_cve-2022-22965": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/spring4shell_cve-2022-22965\ndescription: \"Detect cve-2022-22965 probing\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and\n    (Upper(evt.Meta.http_path) contains 'CLASS.MODULE.CLASSLOADER.')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - cve.CVE-2022-22965\n  behavior: \"http:exploit\"\n  label: \"Spring4shell CVE-2022-22965\"\n  service: spring\n", "description": "Detect cve-2022-22965 probing", "path": "scenarios/crowdsecurity/spring4shell_cve-2022-22965.yaml", "version": "0.3", "versions": {"0.1": {"digest": "b16993a7d1fe816230f0fef23e11736019a67a7fa64c5a5cc25e15589764cdcf"}, "0.2": {"digest": "4e03166936f61abd0711167960b06bff7dbffb37b0642ab2a6cba6eb9da9ee98"}, "0.3": {"digest": "c304e9bd45fb6dc79782d2e12f5e4cf646bd984178a0414ecd6c59162ba15cee"}}}, "crowdsecurity/ssh-bf": {"content": "# ssh bruteforce\ntype: leaky\nname: crowdsecurity/ssh-bf\ndescription: \"Detect ssh bruteforce\"\nfilter: \"evt.Meta.log_type == 'ssh_failed-auth'\"\nleakspeed: \"10s\"\nreferences:\n  - http://wikipedia.com/ssh-bf-is-bad\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ssh\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"SSH Bruteforce\"\n  behavior: \"ssh:bruteforce\"\n  remediation: true\n---\n# ssh user-enum\ntype: leaky\nname: crowdsecurity/ssh-bf_user-enum\ndescription: \"Detect ssh user enum bruteforce\"\nfilter: evt.Meta.log_type == 'ssh_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: ssh\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  behavior: \"ssh:bruteforce\"\n  label: \"SSH User Enumeration\"\n", "description": "Detect ssh bruteforce", "path": "scenarios/crowdsecurity/ssh-bf.yaml", "references": ["http://wikipedia.com/ssh-bf-is-bad"], "version": "0.3", "versions": {"0.1": {"digest": "4441dcff07020f6690d998b7101e642359ba405c2abb83565bbbdcee36de280f"}, "0.2": {"digest": "94b1d6f04e9119ea1adb7fc70017fd108cede97bddbaf50b0b2bebdcc887ea28"}, "0.3": {"digest": "242f36684d66bbae3044e576b7cfffef62d5323465f3f74f87923167c6d93356"}}}, "crowdsecurity/ssh-cve-2024-6387": {"content": "# ssh bruteforce\ntype: leaky\nname: crowdsecurity/ssh-cve-2024-6387\ndescription: \"Detect exploitation attempt of CVE-2024-6387\"\nfilter: \"evt.Meta.log_type in ['ssh_auth_timeout', 'ssh_dispatch_fatal']\"\nleakspeed: \"180s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ssh\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - cve.CVE-2024-6387\n  label: \"SSH CVE-2024-6387\"\n  behavior: \"ssh:exploit\"\n  remediation: true\n", "description": "Detect exploitation attempt of CVE-2024-6387", "path": "scenarios/crowdsecurity/ssh-cve-2024-6387.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1a36e33f8743790c5544faa999aa8dd062f6e2b696e16232d3a3f28576119503"}, "0.2": {"digest": "7888f1f31ea75d55f7b4bdf56b6f0840ca4ecbd937af0655cdf263062a11e85a"}}}, "crowdsecurity/ssh-slow-bf": {"content": "# ssh bruteforce\ntype: leaky\nname: crowdsecurity/ssh-slow-bf\ndescription: \"Detect slow ssh bruteforce\"\nfilter: \"evt.Meta.log_type == 'ssh_failed-auth'\"\nleakspeed: \"60s\"\nreferences:\n  - http://wikipedia.com/ssh-bf-is-bad\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ssh\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"SSH Slow Bruteforce\"\n---\n# ssh user-enum\ntype: leaky\nname: crowdsecurity/ssh-slow-bf_user-enum\ndescription: \"Detect slow ssh user enum bruteforce\"\nfilter: evt.Meta.log_type == 'ssh_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 60s\ncapacity: 10\nblackhole: 1m\nlabels:\n  service: ssh\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"SSH Slow User Enumeration\"\n", "description": "Detect slow ssh bruteforce", "path": "scenarios/crowdsecurity/ssh-slow-bf.yaml", "references": ["http://wikipedia.com/ssh-bf-is-bad"], "version": "0.4", "versions": {"0.1": {"digest": "1b910bf7af59dab8dfbba8a735aafb3e4871d1237b29d56f53d7c0eece0381cf"}, "0.2": {"digest": "48665e6f7f4f0af7a47c7e81b0550c86f111e79c0a80d90290e560846beb4008"}, "0.3": {"digest": "313b1dc11a05f8beb6718cdeefe79866122eca26394efe2b814d5d2e15c28f4d"}, "0.4": {"digest": "892f9a153c4dafb5392ba40d70616e88896571be8f4cc00996e7f5e8277c869e"}}}, "crowdsecurity/stirling-pdf-bf": {"content": "# stirling pdf bruteforce\ntype: leaky\nname: crowdsecurity/stirling-pdf-bf\ndescription: \"Detect stirling pdf bruteforce\"\nfilter: \"evt.Meta.service == 'stirling-pdf' && evt.Meta.log_type == 'failed_authentication'\"\nleakspeed: \"10s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: stirling-pdf\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Stirling PDF Bruteforce\"\n  behavior: \"generic:bruteforce\"\n  remediation: true\n", "description": "Detect stirling pdf bruteforce", "path": "scenarios/crowdsecurity/stirling-pdf-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "18bd06a7ba000717fdd3985954ab09b6191388d98bc6b977eae778c702c1fefb"}}}, "crowdsecurity/suricata-alerts": {"content": "# for max (1) priority : kill on sight\ntype: trigger\nname: crowdsecurity/suricata-major-severity\ndescription: \"Detect exploit attempts via emerging threat rules\"\nfilter: \"evt.Meta.log_type == 'suricata_alert' && evt.Parsed.proto == 'TCP' && evt.Meta.suricata_rule_severity == '1'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: suricata\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n  behavior: \"generic:exploit\"\n  label: \"Suricata Severity 1 Event\"\n\n---\n# for lower (2) priority : wait for >=3 different signatures being triggered\n# we intentionally avoid scenarios on priority 3 and such that are too sensitive to false positives\ntype: leaky\ncapacity: 2\nleakspeed: 20s\ndistinct: evt.Meta.suricata_alert_signature_id\nname: crowdsecurity/suricata-high-medium-severity\ndescription: \"Detect exploit attempts via emerging threat rules\"\nfilter: \"evt.Meta.log_type == 'suricata_alert' && evt.Parsed.proto == 'TCP' && evt.Meta.suricata_rule_severity == '2'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: suricata\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n  behavior: \"generic:exploit\"\n  label: \"Suricata Severity 2 Event\"\n", "description": "Detect exploit attempts via emerging threat rules", "path": "scenarios/crowdsecurity/suricata-alerts.yaml", "references": ["http://rules.emergingthreats.net/"], "version": "0.4", "versions": {"0.1": {"digest": "dca94f89e6df928e3d8924f9e1a012bf9c20bb9f8370c6e2c588d93da4e02e27"}, "0.2": {"digest": "5ac0f4c98c5b01ac2114ecc41a27be942201f687ad242b00e73c571ef6ac98d3"}, "0.3": {"digest": "ccef8952af2cb7931773dfee72eb8f7f65c476b7c5d4c8b5bfd3553b301992ac"}, "0.4": {"digest": "f91dbdceb8b96904b6b87c9d23544df6021b5bb72b43b93a754afbf6bc19c89b"}}}, "crowdsecurity/synology-dsm-bf": {"content": "# Synology DSM auth.log bruteforce\ntype: leaky\nname: crowdsecurity/synology-dsm-bf\ndescription: \"Detect Synology DSM web auth bruteforce\"\nfilter: \"evt.Meta.log_type == 'synology-dsm_failed_auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n service: synology_dsm\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n behavior: \"http:bruteforce\"\n label: \"Synology DSM Bruteforce\"", "description": "Detect Synology DSM web auth bruteforce", "path": "scenarios/crowdsecurity/synology-dsm-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8d70f3ab754d69ce9c10fb668bf3fb6bf9f02dca26e577c6c8b0c10731b0c442"}, "0.2": {"digest": "8e89ba870ba373ddc4bc2f745cb08dcf6666035a17bfa5043906158c160f93af"}}}, "crowdsecurity/teamspeak3-bf": {"content": "type: leaky\nname: crowdsecurity/teamspeak3-bf\ndescription: \"detect teamspeak3 server bruteforce\"\nfilter: evt.Meta.log_type == 'ts3_fail_auth'\ngroupby: evt.Meta.source_ip\ncapacity: 2\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  service: teamspeak3\n  type: bruteforce\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  spoofable: 0\n  confidence: 2\n  label: \"TeamSpeak3 Bruteforce\"\n  remediation: true\n", "description": "detect teamspeak3 server bruteforce", "path": "scenarios/crowdsecurity/teamspeak3-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6a6f6a1c73fed4a1ccb9745e42614bc693b975f2eabb31b7c9ac2ede9568b166"}, "0.2": {"digest": "fe7bc25db10780c851f053e8b388b734a7c8d929412b730d3256ab700f56368d"}}}, "crowdsecurity/teleport-bf": {"content": "type: leaky\nname: crowdsecurity/teleport-bf\ndescription: \"detect teleport bruteforce\"\nfilter: | \n  evt.Meta.service == 'teleport' &&\n  evt.Meta.sub_type in ['auth', 'user.login'] &&\n  evt.Meta.success == 'false'\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n service: teleport\n type: bruteforce\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n    - attack.T1110\n label: \"Teleport Bruteforce\"\n behavior: \"teleport:bruteforce\"\n---\ntype: leaky\nname: crowdsecurity/teleport-slow-bf\ndescription: \"detect slow teleport bruteforce\"\nfilter: | \n  evt.Meta.service == 'teleport' &&\n  evt.Meta.sub_type in ['auth', 'user.login'] &&\n  evt.Meta.success == 'false'\ngroupby: evt.Meta.source_ip\ncapacity: 10\nleakspeed: 1m\nblackhole: 5m\nlabels:\n service: teleport\n type: bruteforce\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n    - attack.T1110\n label: \"Teleport Bruteforce\"\n behavior: \"teleport:bruteforce\"", "description": "detect teleport bruteforce", "path": "scenarios/crowdsecurity/teleport-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "cfc359efcdedb98f82d200cea373d98de3ba94993b6cbd0f784df53134d0b428"}}}, "crowdsecurity/telnet-bf": {"content": "type: leaky\nname: crowdsecurity/telnet-bf\ndescription: \"detect telnet bruteforce\"\nfilter: evt.Meta.log_type == 'telnet_new_session'\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  service: telnet\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"telnet:bruteforce\"\n  label: \"Telnet Bruteforce\"\n  remediation: true\n", "description": "detect telnet bruteforce", "path": "scenarios/crowdsecurity/telnet-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "fd1769c247b352916a0400c33668b315a6d7a0ab8e672f339b00d9de2df71229"}, "0.2": {"digest": "3e21b4bdaba0abd031f17f4ee8c0e661695e463681892b71ff6333b92673c4a1"}}}, "crowdsecurity/thehive-bf": {"content": "type: leaky\ndebug: false\nname: crowdsecurity/thehive-bf\ndescription: \"Detect bruteforce on Thehive web interface\"\nfilter: evt.Meta.log_type == 'thehive_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"The Hive Bruteforce\"\n  remediation: true\n", "description": "Detect bruteforce on Thehive web interface", "path": "scenarios/crowdsecurity/thehive-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "6a8e5ab92bdc2087dffb2702d9990a7c974654ce88db63a3b7f4a40b3af75790"}, "0.2": {"digest": "a082bd5622ebf06280de10cdd126699b8d53f8ca002085e4113d3ea174597e9a"}, "0.3": {"digest": "ef76556198a2c9c72636092cfac1ca8a604f905a372e923fa57fcc467e5e66fe"}}}, "crowdsecurity/thinkphp-cve-2018-20062": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/thinkphp-cve-2018-20062\ndescription: \"Detect ThinkPHP CVE-2018-20062 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and RegexpInFile(Lower(evt.Meta.http_path), \"thinkphp_cve_2018-20062.txt\")\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/thinkphp_cve_2018-20062.txt\n    dest_file: thinkphp_cve_2018-20062.txt\n    type: regexp\n    strategy: LRU\n    size: 20\n    ttl: 10s\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2018-20062\n  behavior: \"http:exploit\"\n  label: \"ThinkPHP CVE-2018-20062\"\n  remediation: true\n  service: thinkphp\n", "description": "Detect ThinkPHP CVE-2018-20062 exploitation attemps", "path": "scenarios/crowdsecurity/thinkphp-cve-2018-20062.yaml", "version": "0.6", "versions": {"0.1": {"digest": "bf76bbd0e78be17642a4ea0d8c080ae72b43075fa74ba77990aac602285c1857"}, "0.2": {"digest": "abb7a26fc4cd630c545738b3cf43d36439526eec9c5a25668f434c1cf9f0320b"}, "0.3": {"digest": "1cc85df2f1e642e83ec20e0197777795b82ff076842c6b169a8a7b1e4687de3a"}, "0.4": {"digest": "a7d01cde79e669479f49160d5c122898ee88e14ac07d27d232b9b14ac839d5d5"}, "0.5": {"digest": "e91ada2fdadd6e70b1feceb4977e4830fdcc811e0ace9cf3f6055cacc5943e8d"}, "0.6": {"digest": "3a3596ed6734fc879a1d93c5b9e9b69906140fc68223578d72d31f07c2e1640f"}}}, "crowdsecurity/vmware-cve-2022-22954": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/vmware-cve-2022-22954\ndescription: \"Detect Vmware CVE-2022-22954 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && Upper(QueryUnescape(evt.Meta.http_path)) startsWith Upper('/catalog-portal/ui/oauth/verify?error=&deviceUdid=${\"freemarker.template.utility.Execute\"?new()(')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2022-22954\n  behavior: \"vm-management:exploit\"\n  label: \"VMWARE CVE-2022-22954\"\n  remediation: true\n  service: vmware\n", "description": "Detect Vmware CVE-2022-22954 exploitation attempts", "path": "scenarios/crowdsecurity/vmware-cve-2022-22954.yaml", "version": "0.3", "versions": {"0.1": {"digest": "a5d994d73edec1ea334d09cd057193163a32527797f9556774f167bda1593616"}, "0.2": {"digest": "d26a37b84b843dba6a0266d54f754438b875fa8bc62de6ddd7d9d2d5d1eba07c"}, "0.3": {"digest": "4970a46baaef676bd66166bbeedd764df53cc0b81f6a15812e5b231953b6314a"}}}, "crowdsecurity/vmware-vcenter-vmsa-2021-0027": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/vmware-vcenter-vmsa-2021-0027\ndescription: \"Detect VMSA-2021-0027 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && evt.Meta.http_path matches '/ui/vcav-bootstrap/rest/vcav-providers/provider-logo\\\\?url=(file|http)'\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2021-0027\n  behavior: \"vm-management:exploit\"\n  label: \"VMWARE VCenter VMSA CVE-2021-0027\"\n  remediation: true\n  service: vmware\n", "description": "Detect VMSA-2021-0027 exploitation attemps", "path": "scenarios/crowdsecurity/vmware-vcenter-vmsa-2021-0027.yaml", "version": "0.2", "versions": {"0.1": {"digest": "4d497542fa056c82b0089b7849ce686544b8ae9775f6dffddd6ac5074ec5964b"}, "0.2": {"digest": "f4d75dc60a53e0a98cf3af39207c52de14a7aeb4571eb15234e881aea5793064"}}}, "crowdsecurity/vsftpd-bf": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/vsftpd-bf\ndescription: \"Detect FTP bruteforce (vsftpd)\"\nfilter: evt.Meta.log_type == 'ftp_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ftp:bruteforce\"\n  label: \"VSFTPD Bruteforce\"\n  remediation: true\n  service: vsftpd\n", "description": "Detect FTP bruteforce (vsftpd)", "path": "scenarios/crowdsecurity/vsftpd-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3591247988014705cf3a7e42388f0c87f9b86d3141268d996c5820ceab6364e1"}, "0.2": {"digest": "d1ddf4797250c1899a93ce634e6366e5deaaaf7508135056d17e9b09998ddf91"}}}, "crowdsecurity/windows-CVE-2022-30190-msdt": {"content": "type: trigger\nname: crowdsecurity/CVE-2022-30190-msdt\ndescription: \"Detect CVE-2022-30190 from sysmon events\"\nfilter: |\n  evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1' && \n  Upper(evt.Parsed.Image) endsWith 'MSDT.EXE' && \n  Upper(evt.Parsed.ParentImage) endsWith 'WINWORD.EXE' &&\n  (Upper(evt.Parsed.CommandLine) contains 'PCWDIAGNOSTIC' && Upper(evt.Parsed.CommandLine) contains 'IT_REBROWSEFORFILE' && Upper(evt.Parsed.CommandLine) contains 'IT_BROWSEFORFILE')\nlabels:\n  type: rce\n  notification: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1059\n    - attack.T1203\n    - cve.CVE-2022-30190\n  behaviors: \"windows:rce\"\n  label: \"CVE-2022-30190\"\n  service: windows\nscope:\n  type: user_account\n  expression: evt.Parsed.User\n", "description": "Detect CVE-2022-30190 from sysmon events", "path": "scenarios/crowdsecurity/windows-CVE-2022-30190-msdt.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6cac369ca1553245cf9a837275492822387a43a0a4f138560dfdda208def1103"}, "0.2": {"digest": "2e41d1c94e7af7e2cdb8eb0c22152a44f320b9e7ef00b6604b3f77977e86f3ed"}}}, "crowdsecurity/windows-bf": {"content": "# windows auth bruteforce\ntype: leaky\nname: crowdsecurity/windows-bf\ndescription: \"Detect windows auth bruteforce\"\nfilter: \"evt.Meta.log_type == 'windows_failed_auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"windows:bruteforce\"\n  label: \"Windows Bruteforce\"\n  remediation: true\n  service: windows\n", "description": "Detect windows auth bruteforce", "path": "scenarios/crowdsecurity/windows-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8bab4995597e6a72e87131cd681ed6023c90cc805c3ee824bfbce1725e67fdd8"}, "0.2": {"digest": "d90b8a59f018321a1571744836a05c7a1d1214902bede5b3122f0c66339ce155"}}}, "crowdsecurity/wireguard-auth": {"content": "type: leaky\nname: crowdsecurity/wireguard-auth\ndescription: \"Detects rejected connections attempts and unauthorized packets through wireguard tunnels\"\nfilter: \"evt.Meta.log_type == 'wireguard_failed_auth'\"\ngroupby: evt.Meta.source_ip\nleakspeed: \"30s\"\ncapacity: 3\nblackhole: 1m\nlabels:\n  remediation: true\n  service: wireguard\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Wireguard Bruteforce\"\n  behavior: \"generic:bruteforce\"\n", "description": "Detects rejected connections attempts and unauthorized packets through wireguard tunnels", "path": "scenarios/crowdsecurity/wireguard-auth.yaml", "version": "0.2", "versions": {"0.1": {"digest": "63d0813873be54c7fe419127eae9981713dadfca5e3514583d1ade1f20633d04"}, "0.2": {"digest": "e2620820c7b1b14d80075ba0613da2c75462bd10597d9236cf434eba5386ad4e"}}}, "darkclip/charon-ipsec-bf": {"content": "name: darkclip/charon-ipsec-bf\n#debug: true\ndescription: \"Detect Charon IPsec bruteforce\"\nfilter: \"evt.Meta.log_type == 'charon_ipsec_auth_fail'\"\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"10s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: charon_ipsec\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Charon IPsec Bruteforce\"\n  remediation: true\n", "description": "Detect Charon IPsec bruteforce", "path": "scenarios/darkclip/charon-ipsec-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "183e51751d76663ff636d1b64acae7ade0ac6995ec50ea77a09e573f9a61079e"}}}, "darkclip/charon-ipsec-slow-bf": {"content": "name: darkclip/charon-ipsec-bf\n#debug: true\ndescription: \"Detect Charon IPsec slow bruteforce\"\nfilter: \"evt.Meta.log_type == 'charon_ipsec_auth_fail'\"\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"60s\"\ncapacity: 10\nblackhole: 1m\nlabels:\n  service: charon_ipsec\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Charon IPsec Slow Bruteforce\"\n  remediation: true\n", "description": "Detect Charon IPsec slow bruteforce", "path": "scenarios/darkclip/charon-ipsec-slow-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b91ab9160377e1a2396c593b054374c778cb6affadecdba952207fb1e9442fe0"}}}, "firewallservices/lemonldap-ng-bf": {"content": "# Lemonldap::NG brutforce\ntype: leaky\n#debug: true\nname: firewallservices/lemonldap-ng-bf\ndescription: \"Detect Lemonldap::NG bruteforce\"\nfilter: evt.Meta.service == 'llng' and evt.Meta.log_type == 'llng_auth_fail'\nleakspeed: 30s\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ldap\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ldap:bruteforce\"\n  label: \"LemonLDAP Bruteforce\"\n  remediation: true\n\n---\n# Lemonldap::NG user enumeration\ntype: leaky\n#debug: true\nname: firewallservices/lemonldap-ng-user-enum\ndescription: \"Detect Lemonldap::NG user enum bruteforce\"\nfilter: evt.Meta.service == 'llng' and evt.Meta.log_type == 'llng_auth_fail'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 2m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: ldap\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n    - attack.T1595\n  behavior: \"ldap:bruteforce\"\n  label: \"LemonLDAP User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect Lemonldap::NG bruteforce", "path": "scenarios/firewallservices/lemonldap-ng-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "92ffa388cc0c79431a9014d6a384a84e7571d5e3445ff60d29792eb5d36307da"}, "0.2": {"digest": "d27d2e0536ff663a0d5821598cf063be7c382946117116cf6335bf18258488a0"}}}, "firewallservices/pf-scan-multi_ports": {"content": "type: leaky\nname: firewallservices/pf-scan-multi_ports\ndescription: \"Detect aggressive portscans (pf)\"\nfilter: \"evt.Meta.log_type == 'pf_drop' && evt.Meta.service == 'tcp'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.dst_port\ncapacity: 15\nleakspeed: 5s\nblackhole: 1m\nlabels:\n  service: tcp\n  confidence: 1\n  spoofable: 3\n  classification:\n    - attack.T1595.001\n    - attack.T1018\n    - attack.T1046\n  behavior: \"tcp:scan\"\n  label: \"PF Scan Multi Ports\"\n  remediation: true\n", "description": "Detect aggressive portscans (pf)", "path": "scenarios/firewallservices/pf-scan-multi_ports.yaml", "version": "0.5", "versions": {"0.1": {"digest": "d650a9e64532d14a46dcf5bfc952b0a0eb1825efdb07a179069d9c7f8f185d78"}, "0.2": {"digest": "42359d53fdf4b78cf2600d81c5a893bb0306589190447cde88f5c0e788706136"}, "0.3": {"digest": "d650a9e64532d14a46dcf5bfc952b0a0eb1825efdb07a179069d9c7f8f185d78"}, "0.4": {"digest": "a8017247b648a5b731414ea6e7923b12d8da86ae0be535b96aa122ac65653b1f"}, "0.5": {"digest": "cc7db3dfe4ceb18e39de969a641e66d7f0279120695a43ad55e51dcca036a34d"}}}, "firewallservices/zimbra-bf": {"content": "# Zimbra brutforce\ntype: leaky\n#debug: true\nname: firewallservices/zimbra-bf\ndescription: \"Detect Zimbra bruteforce\"\nfilter: evt.Meta.log_type == 'zimbra_auth_fail'\nleakspeed: 30s\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: zimbra\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Zimbra Bruteforce\"\n  remediation: true\n---\n# Zimbra user enumeration\ntype: leaky\n#debug: true\nname: firewallservices/zimbra-user-enum\ndescription: \"Detect Zimbra user enum bruteforce\"\nfilter: evt.Meta.log_type == 'zimbra_auth_fail'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 2m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: zimbra\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589.002\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Zimbra Bruteforce\"\n  remediation: true\n", "description": "Detect Zimbra bruteforce", "path": "scenarios/firewallservices/zimbra-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "20cd0d65ecb94e81c785bbc8117d3cf12333bf0b32f600d14949be7ce21f3a4c"}, "0.2": {"digest": "f7c711ae8b784fb37120952db8b47815c35c917dc6be49e6818d7a97b1aea379"}}}, "firix/authentik-bf": {"content": "# Authentik BF scan\ntype: leaky\nname: firix/authentik-bf\ndescription: \"Detect authentik bruteforce\"\nfilter: evt.Meta.log_type in ['authentik_failed_auth', 'authentik_invalid_username']\ngroupby: evt.Meta.source_ip\nleakspeed: 20s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: authentik\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Authentik Bruteforce\"\n  remediation: true\n---\n# Authentik user-enum\ntype: leaky\nname: firix/authentik-bf_user-enum\ndescription: \"Detect authentik user enum bruteforce\"\nfilter: evt.Meta.log_type in ['authentik_failed_auth', 'authentik_invalid_username']\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: authentik\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Authentik User Enumeration\"\n  remediation: true \n", "description": "Detect authentik bruteforce", "path": "scenarios/firix/authentik-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "f2d5cf9e9fa750c2e3372aebeaf35fe13d56b7e0089dc01a744b6687d1872f3b"}}}, "fulljackz/proxmox-bf": {"content": "# Proxmox authent bruteforce\ntype: leaky\nname: fulljackz/proxmox-bf\ndescription: \"Detect proxmox bruteforce\"\nfilter: \"evt.Meta.log_type == 'pve_failed-auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\n\nlabels:\n  service: vm-management\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"vm-management:bruteforce\"\n  label: \"PveDaemon Bruteforce\"\n  remediation: true\n---\n# Proxmox bad user\ntype: leaky\nname: fulljackz/proxmox-bf-user-enum\ndescription: \"Detect proxmox wrong username\"\nfilter: \"evt.Meta.log_type == 'pve_failed-auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.source_user\nblackhole: 1m\nreprocess: true\nlabels:\n  service: vm-management\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"vm-management:bruteforce\"\n  label: \"PveDaemon User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect proxmox bruteforce", "path": "scenarios/fulljackz/proxmox-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "0e9371bccf18fdd2195b68c9506182d0958ef4e8a31289d34106fda4b58ccd17"}, "0.2": {"digest": "b0d36f0ced0f2b05e56c0655a1730181a653796133e0770a72ea5cf71db5cb9e"}}}, "fulljackz/pureftpd-bf": {"content": "# Pureftpd authent bruteforce\ntype: leaky\nname: fulljackz/pureftpd-bf\ndescription: \"Detect pureftpd bruteforce\"\nfilter: \"evt.Meta.log_type == 'pftpd_failed-auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ftp\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ftp:bruteforce\"\n  label: \"PureFTPD Bruteforce\"\n  remediation: true\n", "description": "Detect pureftpd bruteforce", "path": "scenarios/fulljackz/pureftpd-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b3d2ff52ddeff8e7bc547565b7d797c7420f4f5dc4cd00181f4a2be28dd56be7"}, "0.2": {"digest": "36c442c20c6124c19a31fc4e57d2d65e9d1dfd63b59aebda95c3f0846ff9ed16"}}}, "gauth-fr/immich-bf": {"content": "# immich BF scan\nname: gauth-fr/immich-bf\ndescription: \"Detect immich bruteforce\"\nfilter: \"evt.Meta.log_type == 'immich_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: immich\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Immich Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\n# immich user-enum\ntype: leaky\nname: gauth-fr/immich-bf_user-enum\ndescription: \"Detect immich user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'immich_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: immich\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Immich Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect immich bruteforce", "path": "scenarios/gauth-fr/immich-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ac8169ad4527ba503533131e47f7ffe26f5c49ac2ffda361217e45c77125c887"}, "0.2": {"digest": "55a427ed10a711e624975181bdf80a2050238107245f0f0cf954a8d0a91f7244"}}}, "hitech95/mail-generic-bf": {"content": "# Global brouteforce\ntype: leaky\n#debug: true\nname: hitech95/email-generic-bf\ndescription: \"Detect generic email brute force\"\nfilter: \"evt.Meta.log_type == 'mail_auth' && evt.Meta.sub_type == 'auth_fail'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  service: pop3/imap\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"POP3/IMAP Bruteforce\"\n  remediation: true\n---\n# Per user brouteforce\ntype: leaky\n#debug: true\nname: hitech95/email-user-bf\ndescription: \"Detect specific user email brute force\"\nfilter: \"evt.Meta.log_type == 'mail_auth' && evt.Meta.sub_type == 'auth_fail'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\ncapacity: 3\nleakspeed: \"30s\"\nblackhole: 1m\nlabels:\n  service: pop3/imap\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589.002\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Mail User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect generic email brute force", "path": "scenarios/hitech95/mail-generic-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f4dd689cd76dbad62fc1188d106ee58d67e9637398e25f1ee6c4dd56039491c1"}, "0.2": {"digest": "6240b1295617a293ce14a9e5ccea082a0df0d55259ca01653d423eb6a290c72a"}}}, "inherent-io/keycloak-bf": {"content": "type: leaky\nname: inherent-io/keycloak-bf\ndescription: \"Detect keycloak bruteforce\"\nfilter: evt.Meta.service == \"keycloak\" && evt.Meta.error in ['user_not_found', 'invalid_user_credentials']\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: keycloak\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Keycloak Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\ntype: leaky\nname: inherent-io/keycloak-user-enum-bf\ndescription: \"Detect keycloak user enum bruteforce\"\nfilter: evt.Meta.service == \"keycloak\" && evt.Meta.error in ['user_not_found', 'invalid_user_credentials']\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: keycloak\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Keycloak Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect keycloak bruteforce", "path": "scenarios/inherent-io/keycloak-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "e49641024ac18c51c5f562e9f1c4a60ec31e0ef0525f5754537bc7ac8a425ddb"}, "0.2": {"digest": "ae82c46c8629fc58402e4b86bed8b8099c04484fb9acf5d29b5d293690056a15"}, "0.3": {"digest": "4042f61ec012d1a400d330da365880acb37dab889bc051dc165e005c743b04be"}}}, "inherent-io/keycloak-slow-bf": {"content": "type: leaky\nname: inherent-io/keycloak-slow-bf\ndescription: \"Detect keycloak bruteforce\"\nfilter: evt.Meta.service == \"keycloak\" && evt.Meta.error in ['user_not_found', 'invalid_user_credentials']\nleakspeed: \"60s\"\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: keycloak\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Keycloak Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\ntype: leaky\nname: inherent-io/keycloak-user-enum-slow-bf\ndescription: \"Detect keycloak user enum bruteforce\"\nfilter: evt.Meta.service == \"keycloak\" && evt.Meta.error in ['user_not_found', 'invalid_user_credentials']\nleakspeed: \"60s\"\ncapacity: 10\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: keycloak\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Keycloak Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect keycloak bruteforce", "path": "scenarios/inherent-io/keycloak-slow-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "14928e0df7050fa79b4e332f228afc71e287c2a67fefd2c77aab19de99fad70a"}, "0.2": {"digest": "001444d0fbb4395b81e6caf835e8d7c5dde0fd3818c0b7b70d79264ab6453b04"}, "0.3": {"digest": "cc4be12326a155f70b32f816c5521e96ab9fc7715a9bdecd33615fc7ba53f84a"}}}, "jbowdre/miniflux-bf": {"content": "# miniflux BF scan\nname: jbowdre/miniflux-bf\ndescription: \"Detect miniflux bruteforce\"\nfilter: \"evt.Meta.log_type == 'miniflux_failed_auth'\"\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: 20s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: miniflux\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Miniflux Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\n# miniflux user-enum\ntype: leaky\nname: jbowdre/miniflux-bf_user-enum\ndescription: \"Detect miniflux user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'miniflux_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 1m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: miniflux\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Miniflux Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n\n", "description": "Detect miniflux bruteforce", "path": "scenarios/jbowdre/miniflux-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "ca3feff94722b7029e3797f11737233f64b38e3cee1d05125ac1391fc70f4ddf"}}}, "jusabatier/apereo-cas-bf": {"content": "# cas bruteforce\ntype: leaky\nname: jusabatier/apereo-cas-bf\ndescription: \"Detect CAS bruteforce\"\nfilter: \"evt.Meta.log_type == 'cas_failed-auth'\"\nleakspeed: \"10s\"\nreferences:\n  - http://wikipedia.com/cas-bf-is-bad\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"CAS Bruteforce\"\n  remediation: true\n---\n# cas user-enum\ntype: leaky\nname: jusabatier/apereo-cas-bf_user-enum\ndescription: \"Detect CAS user enum bruteforce\"\nfilter: evt.Meta.log_type == 'cas_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"CAS User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect CAS bruteforce", "path": "scenarios/jusabatier/apereo-cas-bf.yaml", "references": ["http://wikipedia.com/cas-bf-is-bad"], "version": "0.2", "versions": {"0.1": {"digest": "d1bf29f3d7bbf0a7bee0a9e0dddc953c9f0cad2ac4f5d6dcefe7d8ae3dc833a6"}, "0.2": {"digest": "828c0aeff9e1dd41f90b2fb1f83d4d8fb1bd6812045e30f19f772cb4879dbca1"}}}, "jusabatier/apereo-cas-slow-bf": {"content": "# CAS bruteforce\ntype: leaky\nname: jusabatier/cas-slow-bf\ndescription: \"Detect slow CAS bruteforce\"\nfilter: \"evt.Meta.log_type == 'cas_failed-auth'\"\nleakspeed: \"60s\"\nreferences:\n  - http://wikipedia.com/cas-bf-is-bad\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"CAS Slow Bruteforce\"\n  remediation: true\n---\n# cas user-enum\ntype: leaky\nname: jusabatier/cas-slow-bf_user-enum\ndescription: \"Detect slow CAS user enum bruteforce\"\nfilter: evt.Meta.log_type == 'cas_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 60s\ncapacity: 10\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"CAS Slow User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect slow CAS bruteforce", "path": "scenarios/jusabatier/apereo-cas-slow-bf.yaml", "references": ["http://wikipedia.com/cas-bf-is-bad"], "version": "0.2", "versions": {"0.1": {"digest": "4bcde74a3f00abede206b5821669531c8ebfbf80b79530414050bfd3ccbfc6f9"}, "0.2": {"digest": "272deed2d9f9f5e4a49364246a92c1cd826daa49d77717de71b9e5688059f87e"}}}, "jusabatier/cas-slow-bf": {"content": "# CAS bruteforce\ntype: leaky\nname: jusabatier/apereo-cas-slow-bf\ndescription: \"Detect slow CAS bruteforce\"\nfilter: \"evt.Meta.log_type == 'cas_failed-auth'\"\nleakspeed: \"60s\"\nreferences:\n  - http://wikipedia.com/cas-bf-is-bad\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n    - attack.T1595\n  behavior: \"http:bruteforce\"\n  label: \"Apereo CAS Bruteforce\"\n  remediation: true\n---\n# cas user-enum\ntype: leaky\nname: jusabatier/apereo-cas-slow-bf_user-enum\ndescription: \"Detect slow CAS user enum bruteforce\"\nfilter: evt.Meta.log_type == 'cas_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 60s\ncapacity: 10\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n    - attack.T1595\n  behavior: \"http:bruteforce\"\n  label: \"Apereo CAS Slow User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect slow CAS bruteforce", "path": "scenarios/jusabatier/cas-slow-bf.yaml", "references": ["http://wikipedia.com/cas-bf-is-bad"], "version": "0.2", "versions": {"0.1": {"digest": "6279c83e01b94e7d87271e16118d6b06be9662873c941884a12038fa7adc76c1"}, "0.2": {"digest": "49a43e695621ca9c777d8825d67a7354da4012d94320740c39adf786d76b9028"}}}, "lourys/pterodactyl-wings-bf": {"content": "####################\n## Invalid format ##\n####################\ntype: leaky\nname: lourys/pterodactyl-wings-bf\ndescription: \"Detect invalid_format ssh bruteforce\"\nfilter: \"evt.Meta.log_type == 'pterodactly_wings_invalid_format'\"\nleakspeed: 15m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 30m\nreprocess: true\nlabels:\n  service: pterodactyl\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  behavior: \"ssh:bruteforce\"\n  label: \"Pterodactyl Wing Bruteforce\"\n  remediation: true\n---\ntype: leaky\nname: lourys/pterodactyl-wings-bf\ndescription: \"Detect invalid_format ssh user enum bruteforce\"\nfilter: evt.Meta.log_type == 'pterodactly_wings_invalid_format'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 15m\ncapacity: 5\nblackhole: 30m\nlabels:\n  service: pterodactyl\n  classification:\n    - attack.T1087\n  spoofable: 0\n  confidence: 3\n  behavior: \"ssh:bruteforce\"\n  label: \"Pterodactyl Wing Bruteforce\"\n  remediation: true\n\n###############################\n## Invalid username/password ##\n###############################\n---\ntype: leaky\nname: lourys/pterodactyl-wings-bf\ndescription: \"Detect invalid_username_or_password ssh bruteforce\"\nfilter: evt.Meta.log_type == 'pterodactly_wings_invalid_username_or_password'\ngroupby: evt.Meta.source_ip\nleakspeed: 5m\ncapacity: 10\nblackhole: 5m\nlabels:\n  service: pterodactyl\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  behavior: \"ssh:bruteforce\"\n  label: \"Pterodactyl Wing Bruteforce\"\n  remediation: true\n", "description": "Detect invalid_format ssh bruteforce", "path": "scenarios/lourys/pterodactyl-wings-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "05da99b5df02bed22d6627edd06897404a53ed13f9033b79cdf7b9cc21538cbe"}, "0.2": {"digest": "4837e97a679e794ebd2d2a90028a2c649748a5ffbf1a27c286b799214bc40222"}, "0.3": {"digest": "55b6dc21a6ecbff059805e5c399c9f3ed7aaeae00890e0ac9615123a3533cfc5"}, "0.4": {"digest": "a669d9e69d703728c029f162bad5c3a3d45b29fe15cd7b36f7f16b74fef18113"}}}, "ltsich/http-w00tw00t": {"content": "#contributed by ltsich\ntype: trigger\nname: ltsich/http-w00tw00t\ndescription: \"detect w00tw00t\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.file_name contains 'w00tw00t.at.ISC.SANS.DFind'\"\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:scan\"\n  label: \"w00t w00t Scanner\"\n  remediation: true\n", "description": "detect w00tw00t", "path": "scenarios/ltsich/http-w00tw00t.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f0cba1520658a1016e9d1952473fa9e78175deef2117d2b921e7d994a6e7a549"}, "0.2": {"digest": "6327526c8c38490c33a5441ad144d35ad3bfc49b309194b2c437a178cf95908b"}}}, "mstilkerich/bind9-refused": {"content": "type: leaky\nname: mstilkerich/bind9-refused\ndescription: \"Act on queries / zone transfers denied by bind9 policy\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'bind9_denied'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 10s\nblackhole: 1m\nlabels:\n  service: domain\n  classification:\n    - attack.T1590.002\n  spoofable: 0\n  confidence: 3\n  behavior: \"generic:scan\"\n  label: \"Domain transfer attempt\"\n  remediation: true\n", "description": "Act on queries / zone transfers denied by bind9 policy", "path": "scenarios/mstilkerich/bind9-refused.yaml", "version": "0.2", "versions": {"0.1": {"digest": "16ff798ce0bde3b31c91eed4d3b022b70ccbe723579ab80ac889880058a50d20"}, "0.2": {"digest": "a7567674f1b50c578195fa8e6a95c99e9573598c63720c8ae3b585ff492aa91e"}}}, "mwinters-stuff/mailu-admin-bf": {"content": "# mailu-admin bruteforce\ntype: trigger\n# debug: true\nname: mwinters-stuff/mailu-admin-bf\ndescription: \"Detect mailu admin bruteforce\"\nfilter: evt.Meta.log_type == 'mailu_admin_auth_attempt'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\n# reprocess: true\nlabels:\n  service: http\n  classification:\n    - attack.T1110.001\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:bruteforce\"\n  label: \"Mailu web admin authentication attempt\"\n  remediation: true\n", "description": "Detect mailu admin bruteforce", "path": "scenarios/mwinters-stuff/mailu-admin-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f5f64aea87e23bec59055bd1d701aa190de5c77edb2b8b23baf98176ff544515"}, "0.2": {"digest": "67f3eb683565052c8d13cb3cac78d34e79895310a97a3bc487a4db016627f386"}}}, "openappsec/openappsec-bot-protection": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-bot-protection\ndescription: \"Detect openappsec 'prevent' securityActions on 'Bot Protection' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'bot protection'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:spam\"\n  label: \"Openappsec 'Bot Protection' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Bot Protection' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-bot-protection.yaml", "version": "0.2", "versions": {"0.1": {"digest": "359fa8bc8cbcba17f082b9dd0ff714bee45f7b4f1428a81bddfc98d7d379e8be"}, "0.2": {"digest": "131dcf6809a4df02095cb2f1ad9cf85372b4b318823a63ef1a817a440652c91b"}}}, "openappsec/openappsec-cross-site-redirect": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-cross-site-redirect\ndescription: \"Detect openappsec 'prevent' securityActions on 'Cross Site Redirect' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'cross site redirect'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1566\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'cross site redirect' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Cross Site Redirect' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-cross-site-redirect.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1d6a3d6144b9c31b384161674f4d6aa9f19ac200c5e8f608539a8d0f4a316f6b"}, "0.2": {"digest": "883d8ef5392e68b80b4ee7ebb9ac34f087069f077a46fbe48433871c0ed9dc8f"}}}, "openappsec/openappsec-csrf": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-csrf\ndescription: \"Detect openappsec 'prevent' securityActions on 'Cross Site Request Forgery' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'cross site request forgery'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1189\n  confidence: 2\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'cross site request forgery' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Cross Site Request Forgery' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-csrf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "0ba2cee3113519c489e5a59ca436a776acb6039a6feae4b96ac1ae9b80bc17ff"}, "0.2": {"digest": "9a0e799668d2feac96fbdee3195657c5f53d42036bb9c356639b662045a1a122"}}}, "openappsec/openappsec-error-disclosure": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-error-disclosure\ndescription: \"Detect openappsec 'prevent' securityActions on 'Error Disclosure' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'error disclosure'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 1\n  confidence: 1\n  behavior: \"http:scan\"\n  label: \"Openappsec 'error disclosure' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Error Disclosure' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-error-disclosure.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f80c4a142337e7282fcd356b7fd8163d9bd5931ef0f118b33a03529042599d23"}, "0.2": {"digest": "fc81a79b1c8063f5b63381c211294e3793e8072fc871e208b1fcc62800904d34"}}}, "openappsec/openappsec-error-limit": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-error-limit\ndescription: \"Detect openappsec 'prevent' securityActions on 'Error Limit' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'error limit'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 1\n  confidence: 1\n  behavior: \"http:bruteforce\"\n  label: \"Openappsec 'error limit' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Error Limit' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-error-limit.yaml", "version": "0.2", "versions": {"0.1": {"digest": "dadb5af9a8635ad6e0194fd8a879b8ef7a8b17f24f4eb451096274a2fc173a6e"}, "0.2": {"digest": "890e27e4725874b45aa18a0df5e1e83a7621bdb2bb3a9c073ba085844d8a8012"}}}, "openappsec/openappsec-evasion-techniques": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-evasion-techniques\ndescription: \"Detect openappsec 'prevent' securityActions on 'Evasion Techniques' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'evasion techniques'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'Evasion Techniques' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Evasion Techniques' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-evasion-techniques.yaml", "version": "0.2", "versions": {"0.1": {"digest": "65dba84b391cef5817a1d6ce4e15335f9dfb9494ee95818c43dcf56069b39800"}, "0.2": {"digest": "d3561fcdcec8f943aa5bbeb7d5b8c80b782c71ad70b6891f570b050e70954956"}}}, "openappsec/openappsec-general": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-general\ndescription: \"Detect openappsec 'prevent' securityActions on 'General' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'general'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'general' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'General' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-general.yaml", "version": "0.2", "versions": {"0.1": {"digest": "957a11028e7acc2818e6211a8e694fcc23456e158de5c4a68b839a497d61bc08"}, "0.2": {"digest": "dab3b58b3a506b4b562b7ef3963a14076c9bc48ef29426bd30a0e19bb7cbecdb"}}}, "openappsec/openappsec-http-limit-violation": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-http-limit-violation\ndescription: \"Detect openappsec 'prevent' securityActions on 'Http limit violation' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'http limit violation'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:spam\"\n  label: \"Openappsec 'http limit violation' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Http limit violation' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-http-limit-violation.yaml", "version": "0.2", "versions": {"0.1": {"digest": "fb6955f977a48384eaf944a3fa22f197ceb7cd997dc6d871ac8adb0af23b4642"}, "0.2": {"digest": "2050cb2b8128ea8ce53cdc4fa1e43500ef9f11305ee4856a11801044e9f5644e"}}}, "openappsec/openappsec-http-method-violation": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-http-method-violation\ndescription: \"Detect openappsec 'prevent' securityActions on 'Illegal http method violation' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'illegal http method violation'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'illegal http method violation' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Illegal http method violation' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-http-method-violation.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1111724d5182ee0e33d275633b9e5230bfab7956f06cda6348593f6eace2df6f"}, "0.2": {"digest": "f4ca829b97b0ee227fd90be71be8fd475eb63f791452ca634ff233e3085530a3"}}}, "openappsec/openappsec-ldap-injection": {"content": "type: trigger\ndebug: false\nname: openappsec/openappsec-ldap-injection\ndescription: \"Detect openappsec 'prevent' securityActions on 'LDAP Injection' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'ldap injection'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'ldap injection' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'LDAP Injection' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-ldap-injection.yaml", "version": "0.2", "versions": {"0.1": {"digest": "37056e311beb6d0213db74c273774e30a978d490dc3af7c15db3ec5df20ca752"}, "0.2": {"digest": "042aff245e25ab509b7f578848a97cd2131abe492636126006e323d63b1dd0b3"}}}, "openappsec/openappsec-open-redirect": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-open-redirect\ndescription: \"Detect openappsec 'prevent' securityActions on 'Open Redirect' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'open redirect'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1189\n    - attack.T1566\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'open redirect' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Open Redirect' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-open-redirect.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1fa3254fa19e895e3209d06518d8947ccc895979f425d76c023030b8a2e098ec"}, "0.2": {"digest": "bffcbad62ab71fb63aeba4405fcef5a2d623d9bf98032103ab859837ea478a9b"}}}, "openappsec/openappsec-path-traversal": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-path-traversal\ndescription: \"Detect openappsec 'prevent' securityActions on 'Path Traversal' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'path traversal'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'path traversal' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Path Traversal' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-path-traversal.yaml", "version": "0.2", "versions": {"0.1": {"digest": "21763dd00a0bc8970f94dc79a2d0ae5bab8684bc5af503f2d2a6335b0cea68a8"}, "0.2": {"digest": "4cb2b83be3ef0204a5acfa8f7b125fb74c2a017cd202af60d3c1ce3d903ee60c"}}}, "openappsec/openappsec-probing": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-probing\ndescription: \"Detect openappsec 'prevent' securityActions on 'Vulnerability Scanning' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'vulnerability scanning'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:scan\"\n  label: \"Openappsec 'probing' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Vulnerability Scanning' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-probing.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6add1b1101bbb54c961329ec9b14b160b98b4c24661a7448c8e4469ffb167973"}, "0.2": {"digest": "9de0d6dcba782e7bd114951fe8933710c79743ec858878c53b8d658436967e12"}}}, "openappsec/openappsec-rce": {"content": "type: trigger\ndebug: false\nname: openappsec/openappsec-rce\ndescription: \"Detect openappsec 'prevent' securityActions on 'Remote Code Execution' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'remote code execution'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'rce' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Remote Code Execution' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-rce.yaml", "version": "0.2", "versions": {"0.1": {"digest": "fc5691b14b1d2e38f1fef9f430107a8b31d7825e503ef33c6b11ac9f34c37f62"}, "0.2": {"digest": "a6a032e95fb4d61eb3c19ff5ee263b97f12e72052e9b41222de3758263d5d2cd"}}}, "openappsec/openappsec-request-rate-limit": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-request-rate-limit\ndescription: \"Detect openappsec 'prevent' securityActions on 'Request Rate Limit' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'request rate limit'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1498\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:bruteforce\"\n  label: \"Openappsec 'request rate limit' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Request Rate Limit' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-request-rate-limit.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8e915688ead3b21a9660ad94521098df7e152ef74822d96df0d29d09b3625377"}, "0.2": {"digest": "98c6638dda03c0b6ffb29bcb5b09571890eae5c764a0d7ab3c9678d0458680f6"}}}, "openappsec/openappsec-schema-validation": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-schema-validation\ndescription: \"Detect openappsec 'prevent' securityActions on 'Schema Validation' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'schema validation'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1190\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'schema validations' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Schema Validation' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-schema-validation.yaml", "version": "0.2", "versions": {"0.1": {"digest": "5db74f61a78169a46c9e57c8d9b29cfff2ae4f5f89b2a0acffa6a54a1bebdf57"}, "0.2": {"digest": "ed81a89e2acacea4ced7ba6461a4449b2c52cce41ea004e8e699f259000c0b95"}}}, "openappsec/openappsec-sql-injection": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-sql-injection\ndescription: \"Detect openappsec 'prevent' securityActions on 'SQL Injection' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'sql injection'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'SQL Injection' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'SQL Injection' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-sql-injection.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1b9c623f1c1a7b7147154264aca614b2aadcdb8fe6d25a1362caee43e5644912"}, "0.2": {"digest": "ef6a4c2887b8080047e8aae572272424d3d7e44ddc9c3dda913d5cbb616e1bec"}}}, "openappsec/openappsec-url-instead-of-file": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-url-instead-of-file\ndescription: \"Detect openappsec 'prevent' securityActions on 'URL instead of file' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'url instead of file'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'url instead of file' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'URL instead of file' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-url-instead-of-file.yaml", "version": "0.2", "versions": {"0.1": {"digest": "370c0b576759dcc3fe7f2fe1809723eb761598c94cc8432cc2781d4691f0b296"}, "0.2": {"digest": "13f6f3de0158e49291738a0c83ab27c48f4d9c97ff9a2c53d97a92fbe0b2c510"}}}, "openappsec/openappsec-xss": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-xss\ndescription: \"Detect openappsec 'prevent' securityActions on 'Cross Site Scripting' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'cross site scripting'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1189\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'XSS' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Cross Site Scripting' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-xss.yaml", "version": "0.2", "versions": {"0.1": {"digest": "43cb006041497512db66ac2dbff9ebe799d524685f5a57e4c0e8721ff4d19de7"}, "0.2": {"digest": "4162af0592925a3de3c136c16e42a1ecc7b94d293867779092a252c371483c8a"}}}, "openappsec/openappsec-xxe": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-xxe\ndescription: \"Detect openappsec 'prevent' securityActions on 'XML External Entity' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'xml external entity'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1595\n    - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'XML External Entity' detection\"\n  remediation: true\n  service: http\n", "description": "Detect openappsec 'prevent' securityActions on 'XML External Entity' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-xxe.yaml", "version": "0.2", "versions": {"0.1": {"digest": "d7d63f2b84a74fa26697fd74d78f9fc187a54ace8b0dc1e1ae28aacf055892a5"}, "0.2": {"digest": "6bcf9558fb7681b4293a7b1d5a705b9f5fd49d2ea6c332354251eba271203195"}}}, "plague-doctor/audiobookshelf-bf": {"content": "# Audiobookshelf bruteforce\ntype: leaky\nname: plague-doctor/audiobookshelf-bf\ndescription: \"Detect Audiobookshelf bruteforce attacks\"\nfilter: \"evt.Meta.service == 'audiobookshelf' && evt.Meta.log_type == 'abs_failed_auth'\"\nleakspeed: 1m\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n    service: audiobookshelf\n    type: bruteforce\n    classification:\n        - attack.T1110\n    remediation: true\n    behavior: http:bruteforce\n    spoofable: 0\n    confidence: 3\n", "description": "Detect Audiobookshelf bruteforce attacks", "path": "scenarios/plague-doctor/audiobookshelf-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "08ef8732de86ad3bb63236130482608dd1634b6fc2c28577ea87dd1aed9002b9"}}}, "schiz0phr3ne/prowlarr-bf": {"content": "# Prowlarr bruteforce\ntype: leaky\nname: schiz0phr3ne/prowlarr-bf\ndescription: \"Detect Prowlarr bruteforce\"\nfilter: \"evt.Meta.log_type in ['prowlarr_failed_authentication']\"\nleakspeed: \"15s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: prowlarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Prowlarr Bruteforce\"\n  remediation: true\n---\n# Prowlarr user enum bruteforce\ntype: leaky\nname: schiz0phr3ne/prowlarr-bf_user-enum\ndescription: \"Detect Prowlarr user enum bruteforce\"\nfilter: \"evt.Meta.log_type in ['prowlarr_failed_authentication']\"\nleakspeed: \"30s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: prowlarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Prowlarr User Enumeration\"\n  remediation: true\n", "description": "Detect Prowlarr bruteforce", "path": "scenarios/schiz0phr3ne/prowlarr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "feac3b8dda8d9841c36edd56c9e4504d4be3f3cf6027e67c00fb8f2f6b6784ee"}, "0.2": {"digest": "97580733f96cea718dea67b07f9a3f1e27091623f38290c04c2dcbb81d63394d"}}}, "schiz0phr3ne/radarr-bf": {"content": "# Radarr bruteforce\ntype: leaky\nname: schiz0phr3ne/radarr-bf\ndescription: \"Detect Radarr bruteforce\"\nfilter: \"evt.Meta.log_type in ['radarr_failed_authentication']\"\nleakspeed: \"15s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: radarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Radarr Bruteforce\"\n  remediation: true\n---\n# Radarr user enum bruteforce\ntype: leaky\nname: schiz0phr3ne/radarr-bf_user-enum\ndescription: \"Detect Radarr user enum bruteforce\"\nfilter: \"evt.Meta.log_type in ['radarr_failed_authentication']\"\nleakspeed: \"30s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: radarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Radarr User Enumeration\"\n  remediation: true\n", "description": "Detect Radarr bruteforce", "path": "scenarios/schiz0phr3ne/radarr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "e4917c28697b2e60f6324f0daa7c844154a852ba7db95080575fb428a1596786"}, "0.2": {"digest": "00abe1e708f2f2f19ad43a44f004fb6f2f0b6c46238196412545a2e17d32a1b8"}}}, "schiz0phr3ne/sonarr-bf": {"content": "# Sonarr bruteforce\ntype: leaky\nname: schiz0phr3ne/sonarr-bf\ndescription: \"Detect Sonarr bruteforce\"\nfilter: \"evt.Meta.log_type in ['sonarr_failed_authentication']\"\nleakspeed: \"15s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: sonarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Sonarr Bruteforce\"\n  remediation: true\n---\n# Sonarr user enum bruteforce\ntype: leaky\nname: schiz0phr3ne/sonarr-bf_user-enum\ndescription: \"Detect Sonarr user enum bruteforce\"\nfilter: \"evt.Meta.log_type in ['sonarr_failed_authentication']\"\nleakspeed: \"30s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: sonarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Sonarr User Enumeration\"\n  remediation: true\n", "description": "Detect Sonarr bruteforce", "path": "scenarios/schiz0phr3ne/sonarr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "110d81a708fdb4d201495e61619d2d36acb24d8e8b8a6e55e2210517618aaff1"}, "0.2": {"digest": "0bbff63af5b5b9c8179c29111f500b068a45787e519a4c497a7bd10b397f5ea2"}}}, "thespad/sshesame-honeypot": {"content": "# sshesame bruteforce\ntype: leaky\nname: thespad/sshesame-bf\ndescription: \"Detect sshesame bruteforce\"\nfilter: \"evt.Meta.log_type == 'sshesame_login'\"\nleakspeed: \"30m\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: sshesame\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"SSHesame Bruteforce\"\n  remediation: true\n---\n# sshesame commands\ntype: trigger\nname: thespad/sshesame-cmd\ndescription: \"Detect sshesame commands\"\nfilter: \"evt.Meta.log_type == 'sshesame_cmd'\"\ncapacity: 0\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: sshesame\n  type: command\n  behavior: \"ssh:bruteforce\"\n  classification:\n    - attack.T1059\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# sshesame input\ntype: leaky\nname: thespad/sshesame-input\ndescription: \"Detect sshesame input spam\"\nfilter: \"evt.Meta.log_type == 'sshesame_input'\"\nleakspeed: \"5m\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: sshesame\n  behavior: \"ssh:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1059\n  remediation: true\n", "description": "Detect sshesame bruteforce", "path": "scenarios/thespad/sshesame-honeypot.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0818e9e2be666b4e6315050b7fa96f82dc47b6010c07704370738875842c160b"}, "0.2": {"digest": "a6120c94b2390d7deea3b79407e37870e084fed11d08bd7434162ce6f84257a5"}, "0.3": {"digest": "950cf9776305bfb38f8711a5d5a2ed59f533e40e51666b0393d0117634bf4799"}}}, "timokoessler/gitlab-bf": {"content": "# gitlab bruteforce\ntype: leaky\nname: timokoessler/gitlab-bf\ndescription: \"Detect gitlab bruteforce\"\nfilter: \"evt.Meta.log_type in ['gitlab_failed_password', 'gitlab_failed_totp']\"\nleakspeed: \"20s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: gitlab\n  behavior: \"vcs:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Gitlab Bruteforce\"\n  remediation: true\n---\n# gitlab user enum bruteforce\ntype: leaky\nname: timokoessler/gitlab-bf_user-enum\ndescription: \"Detect gitlab user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'gitlab_failed_password'\"\nleakspeed: \"40s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: gitlab\n  behavior: \"vcs:bruteforce\"\n  classification:\n    - attack.T1589\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Gitlab User Enumeration\"\n  remediation: true\n", "description": "Detect gitlab bruteforce", "path": "scenarios/timokoessler/gitlab-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c41f3f4003eeb331fa35aa2ace0e861a674992efdb5a26c5f9d447db40a67eca"}, "0.2": {"digest": "2cd1a9d5dfd164c06ed4dd7a89104e1f25251ab4eb35c8f8f66890fbd127a6f5"}}}, "timokoessler/mongodb-bf": {"content": "# mongodb bruteforce\ntype: leaky\nname: timokoessler/mongodb-bf\ndescription: \"Detect mongodb bruteforce\"\nfilter: \"evt.Meta.log_type == 'mongodb_failed_auth'\"\nleakspeed: \"20s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: mongodb\n  classification:\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MongoDB Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# mongodb user enum bruteforce\ntype: leaky\nname: timokoessler/mongodb-bf_user-enum\ndescription: \"Detect mongodb user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'mongodb_failed_auth'\"\nleakspeed: \"40s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: mongodb\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MongoDB User Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# mongodb authentication database enum bruteforce\ntype: leaky\nname: timokoessler/mongodb-bf_auth-db-enum\ndescription: \"Detect mongodb authentication database enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'mongodb_failed_auth'\"\nleakspeed: \"40s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.authentication_database\nblackhole: 1m\nreprocess: true\nlabels:\n  service: mongodb\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MongoDB Authentication Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n", "description": "Detect mongodb bruteforce", "path": "scenarios/timokoessler/mongodb-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "2091dbe9f9e71d2f31a6c6dbcd1aaa5b8eb8215925bfdf8a36f9b3c1624cffcf"}, "0.2": {"digest": "df5a0f8e6bad0a57e451ba4c06adb9a2852b45a9c717917ff254b8d78ce06f80"}}}, "timokoessler/uptime-kuma-bf": {"content": "# Uptime Kuma bruteforce\ntype: leaky\nname: timokoessler/uptime-kuma-bf\ndescription: \"Detect Uptime Kuma bruteforce\"\nfilter: \"evt.Meta.log_type in ['uptime_kuma_failed_password', 'uptime_kuma_failed_totp']\"\nleakspeed: \"15s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: uptime-kuma\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Uptime Kuma Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# Uptime Kuma user enum bruteforce\ntype: leaky\nname: timokoessler/uptime-kuma-bf_user-enum\ndescription: \"Detect Uptime Kuma user enum bruteforce\"\nfilter: \"evt.Meta.log_type in ['uptime_kuma_failed_password', 'uptime_kuma_failed_totp']\"\nleakspeed: \"30s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: uptime-kuma\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Uptime Kuma User Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n", "description": "Detect Uptime Kuma bruteforce", "path": "scenarios/timokoessler/uptime-kuma-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a50fbbc0db115694fc140607f27688c499d63b3702b2bc596809f3cfaeb58c02"}, "0.2": {"digest": "c78efdf197b94e8be0540b5d6e1bfa6c926cda8e8bd51969d8db4c3960eb9f04"}}}, "xs539/bookstack-bf": {"content": "type: leaky\nname: xs539/bookstack-bf\ndescription: \"Detect bookstack bruteforce\"\nfilter: \"evt.Meta.log_type == 'bookstack_failed_auth'\"\ngroupby: evt.Meta.source_ip\nleakspeed: 15m\ncapacity: 3\nblackhole: 1m\nlabels:\n  service: bookstack\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Bookstack Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\ntype: leaky\nname:  xs539/bookstack-bf_user-enum\ndescription: \"Detect bookstack bruteforce\"\nfilter: \"evt.Meta.log_type == 'bookstack_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 15m\ncapacity: 3\nblackhole: 1m\nlabels:\n  service: bookstack\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Bookstack User Enumeration\"\n  behavior: \"http:bruteforce\"\n  remediation: true", "description": "Detect bookstack bruteforce", "path": "scenarios/xs539/bookstack-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "828ad724c5f1e4753fcb812c7aea04fac5be2f1c0ef336bde572515496e6f3ff"}, "0.2": {"digest": "808f23a3c6324bfff37364a37ab62141ac8e0c124486a999ca9382ba8362de6e"}}}, "xs539/joplin-server-bf": {"content": "type: leaky\nname: xs539/joplin-server-bf\ndescription: \"Detect Joplin Server bruteforce\"\nfilter: \"evt.Meta.log_type == 'joplin_server_failed_auth'\"\ngroupby: evt.Meta.source_ip\nleakspeed: 15m\ncapacity: 3\nblackhole: 1m\nlabels:\n  service: joplin\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Joplin Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\ntype: leaky\nname:  xs539/joplin-server-bf_user-enum\ndescription: \"Detect Joplin Server bruteforce\"\nfilter: \"evt.Meta.log_type == 'joplin_server_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 15m\ncapacity: 3\nblackhole: 1m\nlabels:\n  service: joplin\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Joplin User Enumeration\"\n  behavior: \"http:bruteforce\"\n  remediation: true", "description": "Detect Joplin Server bruteforce", "path": "scenarios/xs539/joplin-server-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0c145a9d2072160940cb9de1d84b19a92df3b5227581f008481a505f74301ffb"}, "0.2": {"digest": "5ffec4624031734a05c87617f2d4a242b04ab9ca5cfe54c78d4f2a91835ae7f3"}, "0.3": {"digest": "edb791f6bdcaca842a71097a78202b717ba499dad029513f71154e4a22e5b67e"}}}}}